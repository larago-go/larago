{
  "version": 3,
  "sources": ["../src/components/combobox/combobox.ts", "../src/utils/render.ts", "../src/utils/match.ts", "../src/hooks/use-id.ts", "../src/utils/calculate-active-index.ts", "../src/utils/dom.ts", "../src/internal/open-closed.ts", "../src/hooks/use-resolve-button-type.ts", "../src/hooks/use-tree-walker.ts", "../src/utils/env.ts", "../src/utils/owner.ts", "../src/utils/focus-management.ts", "../src/hooks/use-outside-click.ts", "../src/hooks/use-document-event.ts", "../src/internal/hidden.ts", "../src/utils/form.ts", "../src/hooks/use-controllable.ts", "../src/hooks/use-tracked-pointer.ts", "../src/utils/platform.ts", "../src/components/dialog/dialog.ts", "../src/components/focus-trap/focus-trap.ts", "../src/hooks/use-tab-direction.ts", "../src/hooks/use-window-event.ts", "../src/hooks/use-event-listener.ts", "../src/utils/micro-task.ts", "../src/hooks/use-inert-others.ts", "../src/components/portal/portal.ts", "../src/internal/portal-force-root.ts", "../src/internal/stack-context.ts", "../src/components/description/description.ts", "../src/hooks/use-store.ts", "../src/utils/disposables.ts", "../src/utils/store.ts", "../src/hooks/document-overflow/adjust-scrollbar-padding.ts", "../src/hooks/document-overflow/handle-ios-locking.ts", "../src/hooks/document-overflow/prevent-scroll.ts", "../src/hooks/document-overflow/overflow-store.ts", "../src/hooks/document-overflow/use-document-overflow.ts", "../src/components/disclosure/disclosure.ts", "../src/components/listbox/listbox.ts", "../src/components/menu/menu.ts", "../src/components/popover/popover.ts", "../src/components/radio-group/radio-group.ts", "../src/components/label/label.ts", "../src/components/switch/switch.ts", "../src/components/tabs/tabs.ts", "../src/internal/focus-sentinel.ts", "../src/components/transitions/transition.ts", "../src/utils/once.ts", "../src/components/transitions/utils/transition.ts"],
  "sourcesContent": ["import {\n  Fragment,\n  computed,\n  defineComponent,\n  h,\n  inject,\n  nextTick,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  toRaw,\n  watch,\n  watchEffect,\n\n  // Types\n  ComputedRef,\n  InjectionKey,\n  PropType,\n  Ref,\n  UnwrapNestedRefs,\n} from 'vue'\n\nimport { Features, render, omit, compact } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { calculateActiveIndex, Focus } from '../../utils/calculate-active-index'\nimport { dom } from '../../utils/dom'\nimport { useOpenClosed, State, useOpenClosedProvider } from '../../internal/open-closed'\nimport { match } from '../../utils/match'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\nimport { sortByDomNode } from '../../utils/focus-management'\nimport { useOutsideClick } from '../../hooks/use-outside-click'\nimport { Hidden, Features as HiddenFeatures } from '../../internal/hidden'\nimport { objectToFormEntries } from '../../utils/form'\nimport { useControllable } from '../../hooks/use-controllable'\nimport { useTrackedPointer } from '../../hooks/use-tracked-pointer'\nimport { isMobile } from '../../utils/platform'\n\nfunction defaultComparator<T>(a: T, z: T): boolean {\n  return a === z\n}\n\nenum ComboboxStates {\n  Open,\n  Closed,\n}\n\nenum ValueMode {\n  Single,\n  Multi,\n}\n\nenum ActivationTrigger {\n  Pointer,\n  Other,\n}\n\ntype ComboboxOptionData = {\n  disabled: boolean\n  value: unknown\n  domRef: Ref<HTMLElement | null>\n}\ntype StateDefinition = {\n  // State\n  comboboxState: Ref<ComboboxStates>\n  value: ComputedRef<unknown>\n  defaultValue: ComputedRef<unknown>\n\n  mode: ComputedRef<ValueMode>\n  nullable: ComputedRef<boolean>\n\n  compare: (a: unknown, z: unknown) => boolean\n\n  optionsPropsRef: Ref<{ static: boolean; hold: boolean }>\n\n  labelRef: Ref<HTMLLabelElement | null>\n  inputRef: Ref<HTMLInputElement | null>\n  buttonRef: Ref<HTMLButtonElement | null>\n  optionsRef: Ref<HTMLDivElement | null>\n\n  disabled: Ref<boolean>\n  options: Ref<{ id: string; dataRef: ComputedRef<ComboboxOptionData> }[]>\n  activeOptionIndex: Ref<number | null>\n  activationTrigger: Ref<ActivationTrigger>\n\n  // State mutators\n  closeCombobox(): void\n  openCombobox(): void\n  goToOption(focus: Focus, id?: string, trigger?: ActivationTrigger): void\n  change(value: unknown): void\n  selectOption(id: string): void\n  selectActiveOption(): void\n  registerOption(id: string, dataRef: ComputedRef<ComboboxOptionData>): void\n  unregisterOption(id: string): void\n  select(value: unknown): void\n}\n\nlet ComboboxContext = Symbol('ComboboxContext') as InjectionKey<StateDefinition>\n\nfunction useComboboxContext(component: string) {\n  let context = inject(ComboboxContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Combobox /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useComboboxContext)\n    throw err\n  }\n\n  return context\n}\n\n// ---\n\nexport let Combobox = defineComponent({\n  name: 'Combobox',\n  emits: { 'update:modelValue': (_value: any) => true },\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    disabled: { type: [Boolean], default: false },\n    by: { type: [String, Function], default: () => defaultComparator },\n    modelValue: {\n      type: [Object, String, Number, Boolean] as PropType<\n        object | string | number | boolean | null\n      >,\n      default: undefined,\n    },\n    defaultValue: {\n      type: [Object, String, Number, Boolean] as PropType<\n        object | string | number | boolean | null\n      >,\n      default: undefined,\n    },\n    name: { type: String },\n    nullable: { type: Boolean, default: false },\n    multiple: { type: [Boolean], default: false },\n  },\n  inheritAttrs: false,\n  setup(props, { slots, attrs, emit }) {\n    let comboboxState = ref<StateDefinition['comboboxState']['value']>(ComboboxStates.Closed)\n    let labelRef = ref<StateDefinition['labelRef']['value']>(null)\n    let inputRef = ref<StateDefinition['inputRef']['value']>(null) as StateDefinition['inputRef']\n    let buttonRef = ref<StateDefinition['buttonRef']['value']>(null) as StateDefinition['buttonRef']\n    let optionsRef = ref<StateDefinition['optionsRef']['value']>(\n      null\n    ) as StateDefinition['optionsRef']\n    let optionsPropsRef = ref<StateDefinition['optionsPropsRef']['value']>({\n      static: false,\n      hold: false,\n    }) as StateDefinition['optionsPropsRef']\n    let options = ref<StateDefinition['options']['value']>([])\n    let activeOptionIndex = ref<StateDefinition['activeOptionIndex']['value']>(null)\n    let activationTrigger = ref<StateDefinition['activationTrigger']['value']>(\n      ActivationTrigger.Other\n    )\n    let defaultToFirstOption = ref(false)\n\n    function adjustOrderedState(\n      adjustment: (\n        options: UnwrapNestedRefs<StateDefinition['options']['value']>\n      ) => UnwrapNestedRefs<StateDefinition['options']['value']> = (i) => i\n    ) {\n      let currentActiveOption =\n        activeOptionIndex.value !== null ? options.value[activeOptionIndex.value] : null\n\n      let sortedOptions = sortByDomNode(adjustment(options.value.slice()), (option) =>\n        dom(option.dataRef.domRef)\n      )\n\n      // If we inserted an option before the current active option then the active option index\n      // would be wrong. To fix this, we will re-lookup the correct index.\n      let adjustedActiveOptionIndex = currentActiveOption\n        ? sortedOptions.indexOf(currentActiveOption)\n        : null\n\n      // Reset to `null` in case the currentActiveOption was removed.\n      if (adjustedActiveOptionIndex === -1) {\n        adjustedActiveOptionIndex = null\n      }\n\n      return {\n        options: sortedOptions,\n        activeOptionIndex: adjustedActiveOptionIndex,\n      }\n    }\n\n    let mode = computed(() => (props.multiple ? ValueMode.Multi : ValueMode.Single))\n    let nullable = computed(() => props.nullable)\n    let [value, theirOnChange] = useControllable(\n      computed(() =>\n        props.modelValue === undefined\n          ? match(mode.value, {\n              [ValueMode.Multi]: [],\n              [ValueMode.Single]: undefined,\n            })\n          : props.modelValue\n      ),\n      (value: unknown) => emit('update:modelValue', value),\n      computed(() => props.defaultValue)\n    )\n\n    let api = {\n      comboboxState,\n      value,\n      mode,\n      compare(a: any, z: any) {\n        if (typeof props.by === 'string') {\n          let property = props.by as unknown as any\n          return a?.[property] === z?.[property]\n        }\n        return props.by(a, z)\n      },\n      defaultValue: computed(() => props.defaultValue),\n      nullable,\n      inputRef,\n      labelRef,\n      buttonRef,\n      optionsRef,\n      disabled: computed(() => props.disabled),\n      options,\n      change(value: unknown) {\n        theirOnChange(value as typeof props.modelValue)\n      },\n      activeOptionIndex: computed(() => {\n        if (\n          defaultToFirstOption.value &&\n          activeOptionIndex.value === null &&\n          options.value.length > 0\n        ) {\n          let localActiveOptionIndex = options.value.findIndex((option) => !option.dataRef.disabled)\n          if (localActiveOptionIndex !== -1) {\n            return localActiveOptionIndex\n          }\n        }\n\n        return activeOptionIndex.value\n      }),\n      activationTrigger,\n      optionsPropsRef,\n      closeCombobox() {\n        defaultToFirstOption.value = false\n\n        if (props.disabled) return\n        if (comboboxState.value === ComboboxStates.Closed) return\n        comboboxState.value = ComboboxStates.Closed\n        activeOptionIndex.value = null\n      },\n      openCombobox() {\n        defaultToFirstOption.value = true\n\n        if (props.disabled) return\n        if (comboboxState.value === ComboboxStates.Open) return\n\n        // Check if we have a selected value that we can make active.\n        let optionIdx = options.value.findIndex((option) => {\n          let optionValue = toRaw(option.dataRef.value)\n          let selected = match(mode.value, {\n            [ValueMode.Single]: () => api.compare(toRaw(api.value.value), toRaw(optionValue)),\n            [ValueMode.Multi]: () =>\n              (toRaw(api.value.value) as unknown[]).some((value) =>\n                api.compare(toRaw(value), toRaw(optionValue))\n              ),\n          })\n\n          return selected\n        })\n\n        if (optionIdx !== -1) {\n          activeOptionIndex.value = optionIdx\n        }\n\n        comboboxState.value = ComboboxStates.Open\n      },\n      goToOption(focus: Focus, id?: string, trigger?: ActivationTrigger) {\n        defaultToFirstOption.value = false\n\n        if (props.disabled) return\n        if (\n          optionsRef.value &&\n          !optionsPropsRef.value.static &&\n          comboboxState.value === ComboboxStates.Closed\n        ) {\n          return\n        }\n\n        let adjustedState = adjustOrderedState()\n\n        // It's possible that the activeOptionIndex is set to `null` internally, but\n        // this means that we will fallback to the first non-disabled option by default.\n        // We have to take this into account.\n        if (adjustedState.activeOptionIndex === null) {\n          let localActiveOptionIndex = adjustedState.options.findIndex(\n            (option) => !option.dataRef.disabled\n          )\n\n          if (localActiveOptionIndex !== -1) {\n            adjustedState.activeOptionIndex = localActiveOptionIndex\n          }\n        }\n\n        let nextActiveOptionIndex = calculateActiveIndex(\n          focus === Focus.Specific\n            ? { focus: Focus.Specific, id: id! }\n            : { focus: focus as Exclude<Focus, Focus.Specific> },\n          {\n            resolveItems: () => adjustedState.options,\n            resolveActiveIndex: () => adjustedState.activeOptionIndex,\n            resolveId: (option) => option.id,\n            resolveDisabled: (option) => option.dataRef.disabled,\n          }\n        )\n\n        activeOptionIndex.value = nextActiveOptionIndex\n        activationTrigger.value = trigger ?? ActivationTrigger.Other\n        options.value = adjustedState.options\n      },\n      selectOption(id: string) {\n        let option = options.value.find((item) => item.id === id)\n        if (!option) return\n\n        let { dataRef } = option\n        theirOnChange(\n          match(mode.value, {\n            [ValueMode.Single]: () => dataRef.value,\n            [ValueMode.Multi]: () => {\n              let copy = toRaw(api.value.value as unknown[]).slice()\n              let raw = toRaw(dataRef.value)\n\n              let idx = copy.findIndex((value) => api.compare(raw, toRaw(value)))\n              if (idx === -1) {\n                copy.push(raw)\n              } else {\n                copy.splice(idx, 1)\n              }\n\n              return copy\n            },\n          })\n        )\n      },\n      selectActiveOption() {\n        if (api.activeOptionIndex.value === null) return\n\n        let { dataRef, id } = options.value[api.activeOptionIndex.value]\n        theirOnChange(\n          match(mode.value, {\n            [ValueMode.Single]: () => dataRef.value,\n            [ValueMode.Multi]: () => {\n              let copy = toRaw(api.value.value as unknown[]).slice()\n              let raw = toRaw(dataRef.value)\n\n              let idx = copy.findIndex((value) => api.compare(raw, toRaw(value)))\n              if (idx === -1) {\n                copy.push(raw)\n              } else {\n                copy.splice(idx, 1)\n              }\n\n              return copy\n            },\n          })\n        )\n\n        // It could happen that the `activeOptionIndex` stored in state is actually null,\n        // but we are getting the fallback active option back instead.\n        api.goToOption(Focus.Specific, id)\n      },\n      registerOption(id: string, dataRef: ComboboxOptionData) {\n        let option = { id, dataRef }\n        let adjustedState = adjustOrderedState((options) => [...options, option])\n\n        // Check if we have a selected value that we can make active.\n        if (activeOptionIndex.value === null) {\n          let optionValue = (dataRef.value as any).value\n          let selected = match(mode.value, {\n            [ValueMode.Single]: () => api.compare(toRaw(api.value.value), toRaw(optionValue)),\n            [ValueMode.Multi]: () =>\n              (toRaw(api.value.value) as unknown[]).some((value) =>\n                api.compare(toRaw(value), toRaw(optionValue))\n              ),\n          })\n\n          if (selected) {\n            adjustedState.activeOptionIndex = adjustedState.options.indexOf(option)\n          }\n        }\n\n        options.value = adjustedState.options\n        activeOptionIndex.value = adjustedState.activeOptionIndex\n        activationTrigger.value = ActivationTrigger.Other\n      },\n      unregisterOption(id: string) {\n        // When we are unregistering the currently active option, then we also have to make sure to\n        // reset the `defaultToFirstOption` flag, so that visually something is selected and the\n        // next time you press a key on your keyboard it will go to the proper next or previous\n        // option in the list.\n        //\n        // Since this was the active option and it could have been anywhere in the list, resetting\n        // to the very first option seems like a fine default. We _could_ be smarter about this by\n        // going to the previous / next item in list if we know the direction of the keyboard\n        // navigation, but that might be too complex/confusing from an end users perspective.\n        if (\n          api.activeOptionIndex.value !== null &&\n          api.options.value[api.activeOptionIndex.value]?.id === id\n        ) {\n          defaultToFirstOption.value = true\n        }\n\n        let adjustedState = adjustOrderedState((options) => {\n          let idx = options.findIndex((a) => a.id === id)\n          if (idx !== -1) options.splice(idx, 1)\n          return options\n        })\n\n        options.value = adjustedState.options\n        activeOptionIndex.value = adjustedState.activeOptionIndex\n        activationTrigger.value = ActivationTrigger.Other\n      },\n    }\n\n    // Handle outside click\n    useOutsideClick(\n      [inputRef, buttonRef, optionsRef],\n      () => api.closeCombobox(),\n      computed(() => comboboxState.value === ComboboxStates.Open)\n    )\n\n    // @ts-expect-error Types of property 'dataRef' are incompatible.\n    provide(ComboboxContext, api)\n    useOpenClosedProvider(\n      computed(() =>\n        match(comboboxState.value, {\n          [ComboboxStates.Open]: State.Open,\n          [ComboboxStates.Closed]: State.Closed,\n        })\n      )\n    )\n\n    let activeOption = computed(() =>\n      api.activeOptionIndex.value === null\n        ? null\n        : (options.value[api.activeOptionIndex.value].dataRef.value as any)\n    )\n\n    let form = computed(() => dom(inputRef)?.closest('form'))\n    onMounted(() => {\n      watch(\n        [form],\n        () => {\n          if (!form.value) return\n          if (props.defaultValue === undefined) return\n\n          function handle() {\n            api.change(props.defaultValue)\n          }\n\n          form.value.addEventListener('reset', handle)\n\n          return () => {\n            form.value?.removeEventListener('reset', handle)\n          }\n        },\n        { immediate: true }\n      )\n    })\n\n    return () => {\n      let { name, disabled, ...theirProps } = props\n      let slot = {\n        open: comboboxState.value === ComboboxStates.Open,\n        disabled,\n        activeIndex: api.activeOptionIndex.value,\n        activeOption: activeOption.value,\n        value: value.value,\n      }\n\n      return h(Fragment, [\n        ...(name != null && value.value != null\n          ? objectToFormEntries({ [name]: value.value }).map(([name, value]) => {\n              return h(\n                Hidden,\n                compact({\n                  features: HiddenFeatures.Hidden,\n                  key: name,\n                  as: 'input',\n                  type: 'hidden',\n                  hidden: true,\n                  readOnly: true,\n                  name,\n                  value,\n                })\n              )\n            })\n          : []),\n        render({\n          theirProps: {\n            ...attrs,\n            ...omit(theirProps, [\n              'modelValue',\n              'defaultValue',\n              'nullable',\n              'multiple',\n              'onUpdate:modelValue',\n              'by',\n            ]),\n          },\n          ourProps: {},\n          slot,\n          slots,\n          attrs,\n          name: 'Combobox',\n        }),\n      ])\n    }\n  },\n})\n\n// ---\n\nexport let ComboboxLabel = defineComponent({\n  name: 'ComboboxLabel',\n  props: {\n    as: { type: [Object, String], default: 'label' },\n    id: { type: String, default: () => `headlessui-combobox-label-${useId()}` },\n  },\n  setup(props, { attrs, slots }) {\n    let api = useComboboxContext('ComboboxLabel')\n\n    function handleClick() {\n      dom(api.inputRef)?.focus({ preventScroll: true })\n    }\n\n    return () => {\n      let slot = {\n        open: api.comboboxState.value === ComboboxStates.Open,\n        disabled: api.disabled.value,\n      }\n\n      let { id, ...theirProps } = props\n      let ourProps = { id, ref: api.labelRef, onClick: handleClick }\n\n      return render({\n        ourProps,\n        theirProps,\n        slot,\n        attrs,\n        slots,\n        name: 'ComboboxLabel',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let ComboboxButton = defineComponent({\n  name: 'ComboboxButton',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    id: { type: String, default: () => `headlessui-combobox-button-${useId()}` },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let api = useComboboxContext('ComboboxButton')\n\n    expose({ el: api.buttonRef, $el: api.buttonRef })\n\n    function handleClick(event: MouseEvent) {\n      if (api.disabled.value) return\n      if (api.comboboxState.value === ComboboxStates.Open) {\n        api.closeCombobox()\n      } else {\n        event.preventDefault()\n        api.openCombobox()\n      }\n\n      nextTick(() => dom(api.inputRef)?.focus({ preventScroll: true }))\n    }\n\n    function handleKeydown(event: KeyboardEvent) {\n      switch (event.key) {\n        // Ref: https://www.w3.org/WAI/ARIA/apg/patterns/menu/#keyboard-interaction-12\n\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          if (api.comboboxState.value === ComboboxStates.Closed) {\n            api.openCombobox()\n          }\n          nextTick(() => api.inputRef.value?.focus({ preventScroll: true }))\n          return\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          if (api.comboboxState.value === ComboboxStates.Closed) {\n            api.openCombobox()\n            nextTick(() => {\n              if (!api.value.value) {\n                api.goToOption(Focus.Last)\n              }\n            })\n          }\n          nextTick(() => api.inputRef.value?.focus({ preventScroll: true }))\n          return\n\n        case Keys.Escape:\n          if (api.comboboxState.value !== ComboboxStates.Open) return\n          event.preventDefault()\n          if (api.optionsRef.value && !api.optionsPropsRef.value.static) {\n            event.stopPropagation()\n          }\n          api.closeCombobox()\n          nextTick(() => api.inputRef.value?.focus({ preventScroll: true }))\n          return\n      }\n    }\n\n    let type = useResolveButtonType(\n      computed(() => ({ as: props.as, type: attrs.type })),\n      api.buttonRef\n    )\n\n    return () => {\n      let slot = {\n        open: api.comboboxState.value === ComboboxStates.Open,\n        disabled: api.disabled.value,\n        value: api.value.value,\n      }\n      let { id, ...theirProps } = props\n      let ourProps = {\n        ref: api.buttonRef,\n        id,\n        type: type.value,\n        tabindex: '-1',\n        'aria-haspopup': 'listbox',\n        'aria-controls': dom(api.optionsRef)?.id,\n        'aria-expanded': api.disabled.value\n          ? undefined\n          : api.comboboxState.value === ComboboxStates.Open,\n        'aria-labelledby': api.labelRef.value ? [dom(api.labelRef)?.id, id].join(' ') : undefined,\n        disabled: api.disabled.value === true ? true : undefined,\n        onKeydown: handleKeydown,\n        onClick: handleClick,\n      }\n\n      return render({\n        ourProps,\n        theirProps,\n        slot,\n        attrs,\n        slots,\n        name: 'ComboboxButton',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let ComboboxInput = defineComponent({\n  name: 'ComboboxInput',\n  props: {\n    as: { type: [Object, String], default: 'input' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n    displayValue: { type: Function as PropType<(item: unknown) => string> },\n    defaultValue: { type: String, default: undefined },\n    id: { type: String, default: () => `headlessui-combobox-input-${useId()}` },\n  },\n  emits: {\n    change: (_value: Event & { target: HTMLInputElement }) => true,\n  },\n  setup(props, { emit, attrs, slots, expose }) {\n    let api = useComboboxContext('ComboboxInput')\n\n    let isTyping = { value: false }\n\n    expose({ el: api.inputRef, $el: api.inputRef })\n\n    // When a `displayValue` prop is given, we should use it to transform the current selected\n    // option(s) so that the format can be chosen by developers implementing this. This is useful if\n    // your data is an object and you just want to pick a certain property or want to create a dynamic\n    // value like `firstName + ' ' + lastName`.\n    //\n    // Note: This can also be used with multiple selected options, but this is a very simple transform\n    // which should always result in a string (since we are filling in the value of the text input),\n    // you don't have to use this at all, a more common UI is a \"tag\" based UI, which you can render\n    // yourself using the selected option(s).\n    let currentDisplayValue = computed(() => {\n      let value = api.value.value\n      if (!dom(api.inputRef)) return ''\n\n      if (typeof props.displayValue !== 'undefined' && value !== undefined) {\n        return props.displayValue(value as unknown) ?? ''\n      } else if (typeof value === 'string') {\n        return value\n      } else {\n        return ''\n      }\n    })\n\n    onMounted(() => {\n      // Syncing the input value has some rules attached to it to guarantee a smooth and expected user\n      // experience:\n      //\n      // - When a user is not typing in the input field, it is safe to update the input value based on\n      //   the selected option(s). See `currentDisplayValue` computation from above.\n      // - The value can be updated when:\n      //   - The `value` is set from outside of the component\n      //   - The `value` is set when the user uses their keyboard (confirm via enter or space)\n      //   - The `value` is set when the user clicks on a value to select it\n      // - The value will be reset to the current selected option(s), when:\n      //   - The user is _not_ typing (otherwise you will loose your current state / query)\n      //   - The user cancels the current changes:\n      //     - By pressing `escape`\n      //     - By clicking `outside` of the Combobox\n      watch(\n        [currentDisplayValue, api.comboboxState],\n        ([currentDisplayValue, state], [oldCurrentDisplayValue, oldState]) => {\n          if (isTyping.value) return\n          let input = dom(api.inputRef)\n          if (!input) return\n          if (oldState === ComboboxStates.Open && state === ComboboxStates.Closed) {\n            input.value = currentDisplayValue\n          } else if (currentDisplayValue !== oldCurrentDisplayValue) {\n            input.value = currentDisplayValue\n          }\n        },\n        { immediate: true }\n      )\n\n      // Trick VoiceOver in behaving a little bit better. Manually \"resetting\" the input makes\n      // VoiceOver a bit more happy and doesn't require some changes manually first before\n      // announcing items correctly. This is a bit of a hacks, but it is a workaround for a\n      // VoiceOver bug.\n      //\n      // TODO: VoiceOver is still relatively buggy if you start VoiceOver while the Combobox is\n      // already in an open state.\n      watch([api.comboboxState], ([newState], [oldState]) => {\n        if (newState === ComboboxStates.Open && oldState === ComboboxStates.Closed) {\n          let input = dom(api.inputRef)\n          if (!input) return\n\n          // Capture current state\n          let currentValue = input.value\n          let { selectionStart, selectionEnd, selectionDirection } = input\n\n          // Trick VoiceOver into announcing the value\n          input.value = ''\n\n          // Rollback to original state\n          input.value = currentValue\n          if (selectionDirection !== null) {\n            input.setSelectionRange(selectionStart, selectionEnd, selectionDirection)\n          } else {\n            input.setSelectionRange(selectionStart, selectionEnd)\n          }\n        }\n      })\n    })\n\n    let isComposing = ref(false)\n    function handleCompositionstart() {\n      isComposing.value = true\n    }\n    function handleCompositionend() {\n      setTimeout(() => {\n        isComposing.value = false\n      })\n    }\n\n    function handleKeyDown(event: KeyboardEvent) {\n      isTyping.value = true\n      switch (event.key) {\n        // Ref: https://www.w3.org/WAI/ARIA/apg/patterns/menu/#keyboard-interaction-12\n\n        case Keys.Backspace:\n        case Keys.Delete:\n          if (api.mode.value !== ValueMode.Single) return\n          if (!api.nullable.value) return\n\n          let input = event.currentTarget as HTMLInputElement\n          requestAnimationFrame(() => {\n            if (input.value === '') {\n              api.change(null)\n              let options = dom(api.optionsRef)\n              if (options) {\n                options.scrollTop = 0\n              }\n              api.goToOption(Focus.Nothing)\n            }\n          })\n          break\n\n        case Keys.Enter:\n          isTyping.value = false\n          if (api.comboboxState.value !== ComboboxStates.Open) return\n          if (isComposing.value) return\n\n          event.preventDefault()\n          event.stopPropagation()\n\n          if (api.activeOptionIndex.value === null) {\n            api.closeCombobox()\n            return\n          }\n\n          api.selectActiveOption()\n          if (api.mode.value === ValueMode.Single) {\n            api.closeCombobox()\n          }\n          break\n\n        case Keys.ArrowDown:\n          isTyping.value = false\n          event.preventDefault()\n          event.stopPropagation()\n          return match(api.comboboxState.value, {\n            [ComboboxStates.Open]: () => api.goToOption(Focus.Next),\n            [ComboboxStates.Closed]: () => api.openCombobox(),\n          })\n\n        case Keys.ArrowUp:\n          isTyping.value = false\n          event.preventDefault()\n          event.stopPropagation()\n          return match(api.comboboxState.value, {\n            [ComboboxStates.Open]: () => api.goToOption(Focus.Previous),\n            [ComboboxStates.Closed]: () => {\n              api.openCombobox()\n              nextTick(() => {\n                if (!api.value.value) {\n                  api.goToOption(Focus.Last)\n                }\n              })\n            },\n          })\n\n        case Keys.Home:\n          if (event.shiftKey) {\n            break\n          }\n\n          isTyping.value = false\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.First)\n\n        case Keys.PageUp:\n          isTyping.value = false\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.First)\n\n        case Keys.End:\n          if (event.shiftKey) {\n            break\n          }\n\n          isTyping.value = false\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.Last)\n\n        case Keys.PageDown:\n          isTyping.value = false\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.Last)\n\n        case Keys.Escape:\n          isTyping.value = false\n          if (api.comboboxState.value !== ComboboxStates.Open) return\n          event.preventDefault()\n          if (api.optionsRef.value && !api.optionsPropsRef.value.static) {\n            event.stopPropagation()\n          }\n          api.closeCombobox()\n          break\n\n        case Keys.Tab:\n          isTyping.value = false\n          if (api.comboboxState.value !== ComboboxStates.Open) return\n          if (api.mode.value === ValueMode.Single) api.selectActiveOption()\n          api.closeCombobox()\n          break\n      }\n    }\n\n    function handleChange(event: Event & { target: HTMLInputElement }) {\n      emit('change', event)\n    }\n\n    function handleInput(event: Event & { target: HTMLInputElement }) {\n      api.openCombobox()\n      emit('change', event)\n    }\n\n    function handleBlur() {\n      isTyping.value = false\n    }\n\n    let defaultValue = computed(() => {\n      return (\n        props.defaultValue ??\n        (api.defaultValue.value !== undefined\n          ? props.displayValue?.(api.defaultValue.value)\n          : null) ??\n        api.defaultValue.value ??\n        ''\n      )\n    })\n\n    return () => {\n      let slot = { open: api.comboboxState.value === ComboboxStates.Open }\n      let { id, displayValue, ...theirProps } = props\n      let ourProps = {\n        'aria-controls': api.optionsRef.value?.id,\n        'aria-expanded': api.disabled.value\n          ? undefined\n          : api.comboboxState.value === ComboboxStates.Open,\n        'aria-activedescendant':\n          api.activeOptionIndex.value === null\n            ? undefined\n            : api.options.value[api.activeOptionIndex.value]?.id,\n        'aria-labelledby': dom(api.labelRef)?.id ?? dom(api.buttonRef)?.id,\n        'aria-autocomplete': 'list',\n        id,\n        onCompositionstart: handleCompositionstart,\n        onCompositionend: handleCompositionend,\n        onKeydown: handleKeyDown,\n        onChange: handleChange,\n        onInput: handleInput,\n        onBlur: handleBlur,\n        role: 'combobox',\n        type: attrs.type ?? 'text',\n        tabIndex: 0,\n        ref: api.inputRef,\n        defaultValue: defaultValue.value,\n      }\n\n      return render({\n        ourProps,\n        theirProps,\n        slot,\n        attrs,\n        slots,\n        features: Features.RenderStrategy | Features.Static,\n        name: 'ComboboxInput',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let ComboboxOptions = defineComponent({\n  name: 'ComboboxOptions',\n  props: {\n    as: { type: [Object, String], default: 'ul' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n    hold: { type: [Boolean], default: false },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let api = useComboboxContext('ComboboxOptions')\n    let id = `headlessui-combobox-options-${useId()}`\n\n    expose({ el: api.optionsRef, $el: api.optionsRef })\n\n    watchEffect(() => {\n      api.optionsPropsRef.value.static = props.static\n    })\n\n    watchEffect(() => {\n      api.optionsPropsRef.value.hold = props.hold\n    })\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.comboboxState.value === ComboboxStates.Open\n    })\n\n    useTreeWalker({\n      container: computed(() => dom(api.optionsRef)),\n      enabled: computed(() => api.comboboxState.value === ComboboxStates.Open),\n      accept(node) {\n        if (node.getAttribute('role') === 'option') return NodeFilter.FILTER_REJECT\n        if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n        return NodeFilter.FILTER_ACCEPT\n      },\n      walk(node) {\n        node.setAttribute('role', 'none')\n      },\n    })\n\n    return () => {\n      let slot = { open: api.comboboxState.value === ComboboxStates.Open }\n      let ourProps = {\n        'aria-labelledby': dom(api.labelRef)?.id ?? dom(api.buttonRef)?.id,\n        id,\n        ref: api.optionsRef,\n        role: 'listbox',\n        'aria-multiselectable': api.mode.value === ValueMode.Multi ? true : undefined,\n      }\n      let theirProps = omit(props, ['hold'])\n\n      return render({\n        ourProps,\n        theirProps,\n        slot,\n        attrs,\n        slots,\n        features: Features.RenderStrategy | Features.Static,\n        visible: visible.value,\n        name: 'ComboboxOptions',\n      })\n    }\n  },\n})\n\nexport let ComboboxOption = defineComponent({\n  name: 'ComboboxOption',\n  props: {\n    as: { type: [Object, String], default: 'li' },\n    value: {\n      type: [Object, String, Number, Boolean] as PropType<\n        object | string | number | boolean | null\n      >,\n    },\n    disabled: { type: Boolean, default: false },\n  },\n  setup(props, { slots, attrs, expose }) {\n    let api = useComboboxContext('ComboboxOption')\n    let id = `headlessui-combobox-option-${useId()}`\n    let internalOptionRef = ref<HTMLElement | null>(null)\n\n    expose({ el: internalOptionRef, $el: internalOptionRef })\n\n    let active = computed(() => {\n      return api.activeOptionIndex.value !== null\n        ? api.options.value[api.activeOptionIndex.value].id === id\n        : false\n    })\n\n    let selected = computed(() =>\n      match(api.mode.value, {\n        [ValueMode.Single]: () => api.compare(toRaw(api.value.value), toRaw(props.value)),\n        [ValueMode.Multi]: () =>\n          (toRaw(api.value.value) as unknown[]).some((value) =>\n            api.compare(toRaw(value), toRaw(props.value))\n          ),\n      })\n    )\n\n    let dataRef = computed<ComboboxOptionData>(() => ({\n      disabled: props.disabled,\n      value: props.value,\n      domRef: internalOptionRef,\n    }))\n\n    onMounted(() => api.registerOption(id, dataRef))\n    onUnmounted(() => api.unregisterOption(id))\n\n    watchEffect(() => {\n      if (api.comboboxState.value !== ComboboxStates.Open) return\n      if (!active.value) return\n      if (api.activationTrigger.value === ActivationTrigger.Pointer) return\n      nextTick(() => dom(internalOptionRef)?.scrollIntoView?.({ block: 'nearest' }))\n    })\n\n    function handleClick(event: MouseEvent) {\n      if (props.disabled) return event.preventDefault()\n      api.selectOption(id)\n      if (api.mode.value === ValueMode.Single) {\n        api.closeCombobox()\n      }\n\n      // We want to make sure that we don't accidentally trigger the virtual keyboard.\n      //\n      // This would happen if the input is focused, the options are open, you select an option\n      // (which would blur the input, and focus the option (button), then we re-focus the input).\n      //\n      // This would be annoying on mobile (or on devices with a virtual keyboard). Right now we are\n      // assuming that the virtual keyboard would open on mobile devices (iOS / Android). This\n      // assumption is not perfect, but will work in the majority of the cases.\n      //\n      // Ideally we can have a better check where we can explicitly check for the virtual keyboard.\n      // But right now this is still an experimental feature:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Navigator/virtualKeyboard\n      if (!isMobile()) {\n        requestAnimationFrame(() => dom(api.inputRef)?.focus())\n      }\n    }\n\n    function handleFocus() {\n      if (props.disabled) return api.goToOption(Focus.Nothing)\n      api.goToOption(Focus.Specific, id)\n    }\n\n    let pointer = useTrackedPointer()\n\n    function handleEnter(evt: PointerEvent) {\n      pointer.update(evt)\n    }\n\n    function handleMove(evt: PointerEvent) {\n      if (!pointer.wasMoved(evt)) return\n      if (props.disabled) return\n      if (active.value) return\n      api.goToOption(Focus.Specific, id, ActivationTrigger.Pointer)\n    }\n\n    function handleLeave(evt: PointerEvent) {\n      if (!pointer.wasMoved(evt)) return\n      if (props.disabled) return\n      if (!active.value) return\n      if (api.optionsPropsRef.value.hold) return\n      api.goToOption(Focus.Nothing)\n    }\n\n    return () => {\n      let { disabled } = props\n      let slot = { active: active.value, selected: selected.value, disabled }\n      let ourProps = {\n        id,\n        ref: internalOptionRef,\n        role: 'option',\n        tabIndex: disabled === true ? undefined : -1,\n        'aria-disabled': disabled === true ? true : undefined,\n        // According to the WAI-ARIA best practices, we should use aria-checked for\n        // multi-select,but Voice-Over disagrees. So we use aria-selected instead for\n        // both single and multi-select.\n        'aria-selected': selected.value,\n        disabled: undefined, // Never forward the `disabled` prop\n        onClick: handleClick,\n        onFocus: handleFocus,\n        onPointerenter: handleEnter,\n        onMouseenter: handleEnter,\n        onPointermove: handleMove,\n        onMousemove: handleMove,\n        onPointerleave: handleLeave,\n        onMouseleave: handleLeave,\n      }\n\n      let theirProps = props\n\n      return render({\n        ourProps,\n        theirProps,\n        slot,\n        attrs,\n        slots,\n        name: 'ComboboxOption',\n      })\n    }\n  },\n})\n", "import { h, cloneVNode, Slots, Fragment, VNode } from 'vue'\nimport { match } from './match'\n\nexport enum Features {\n  /** No features at all */\n  None = 0,\n\n  /**\n   * When used, this will allow us to use one of the render strategies.\n   *\n   * **The render strategies are:**\n   *    - **Unmount**   _(Will unmount the component.)_\n   *    - **Hidden**    _(Will hide the component using the [hidden] attribute.)_\n   */\n  RenderStrategy = 1,\n\n  /**\n   * When used, this will allow the user of our component to be in control. This can be used when\n   * you want to transition based on some state.\n   */\n  Static = 2,\n}\n\nexport enum RenderStrategy {\n  Unmount,\n  Hidden,\n}\n\nexport function render({\n  visible = true,\n  features = Features.None,\n  ourProps,\n  theirProps,\n  ...main\n}: {\n  ourProps: Record<string, any>\n  theirProps: Record<string, any>\n  slot: Record<string, any>\n  attrs: Record<string, any>\n  slots: Slots\n  name: string\n} & {\n  features?: Features\n  visible?: boolean\n}) {\n  let props = mergeProps(theirProps, ourProps)\n  let mainWithProps = Object.assign(main, { props })\n\n  // Visible always render\n  if (visible) return _render(mainWithProps)\n\n  if (features & Features.Static) {\n    // When the `static` prop is passed as `true`, then the user is in control, thus we don't care about anything else\n    if (props.static) return _render(mainWithProps)\n  }\n\n  if (features & Features.RenderStrategy) {\n    let strategy = props.unmount ?? true ? RenderStrategy.Unmount : RenderStrategy.Hidden\n\n    return match(strategy, {\n      [RenderStrategy.Unmount]() {\n        return null\n      },\n      [RenderStrategy.Hidden]() {\n        return _render({\n          ...main,\n          props: { ...props, hidden: true, style: { display: 'none' } },\n        })\n      },\n    })\n  }\n\n  // No features enabled, just render\n  return _render(mainWithProps)\n}\n\nfunction _render({\n  props,\n  attrs,\n  slots,\n  slot,\n  name,\n}: {\n  props: Record<string, any>\n  slot: Record<string, any>\n  attrs: Record<string, any>\n  slots: Slots\n  name: string\n}) {\n  let { as, ...incomingProps } = omit(props, ['unmount', 'static'])\n\n  let children = slots.default?.(slot)\n\n  let dataAttributes: Record<string, string> = {}\n  if (slot) {\n    let exposeState = false\n    let states = []\n    for (let [k, v] of Object.entries(slot)) {\n      if (typeof v === 'boolean') {\n        exposeState = true\n      }\n      if (v === true) {\n        states.push(k)\n      }\n    }\n\n    if (exposeState) dataAttributes[`data-headlessui-state`] = states.join(' ')\n  }\n\n  if (as === 'template') {\n    children = flattenFragments(children ?? [])\n\n    if (Object.keys(incomingProps).length > 0 || Object.keys(attrs).length > 0) {\n      let [firstChild, ...other] = children ?? []\n\n      if (!isValidElement(firstChild) || other.length > 0) {\n        throw new Error(\n          [\n            'Passing props on \"template\"!',\n            '',\n            `The current component <${name} /> is rendering a \"template\".`,\n            `However we need to passthrough the following props:`,\n            Object.keys(incomingProps)\n              .concat(Object.keys(attrs))\n              .map((name) => name.trim())\n              .filter((current, idx, all) => all.indexOf(current) === idx)\n              .sort((a, z) => a.localeCompare(z))\n              .map((line) => `  - ${line}`)\n              .join('\\n'),\n            '',\n            'You can apply a few solutions:',\n            [\n              'Add an `as=\"...\"` prop, to ensure that we render an actual element instead of a \"template\".',\n              'Render a single element as the child so that we can forward the props onto that element.',\n            ]\n              .map((line) => `  - ${line}`)\n              .join('\\n'),\n          ].join('\\n')\n        )\n      }\n\n      let mergedProps = mergeProps(firstChild.props ?? {}, incomingProps)\n      let cloned = cloneVNode(firstChild, mergedProps)\n      // Explicitly override props starting with `on`. This is for event handlers, but there are\n      // scenario's where we set them to `undefined` explicitly (when `aria-disabled=\"true\"` is\n      // happening instead of `disabled`). But cloneVNode doesn't like overriding `onXXX` props so\n      // we have to do it manually.\n      for (let prop in mergedProps) {\n        if (prop.startsWith('on')) {\n          cloned.props ||= {}\n          cloned.props[prop] = mergedProps[prop]\n        }\n      }\n      return cloned\n    }\n\n    if (Array.isArray(children) && children.length === 1) {\n      return children[0]\n    }\n\n    return children\n  }\n\n  return h(as, Object.assign({}, incomingProps, dataAttributes), {\n    default: () => children,\n  })\n}\n\n/**\n * When passed a structure like this:\n * <Example><span>something</span></Example>\n *\n * And Example is defined as:\n * <SomeComponent><slot /></SomeComponent>\n *\n * We need to turn the fragment that <slot> represents into the slot.\n * Luckily by this point it's already rendered into an array of VNodes\n * for us so we can just flatten it directly.\n *\n * We have to do this recursively because there could be multiple\n * levels of Component nesting all with <slot> elements interspersed\n *\n * @param children\n * @returns\n */\nfunction flattenFragments(children: VNode[]): VNode[] {\n  return children.flatMap((child) => {\n    if (child.type === Fragment) {\n      return flattenFragments(child.children as VNode[])\n    }\n\n    return [child]\n  })\n}\n\nfunction mergeProps(...listOfProps: Record<any, any>[]) {\n  if (listOfProps.length === 0) return {}\n  if (listOfProps.length === 1) return listOfProps[0]\n\n  let target: Record<any, any> = {}\n\n  let eventHandlers: Record<\n    string,\n    ((event: { defaultPrevented: boolean }, ...args: any[]) => void | undefined)[]\n  > = {}\n\n  for (let props of listOfProps) {\n    for (let prop in props) {\n      // Collect event handlers\n      if (prop.startsWith('on') && typeof props[prop] === 'function') {\n        eventHandlers[prop] ??= []\n        eventHandlers[prop].push(props[prop])\n      } else {\n        // Override incoming prop\n        target[prop] = props[prop]\n      }\n    }\n  }\n\n  // Do not attach any event handlers when there is a `disabled` or `aria-disabled` prop set.\n  if (target.disabled || target['aria-disabled']) {\n    return Object.assign(\n      target,\n      // Set all event listeners that we collected to `undefined`. This is\n      // important because of the `cloneElement` from above, which merges the\n      // existing and new props, they don't just override therefore we have to\n      // explicitly nullify them.\n      Object.fromEntries(Object.keys(eventHandlers).map((eventName) => [eventName, undefined]))\n    )\n  }\n\n  // Merge event handlers\n  for (let eventName in eventHandlers) {\n    Object.assign(target, {\n      [eventName](event: { defaultPrevented: boolean }, ...args: any[]) {\n        let handlers = eventHandlers[eventName]\n\n        for (let handler of handlers) {\n          if (event instanceof Event && event.defaultPrevented) {\n            return\n          }\n\n          handler(event, ...args)\n        }\n      },\n    })\n  }\n\n  return target\n}\n\nexport function compact<T extends Record<any, any>>(object: T) {\n  let clone = Object.assign({}, object)\n  for (let key in clone) {\n    if (clone[key] === undefined) delete clone[key]\n  }\n  return clone\n}\n\nexport function omit<T extends Record<any, any>, Keys extends keyof T>(\n  object: T,\n  keysToOmit: readonly Keys[] = []\n) {\n  let clone = Object.assign({}, object) as T\n  for (let key of keysToOmit) {\n    if (key in clone) delete clone[key]\n  }\n  return clone as Omit<T, Keys>\n}\n\nfunction isValidElement(input: any): boolean {\n  if (input == null) return false // No children\n  if (typeof input.type === 'string') return true // 'div', 'span', ...\n  if (typeof input.type === 'object') return true // Other components\n  if (typeof input.type === 'function') return true // Built-ins like Transition\n  return false // Comments, strings, ...\n}\n", "export function match<TValue extends string | number = string, TReturnValue = unknown>(\n  value: TValue,\n  lookup: Record<TValue, TReturnValue | ((...args: any[]) => TReturnValue)>,\n  ...args: any[]\n): TReturnValue {\n  if (value in lookup) {\n    let returnValue = lookup[value]\n    return typeof returnValue === 'function' ? returnValue(...args) : returnValue\n  }\n\n  let error = new Error(\n    `Tried to handle \"${value}\" but there is no handler defined. Only defined handlers are: ${Object.keys(\n      lookup\n    )\n      .map((key) => `\"${key}\"`)\n      .join(', ')}.`\n  )\n  if (Error.captureStackTrace) Error.captureStackTrace(error, match)\n  throw error\n}\n", "let id = 0\nfunction generateId() {\n  return ++id\n}\n\nexport function useId() {\n  return generateId()\n}\n", "function assertNever(x: never): never {\n  throw new Error('Unexpected object: ' + x)\n}\n\nexport enum Focus {\n  /** Focus the first non-disabled item. */\n  First,\n\n  /** Focus the previous non-disabled item. */\n  Previous,\n\n  /** Focus the next non-disabled item. */\n  Next,\n\n  /** Focus the last non-disabled item. */\n  Last,\n\n  /** Focus a specific item based on the `id` of the item. */\n  Specific,\n\n  /** Focus no items at all. */\n  Nothing,\n}\n\nexport function calculateActiveIndex<TItem>(\n  action: { focus: Focus.Specific; id: string } | { focus: Exclude<Focus, Focus.Specific> },\n  resolvers: {\n    resolveItems(): TItem[]\n    resolveActiveIndex(): number | null\n    resolveId(item: TItem): string\n    resolveDisabled(item: TItem): boolean\n  }\n) {\n  let items = resolvers.resolveItems()\n  if (items.length <= 0) return null\n\n  let currentActiveIndex = resolvers.resolveActiveIndex()\n  let activeIndex = currentActiveIndex ?? -1\n\n  let nextActiveIndex = (() => {\n    switch (action.focus) {\n      case Focus.First:\n        return items.findIndex((item) => !resolvers.resolveDisabled(item))\n\n      case Focus.Previous: {\n        let idx = items\n          .slice()\n          .reverse()\n          .findIndex((item, idx, all) => {\n            if (activeIndex !== -1 && all.length - idx - 1 >= activeIndex) return false\n            return !resolvers.resolveDisabled(item)\n          })\n        if (idx === -1) return idx\n        return items.length - 1 - idx\n      }\n\n      case Focus.Next:\n        return items.findIndex((item, idx) => {\n          if (idx <= activeIndex) return false\n          return !resolvers.resolveDisabled(item)\n        })\n\n      case Focus.Last: {\n        let idx = items\n          .slice()\n          .reverse()\n          .findIndex((item) => !resolvers.resolveDisabled(item))\n        if (idx === -1) return idx\n        return items.length - 1 - idx\n      }\n\n      case Focus.Specific:\n        return items.findIndex((item) => resolvers.resolveId(item) === action.id)\n\n      case Focus.Nothing:\n        return null\n\n      default:\n        assertNever(action)\n    }\n  })()\n\n  return nextActiveIndex === -1 ? currentActiveIndex : nextActiveIndex\n}\n", "import { Ref, ComponentPublicInstance } from 'vue'\n\nexport function dom<T extends Element | ComponentPublicInstance>(ref?: Ref<T | null>): T | null {\n  if (ref == null) return null\n  if (ref.value == null) return null\n\n  return (ref.value as { $el?: T }).$el ?? ref.value\n}\n", "import {\n  inject,\n  provide,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nlet Context = Symbol('Context') as InjectionKey<Ref<State>>\n\nexport enum State {\n  Open,\n  Closed,\n}\n\nexport function hasOpenClosed() {\n  return useOpenClosed() !== null\n}\n\nexport function useOpenClosed() {\n  return inject(Context, null)\n}\n\nexport function useOpenClosedProvider(value: Ref<State>) {\n  provide(Context, value)\n}\n", "import { ref, onMounted, watchEffect, Ref } from 'vue'\nimport { dom } from '../utils/dom'\n\nfunction resolveType(type: unknown, as: string | object) {\n  if (type) return type\n\n  let tag = as ?? 'button'\n  if (typeof tag === 'string' && tag.toLowerCase() === 'button') return 'button'\n\n  return undefined\n}\n\nexport function useResolveButtonType(\n  data: Ref<{ as: string | object; type?: unknown }>,\n  refElement: Ref<HTMLElement | null>\n) {\n  let type = ref(resolveType(data.value.type, data.value.as))\n\n  onMounted(() => {\n    type.value = resolveType(data.value.type, data.value.as)\n  })\n\n  watchEffect(() => {\n    if (type.value) return\n    if (!dom(refElement)) return\n\n    if (dom(refElement) instanceof HTMLButtonElement && !dom(refElement)?.hasAttribute('type')) {\n      type.value = 'button'\n    }\n  })\n\n  return type\n}\n", "import { watchEffect, ComputedRef } from 'vue'\nimport { getOwnerDocument } from '../utils/owner'\n\ntype AcceptNode = (\n  node: HTMLElement\n) =>\n  | typeof NodeFilter.FILTER_ACCEPT\n  | typeof NodeFilter.FILTER_SKIP\n  | typeof NodeFilter.FILTER_REJECT\n\nexport function useTreeWalker({\n  container,\n  accept,\n  walk,\n  enabled,\n}: {\n  container: ComputedRef<HTMLElement | null>\n  accept: AcceptNode\n  walk(node: HTMLElement): void\n  enabled?: ComputedRef<boolean>\n}) {\n  watchEffect(() => {\n    let root = container.value\n    if (!root) return\n    if (enabled !== undefined && !enabled.value) return\n    let ownerDocument = getOwnerDocument(container)\n    if (!ownerDocument) return\n\n    let acceptNode = Object.assign((node: HTMLElement) => accept(node), { acceptNode: accept })\n    let walker = ownerDocument.createTreeWalker(\n      root,\n      NodeFilter.SHOW_ELEMENT,\n      acceptNode,\n      // @ts-expect-error This `false` is a simple small fix for older browsers\n      false\n    )\n\n    while (walker.nextNode()) walk(walker.currentNode as HTMLElement)\n  })\n}\n", "type RenderEnv = 'client' | 'server'\n\nclass Env {\n  current: RenderEnv = this.detect()\n  currentId = 0\n\n  set(env: RenderEnv): void {\n    if (this.current === env) return\n\n    this.currentId = 0\n    this.current = env\n  }\n\n  reset(): void {\n    this.set(this.detect())\n  }\n\n  nextId() {\n    return ++this.currentId\n  }\n\n  get isServer(): boolean {\n    return this.current === 'server'\n  }\n\n  get isClient(): boolean {\n    return this.current === 'client'\n  }\n\n  private detect(): RenderEnv {\n    if (typeof window === 'undefined' || typeof document === 'undefined') {\n      return 'server'\n    }\n\n    return 'client'\n  }\n}\n\nexport let env = new Env()\n", "import { Ref } from 'vue'\nimport { dom } from './dom'\nimport { env } from './env'\n\nexport function getOwnerDocument<T extends Element | Ref<Element | null>>(\n  element: T | null | undefined\n) {\n  if (env.isServer) return null\n  if (element instanceof Node) return element.ownerDocument\n  if (element?.hasOwnProperty('value')) {\n    let domElement = dom(element)\n    if (domElement) return domElement.ownerDocument\n  }\n\n  return document\n}\n", "import { nextTick } from 'vue'\nimport { match } from './match'\nimport { getOwnerDocument } from './owner'\n\n// Credit:\n//  - https://stackoverflow.com/a/30753870\nlet focusableSelector = [\n  '[contentEditable=true]',\n  '[tabindex]',\n  'a[href]',\n  'area[href]',\n  'button:not([disabled])',\n  'iframe',\n  'input:not([disabled])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n]\n  .map(\n    process.env.NODE_ENV === 'test'\n      ? // TODO: Remove this once JSDOM fixes the issue where an element that is\n        // \"hidden\" can be the document.activeElement, because this is not possible\n        // in real browsers.\n        (selector) => `${selector}:not([tabindex='-1']):not([style*='display: none'])`\n      : (selector) => `${selector}:not([tabindex='-1'])`\n  )\n  .join(',')\n\nexport enum Focus {\n  /** Focus the first non-disabled element */\n  First = 1 << 0,\n\n  /** Focus the previous non-disabled element */\n  Previous = 1 << 1,\n\n  /** Focus the next non-disabled element */\n  Next = 1 << 2,\n\n  /** Focus the last non-disabled element */\n  Last = 1 << 3,\n\n  /** Wrap tab around */\n  WrapAround = 1 << 4,\n\n  /** Prevent scrolling the focusable elements into view */\n  NoScroll = 1 << 5,\n}\n\nexport enum FocusResult {\n  Error,\n  Overflow,\n  Success,\n  Underflow,\n}\n\nenum Direction {\n  Previous = -1,\n  Next = 1,\n}\n\nexport function getFocusableElements(container: HTMLElement | null = document.body) {\n  if (container == null) return []\n  return Array.from(container.querySelectorAll<HTMLElement>(focusableSelector)).sort(\n    // We want to move `:tabindex=\"0\"` to the end of the list, this is what the browser does as well.\n    (a, z) =>\n      Math.sign((a.tabIndex || Number.MAX_SAFE_INTEGER) - (z.tabIndex || Number.MAX_SAFE_INTEGER))\n  )\n}\n\nexport enum FocusableMode {\n  /** The element itself must be focusable. */\n  Strict,\n\n  /** The element should be inside of a focusable element. */\n  Loose,\n}\n\nexport function isFocusableElement(\n  element: HTMLElement,\n  mode: FocusableMode = FocusableMode.Strict\n) {\n  if (element === getOwnerDocument(element)?.body) return false\n\n  return match(mode, {\n    [FocusableMode.Strict]() {\n      return element.matches(focusableSelector)\n    },\n    [FocusableMode.Loose]() {\n      let next: HTMLElement | null = element\n\n      while (next !== null) {\n        if (next.matches(focusableSelector)) return true\n        next = next.parentElement\n      }\n\n      return false\n    },\n  })\n}\n\nexport function restoreFocusIfNecessary(element: HTMLElement | null) {\n  let ownerDocument = getOwnerDocument(element)\n  nextTick(() => {\n    if (\n      ownerDocument &&\n      !isFocusableElement(ownerDocument.activeElement as HTMLElement, FocusableMode.Strict)\n    ) {\n      focusElement(element)\n    }\n  })\n}\n\nexport function focusElement(element: HTMLElement | null) {\n  element?.focus({ preventScroll: true })\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select\nlet selectableSelector = ['textarea', 'input'].join(',')\nfunction isSelectableElement(\n  element: Element | null\n): element is HTMLInputElement | HTMLTextAreaElement {\n  return element?.matches?.(selectableSelector) ?? false\n}\n\nexport function sortByDomNode<T>(\n  nodes: T[],\n  resolveKey: (item: T) => HTMLElement | null = (i) => i as unknown as HTMLElement | null\n): T[] {\n  return nodes.slice().sort((aItem, zItem) => {\n    let a = resolveKey(aItem)\n    let z = resolveKey(zItem)\n\n    if (a === null || z === null) return 0\n\n    let position = a.compareDocumentPosition(z)\n\n    if (position & Node.DOCUMENT_POSITION_FOLLOWING) return -1\n    if (position & Node.DOCUMENT_POSITION_PRECEDING) return 1\n    return 0\n  })\n}\n\nexport function focusFrom(current: HTMLElement | null, focus: Focus) {\n  return focusIn(getFocusableElements(), focus, { relativeTo: current })\n}\n\nexport function focusIn(\n  container: HTMLElement | HTMLElement[],\n  focus: Focus,\n  {\n    sorted = true,\n    relativeTo = null,\n    skipElements = [],\n  }: Partial<{ sorted: boolean; relativeTo: HTMLElement | null; skipElements: HTMLElement[] }> = {}\n) {\n  let ownerDocument =\n    (Array.isArray(container)\n      ? container.length > 0\n        ? container[0].ownerDocument\n        : document\n      : container?.ownerDocument) ?? document\n\n  let elements = Array.isArray(container)\n    ? sorted\n      ? sortByDomNode(container)\n      : container\n    : getFocusableElements(container)\n\n  if (skipElements.length > 0 && elements.length > 1) {\n    elements = elements.filter((x) => !skipElements.includes(x))\n  }\n\n  relativeTo = relativeTo ?? (ownerDocument.activeElement as HTMLElement)\n\n  let direction = (() => {\n    if (focus & (Focus.First | Focus.Next)) return Direction.Next\n    if (focus & (Focus.Previous | Focus.Last)) return Direction.Previous\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let startIndex = (() => {\n    if (focus & Focus.First) return 0\n    if (focus & Focus.Previous) return Math.max(0, elements.indexOf(relativeTo)) - 1\n    if (focus & Focus.Next) return Math.max(0, elements.indexOf(relativeTo)) + 1\n    if (focus & Focus.Last) return elements.length - 1\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let focusOptions = focus & Focus.NoScroll ? { preventScroll: true } : {}\n\n  let offset = 0\n  let total = elements.length\n  let next = undefined\n  do {\n    // Guard against infinite loops\n    if (offset >= total || offset + total <= 0) return FocusResult.Error\n\n    let nextIdx = startIndex + offset\n\n    if (focus & Focus.WrapAround) {\n      nextIdx = (nextIdx + total) % total\n    } else {\n      if (nextIdx < 0) return FocusResult.Underflow\n      if (nextIdx >= total) return FocusResult.Overflow\n    }\n\n    next = elements[nextIdx]\n\n    // Try the focus the next element, might not work if it is \"hidden\" to the user.\n    next?.focus(focusOptions)\n\n    // Try the next one in line\n    offset += direction\n  } while (next !== ownerDocument.activeElement)\n\n  // By default if you <Tab> to a text input or a textarea, the browser will\n  // select all the text once the focus is inside these DOM Nodes. However,\n  // since we are manually moving focus this behaviour is not happening. This\n  // code will make sure that the text gets selected as-if you did it manually.\n  // Note: We only do this when going forward / backward. Not for the\n  // Focus.First or Focus.Last actions. This is similar to the `autoFocus`\n  // behaviour on an input where the input will get focus but won't be\n  // selected.\n  if (focus & (Focus.Next | Focus.Previous) && isSelectableElement(next)) {\n    next.select()\n  }\n\n  // This is a little weird, but let me try and explain: There are a few scenario's\n  // in chrome for example where a focused `<a>` tag does not get the default focus\n  // styles and sometimes they do. This highly depends on whether you started by\n  // clicking or by using your keyboard. When you programmatically add focus `anchor.focus()`\n  // then the active element (document.activeElement) is this anchor, which is expected.\n  // However in that case the default focus styles are not applied *unless* you\n  // also add this tabindex.\n  if (!next.hasAttribute('tabindex')) next.setAttribute('tabindex', '0')\n\n  return FocusResult.Success\n}\n", "import { computed, Ref, ComputedRef, ref } from 'vue'\nimport { FocusableMode, isFocusableElement } from '../utils/focus-management'\nimport { dom } from '../utils/dom'\nimport { useDocumentEvent } from './use-document-event'\n\ntype Container = Ref<HTMLElement | null> | HTMLElement | null\ntype ContainerCollection = Container[] | Set<Container>\ntype ContainerInput = Container | ContainerCollection\n\nexport function useOutsideClick(\n  containers: ContainerInput | (() => ContainerInput),\n  cb: (event: MouseEvent | PointerEvent | FocusEvent, target: HTMLElement) => void,\n  enabled: ComputedRef<boolean> = computed(() => true)\n) {\n  function handleOutsideClick<E extends MouseEvent | PointerEvent | FocusEvent>(\n    event: E,\n    resolveTarget: (event: E) => HTMLElement | null\n  ) {\n    if (!enabled.value) return\n\n    // Check whether the event got prevented already. This can happen if you use the\n    // useOutsideClick hook in both a Dialog and a Menu and the inner Menu \"cancels\" the default\n    // behaviour so that only the Menu closes and not the Dialog (yet)\n    if (event.defaultPrevented) return\n\n    let target = resolveTarget(event)\n\n    if (target === null) {\n      return\n    }\n\n    // Ignore if the target doesn't exist in the DOM anymore\n    if (!target.getRootNode().contains(target)) return\n\n    let _containers = (function resolve(containers): ContainerCollection {\n      if (typeof containers === 'function') {\n        return resolve(containers())\n      }\n\n      if (Array.isArray(containers)) {\n        return containers\n      }\n\n      if (containers instanceof Set) {\n        return containers\n      }\n\n      return [containers]\n    })(containers)\n\n    // Ignore if the target exists in one of the containers\n    for (let container of _containers) {\n      if (container === null) continue\n      let domNode = container instanceof HTMLElement ? container : dom(container)\n      if (domNode?.contains(target)) {\n        return\n      }\n\n      // If the click crossed a shadow boundary, we need to check if the container\n      // is inside the tree by using `composedPath` to \"pierce\" the shadow boundary\n      if (event.composed && event.composedPath().includes(domNode as EventTarget)) {\n        return\n      }\n    }\n\n    // This allows us to check whether the event was defaultPrevented when you are nesting this\n    // inside a `<Dialog />` for example.\n    if (\n      // This check alllows us to know whether or not we clicked on a \"focusable\" element like a\n      // button or an input. This is a backwards compatibility check so that you can open a <Menu\n      // /> and click on another <Menu /> which should close Menu A and open Menu B. We might\n      // revisit that so that you will require 2 clicks instead.\n      !isFocusableElement(target, FocusableMode.Loose) &&\n      // This could be improved, but the `Combobox.Button` adds tabIndex={-1} to make it\n      // unfocusable via the keyboard so that tabbing to the next item from the input doesn't\n      // first go to the button.\n      target.tabIndex !== -1\n    ) {\n      event.preventDefault()\n    }\n\n    return cb(event, target)\n  }\n\n  let initialClickTarget = ref<EventTarget | null>(null)\n\n  useDocumentEvent(\n    'mousedown',\n    (event) => {\n      if (enabled.value) {\n        initialClickTarget.value = event.composedPath?.()?.[0] || event.target\n      }\n    },\n    true\n  )\n\n  useDocumentEvent(\n    'click',\n    (event) => {\n      if (!initialClickTarget.value) {\n        return\n      }\n\n      handleOutsideClick(event, () => {\n        return initialClickTarget.value as HTMLElement\n      })\n\n      initialClickTarget.value = null\n    },\n\n    // We will use the `capture` phase so that layers in between with `event.stopPropagation()`\n    // don't \"cancel\" this outside click check. E.g.: A `Menu` inside a `DialogPanel` if the `Menu`\n    // is open, and you click outside of it in the `DialogPanel` the `Menu` should close. However,\n    // the `DialogPanel` has a `onClick(e) { e.stopPropagation() }` which would cancel this.\n    true\n  )\n\n  // When content inside an iframe is clicked `window` will receive a blur event\n  // This can happen when an iframe _inside_ a window is clicked\n  // Or, if headless UI is *in* the iframe, when a content in a window containing that iframe is clicked\n\n  // In this case we care only about the first case so we check to see if the active element is the iframe\n  // If so this was because of a click, focus, or other interaction with the child iframe\n  // and we can consider it an \"outside click\"\n  useDocumentEvent(\n    'blur',\n    (event) =>\n      handleOutsideClick(event, () =>\n        window.document.activeElement instanceof HTMLIFrameElement\n          ? window.document.activeElement\n          : null\n      ),\n    true\n  )\n}\n", "import { watchEffect } from 'vue'\nimport { env } from '../utils/env'\n\nexport function useDocumentEvent<TType extends keyof DocumentEventMap>(\n  type: TType,\n  listener: (this: Document, ev: DocumentEventMap[TType]) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  if (env.isServer) return\n\n  watchEffect((onInvalidate) => {\n    document.addEventListener(type, listener, options)\n    onInvalidate(() => document.removeEventListener(type, listener, options))\n  })\n}\n", "import { defineComponent, PropType } from 'vue'\nimport { render } from '../utils/render'\n\nexport enum Features {\n  // The default, no features.\n  None = 1 << 0,\n\n  // Whether the element should be focusable or not.\n  Focusable = 1 << 1,\n\n  // Whether it should be completely hidden, even to assistive technologies.\n  Hidden = 1 << 2,\n}\n\nexport let Hidden = defineComponent({\n  name: 'Hidden',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    features: { type: Number as PropType<Features>, default: Features.None },\n  },\n  setup(props, { slots, attrs }) {\n    return () => {\n      let { features, ...theirProps } = props\n      let ourProps = {\n        'aria-hidden': (features & Features.Focusable) === Features.Focusable ? true : undefined,\n        style: {\n          position: 'fixed',\n          top: 1,\n          left: 1,\n          width: 1,\n          height: 0,\n          padding: 0,\n          margin: -1,\n          overflow: 'hidden',\n          clip: 'rect(0, 0, 0, 0)',\n          whiteSpace: 'nowrap',\n          borderWidth: '0',\n          ...((features & Features.Hidden) === Features.Hidden &&\n            !((features & Features.Focusable) === Features.Focusable) && { display: 'none' }),\n        },\n      }\n\n      return render({\n        ourProps,\n        theirProps,\n        slot: {},\n        attrs,\n        slots,\n        name: 'Hidden',\n      })\n    }\n  },\n})\n", "type Entries = [string, string][]\n\nexport function objectToFormEntries(\n  source: Record<string, any> = {},\n  parentKey: string | null = null,\n  entries: Entries = []\n): Entries {\n  for (let [key, value] of Object.entries(source)) {\n    append(entries, composeKey(parentKey, key), value)\n  }\n\n  return entries\n}\n\nfunction composeKey(parent: string | null, key: string): string {\n  return parent ? parent + '[' + key + ']' : key\n}\n\nfunction append(entries: Entries, key: string, value: any): void {\n  if (Array.isArray(value)) {\n    for (let [subkey, subvalue] of value.entries()) {\n      append(entries, composeKey(key, subkey.toString()), subvalue)\n    }\n  } else if (value instanceof Date) {\n    entries.push([key, value.toISOString()])\n  } else if (typeof value === 'boolean') {\n    entries.push([key, value ? '1' : '0'])\n  } else if (typeof value === 'string') {\n    entries.push([key, value])\n  } else if (typeof value === 'number') {\n    entries.push([key, `${value}`])\n  } else if (value === null || value === undefined) {\n    entries.push([key, ''])\n  } else {\n    objectToFormEntries(value, key, entries)\n  }\n}\n\nexport function attemptSubmit(element: HTMLElement) {\n  let form = (element as any)?.form ?? element.closest('form')\n  if (!form) return\n\n  for (let element of form.elements) {\n    if (\n      (element.tagName === 'INPUT' && element.type === 'submit') ||\n      (element.tagName === 'BUTTON' && element.type === 'submit') ||\n      (element.nodeName === 'INPUT' && element.type === 'image')\n    ) {\n      // If you press `enter` in a normal input[type='text'] field, then the form will submit by\n      // searching for the a submit element and \"click\" it. We could also use the\n      // `form.requestSubmit()` function, but this has a downside where an `event.preventDefault()`\n      // inside a `click` listener on the submit button won't stop the form from submitting.\n      element.click()\n      return\n    }\n  }\n}\n", "import { computed, ComputedRef, UnwrapRef, ref } from 'vue'\n\nexport function useControllable<T>(\n  controlledValue: ComputedRef<T | undefined>,\n  onChange?: (value: T) => void,\n  defaultValue?: ComputedRef<T>\n) {\n  let internalValue = ref(defaultValue?.value)\n  let isControlled = computed(() => controlledValue.value !== undefined)\n\n  return [\n    computed(() => (isControlled.value ? controlledValue.value : internalValue.value)),\n    function (value: unknown) {\n      if (isControlled.value) {\n        return onChange?.(value as T)\n      } else {\n        internalValue.value = value as UnwrapRef<T>\n        return onChange?.(value as T)\n      }\n    },\n  ] as const\n}\n", "import { ref } from 'vue'\n\ntype PointerPosition = [x: number, y: number]\n\nfunction eventToPosition(evt: PointerEvent): PointerPosition {\n  return [evt.screenX, evt.screenY]\n}\n\nexport function useTrackedPointer() {\n  let lastPos = ref<PointerPosition>([-1, -1])\n\n  return {\n    wasMoved(evt: PointerEvent) {\n      // FIXME: Remove this once we use browser testing in all the relevant places.\n      // NOTE: This is replaced with a compile-time define during the build process\n      // This hack exists to work around a few failing tests caused by our inability to \"move\" the virtual pointer in JSDOM pointer events.\n      if (typeof process !== 'undefined' && process.env.TEST_BYPASS_TRACKED_POINTER) {\n        return true\n      }\n\n      let newPos = eventToPosition(evt)\n\n      if (lastPos.value[0] === newPos[0] && lastPos.value[1] === newPos[1]) {\n        return false\n      }\n\n      lastPos.value = newPos\n      return true\n    },\n\n    update(evt: PointerEvent) {\n      lastPos.value = eventToPosition(evt)\n    },\n  }\n}\n", "// This file contains functions to detect the platform the app is running on. They aren't perfect,\n// and we are making assumptions here. But it's the best we can do for now.\n\nexport function isIOS() {\n  // TODO: This is not a great way to detect iOS, but it's the best I can do for now.\n  // - `window.platform` is deprecated\n  // - `window.userAgentData.platform` is still experimental (https://developer.mozilla.org/en-US/docs/Web/API/NavigatorUAData/platform)\n  // - `window.userAgent` also doesn't contain the required information\n  return (\n    // Check if it is an iPhone\n    /iPhone/gi.test(window.navigator.platform) ||\n    // Check if it is an iPad. iPad reports itself as \"MacIntel\", but we can check if it is a touch\n    // screen. Let's hope that Apple doesn't release a touch screen Mac (or maybe this would then\n    // work as expected \uD83E\uDD14).\n    (/Mac/gi.test(window.navigator.platform) && window.navigator.maxTouchPoints > 0)\n  )\n}\n\nexport function isAndroid() {\n  return /Android/gi.test(window.navigator.userAgent)\n}\n\nexport function isMobile() {\n  return isIOS() || isAndroid()\n}\n", "// WAI-ARIA: https://www.w3.org/WAI/ARIA/apg/patterns/dialogmodal/\nimport {\n  computed,\n  defineComponent,\n  h,\n  inject,\n  nextTick,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  PropType,\n  Ref,\n} from 'vue'\n\nimport { render, Features } from '../../utils/render'\nimport { Keys } from '../../keyboard'\nimport { useId } from '../../hooks/use-id'\nimport { FocusTrap } from '../../components/focus-trap/focus-trap'\nimport { useInertOthers } from '../../hooks/use-inert-others'\nimport { Portal, PortalGroup } from '../portal/portal'\nimport { StackMessage, useStackProvider } from '../../internal/stack-context'\nimport { match } from '../../utils/match'\nimport { ForcePortalRoot } from '../../internal/portal-force-root'\nimport { Description, useDescriptions } from '../description/description'\nimport { dom } from '../../utils/dom'\nimport { useOpenClosed, State } from '../../internal/open-closed'\nimport { useOutsideClick } from '../../hooks/use-outside-click'\nimport { getOwnerDocument } from '../../utils/owner'\nimport { useEventListener } from '../../hooks/use-event-listener'\nimport { Hidden, Features as HiddenFeatures } from '../../internal/hidden'\nimport { useDocumentOverflowLockedEffect } from '../../hooks/document-overflow/use-document-overflow'\nimport { handleIOSLocking } from '../../hooks/document-overflow/handle-ios-locking'\n\nenum DialogStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  dialogState: Ref<DialogStates>\n\n  titleId: Ref<string | null>\n  panelRef: Ref<HTMLDivElement | null>\n\n  setTitleId(id: string | null): void\n\n  close(): void\n}\n\nlet DialogContext = Symbol('DialogContext') as InjectionKey<StateDefinition>\n\nfunction useDialogContext(component: string) {\n  let context = inject(DialogContext, null)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Dialog /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDialogContext)\n    throw err\n  }\n  return context\n}\n\n// ---\n\nlet Missing = 'DC8F892D-2EBD-447C-A4C8-A03058436FF4'\n\nexport let Dialog = defineComponent({\n  name: 'Dialog',\n  inheritAttrs: false, // Manually handling this\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n    open: { type: [Boolean, String], default: Missing },\n    initialFocus: { type: Object as PropType<HTMLElement | null>, default: null },\n    id: { type: String, default: () => `headlessui-dialog-${useId()}` },\n  },\n  emits: { close: (_close: boolean) => true },\n  setup(props, { emit, attrs, slots, expose }) {\n    let ready = ref(false)\n    onMounted(() => {\n      ready.value = true\n    })\n\n    let nestedDialogCount = ref(0)\n\n    let usesOpenClosedState = useOpenClosed()\n    let open = computed(() => {\n      if (props.open === Missing && usesOpenClosedState !== null) {\n        // Update the `open` prop based on the open closed state\n        return match(usesOpenClosedState.value, {\n          [State.Open]: true,\n          [State.Closed]: false,\n        })\n      }\n      return props.open\n    })\n\n    let containers = ref<Set<Ref<HTMLElement | null>>>(new Set())\n    let internalDialogRef = ref<HTMLDivElement | null>(null)\n\n    // Reference to a node in the \"main\" tree, not in the portalled Dialog tree.\n    let mainTreeNode = ref<HTMLDivElement | null>(null)\n\n    let ownerDocument = computed(() => getOwnerDocument(internalDialogRef))\n\n    expose({ el: internalDialogRef, $el: internalDialogRef })\n\n    // Validations\n    let hasOpen = props.open !== Missing || usesOpenClosedState !== null\n\n    if (!hasOpen) {\n      throw new Error(`You forgot to provide an \\`open\\` prop to the \\`Dialog\\`.`)\n    }\n\n    if (typeof open.value !== 'boolean') {\n      throw new Error(\n        `You provided an \\`open\\` prop to the \\`Dialog\\`, but the value is not a boolean. Received: ${\n          open.value === Missing ? undefined : props.open\n        }`\n      )\n    }\n\n    let dialogState = computed(() =>\n      !ready.value ? DialogStates.Closed : open.value ? DialogStates.Open : DialogStates.Closed\n    )\n    let enabled = computed(() => dialogState.value === DialogStates.Open)\n\n    let hasNestedDialogs = computed(() => nestedDialogCount.value > 1) // 1 is the current dialog\n    let hasParentDialog = inject(DialogContext, null) !== null\n\n    // If there are multiple dialogs, then you can be the root, the leaf or one\n    // in between. We only care abou whether you are the top most one or not.\n    let position = computed(() => (!hasNestedDialogs.value ? 'leaf' : 'parent'))\n\n    useInertOthers(\n      internalDialogRef,\n      computed(() => (hasNestedDialogs.value ? enabled.value : false))\n    )\n    useStackProvider({\n      type: 'Dialog',\n      enabled: computed(() => dialogState.value === DialogStates.Open),\n      element: internalDialogRef,\n      onUpdate: (message, type, element) => {\n        if (type !== 'Dialog') return\n\n        return match(message, {\n          [StackMessage.Add]() {\n            containers.value.add(element)\n            nestedDialogCount.value += 1\n          },\n          [StackMessage.Remove]() {\n            containers.value.delete(element)\n            nestedDialogCount.value -= 1\n          },\n        })\n      },\n    })\n\n    let describedby = useDescriptions({\n      name: 'DialogDescription',\n      slot: computed(() => ({ open: open.value })),\n    })\n\n    let titleId = ref<StateDefinition['titleId']['value']>(null)\n\n    let api = {\n      titleId,\n      panelRef: ref(null),\n      dialogState,\n      setTitleId(id: string | null) {\n        if (titleId.value === id) return\n        titleId.value = id\n      },\n      close() {\n        emit('close', false)\n      },\n    }\n\n    provide(DialogContext, api)\n\n    function resolveAllowedContainers() {\n      // Third party roots\n      let rootContainers = Array.from(\n        ownerDocument.value?.querySelectorAll('html > *, body > *, [data-headlessui-portal]') ?? []\n      ).filter((container) => {\n        if (container === document.body) return false // Skip `<body>`\n        if (container === document.head) return false // Skip `<head>`\n        if (!(container instanceof HTMLElement)) return false // Skip non-HTMLElements\n        if (container.contains(dom(mainTreeNode))) return false // Skip if it is the main app\n        if (api.panelRef.value && container.contains(api.panelRef.value)) return false\n        return true // Keep\n      })\n\n      return [...rootContainers, api.panelRef.value ?? internalDialogRef.value] as HTMLElement[]\n    }\n\n    // Handle outside click\n    useOutsideClick(\n      () => resolveAllowedContainers(),\n      (_event, target) => {\n        api.close()\n        nextTick(() => target?.focus())\n      },\n      computed(() => dialogState.value === DialogStates.Open && !hasNestedDialogs.value)\n    )\n\n    // Handle `Escape` to close\n    useEventListener(ownerDocument.value?.defaultView, 'keydown', (event) => {\n      if (event.defaultPrevented) return\n      if (event.key !== Keys.Escape) return\n      if (dialogState.value !== DialogStates.Open) return\n      if (hasNestedDialogs.value) return\n      event.preventDefault()\n      event.stopPropagation()\n      api.close()\n    })\n\n    // Scroll lock\n    useDocumentOverflowLockedEffect(ownerDocument, enabled, (meta) => ({\n      containers: [...(meta.containers ?? []), resolveAllowedContainers],\n    }))\n\n    // Trigger close when the FocusTrap gets hidden\n    watchEffect((onInvalidate) => {\n      if (dialogState.value !== DialogStates.Open) return\n      let container = dom(internalDialogRef)\n      if (!container) return\n\n      let observer = new IntersectionObserver((entries) => {\n        for (let entry of entries) {\n          if (\n            entry.boundingClientRect.x === 0 &&\n            entry.boundingClientRect.y === 0 &&\n            entry.boundingClientRect.width === 0 &&\n            entry.boundingClientRect.height === 0\n          ) {\n            api.close()\n          }\n        }\n      })\n\n      observer.observe(container)\n\n      onInvalidate(() => observer.disconnect())\n    })\n\n    return () => {\n      let { id, open: _, initialFocus, ...theirProps } = props\n      let ourProps = {\n        // Manually passthrough the attributes, because Vue can't automatically pass\n        // it to the underlying div because of all the wrapper components below.\n        ...attrs,\n        ref: internalDialogRef,\n        id,\n        role: 'dialog',\n        'aria-modal': dialogState.value === DialogStates.Open ? true : undefined,\n        'aria-labelledby': titleId.value,\n        'aria-describedby': describedby.value,\n      }\n\n      let slot = { open: dialogState.value === DialogStates.Open }\n\n      return h(ForcePortalRoot, { force: true }, () => [\n        h(Portal, () =>\n          h(PortalGroup, { target: internalDialogRef.value }, () =>\n            h(ForcePortalRoot, { force: false }, () =>\n              h(\n                FocusTrap,\n                {\n                  initialFocus,\n                  containers,\n                  features: enabled.value\n                    ? match(position.value, {\n                        parent: FocusTrap.features.RestoreFocus,\n                        leaf: FocusTrap.features.All & ~FocusTrap.features.FocusLock,\n                      })\n                    : FocusTrap.features.None,\n                },\n                () =>\n                  render({\n                    ourProps,\n                    theirProps,\n                    slot,\n                    attrs,\n                    slots,\n                    visible: dialogState.value === DialogStates.Open,\n                    features: Features.RenderStrategy | Features.Static,\n                    name: 'Dialog',\n                  })\n              )\n            )\n          )\n        ),\n        h(Hidden, { features: HiddenFeatures.Hidden, ref: mainTreeNode }),\n      ])\n    }\n  },\n})\n\n// ---\n\nexport let DialogOverlay = defineComponent({\n  name: 'DialogOverlay',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    id: { type: String, default: () => `headlessui-dialog-overlay-${useId()}` },\n  },\n  setup(props, { attrs, slots }) {\n    let api = useDialogContext('DialogOverlay')\n\n    function handleClick(event: MouseEvent) {\n      if (event.target !== event.currentTarget) return\n      event.preventDefault()\n      event.stopPropagation()\n      api.close()\n    }\n\n    return () => {\n      let { id, ...theirProps } = props\n      let ourProps = {\n        id,\n        'aria-hidden': true,\n        onClick: handleClick,\n      }\n\n      return render({\n        ourProps,\n        theirProps,\n        slot: { open: api.dialogState.value === DialogStates.Open },\n        attrs,\n        slots,\n        name: 'DialogOverlay',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let DialogBackdrop = defineComponent({\n  name: 'DialogBackdrop',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    id: { type: String, default: () => `headlessui-dialog-backdrop-${useId()}` },\n  },\n  inheritAttrs: false,\n  setup(props, { attrs, slots, expose }) {\n    let api = useDialogContext('DialogBackdrop')\n    let internalBackdropRef = ref(null)\n\n    expose({ el: internalBackdropRef, $el: internalBackdropRef })\n\n    onMounted(() => {\n      if (api.panelRef.value === null) {\n        throw new Error(\n          `A <DialogBackdrop /> component is being used, but a <DialogPanel /> component is missing.`\n        )\n      }\n    })\n\n    return () => {\n      let { id, ...theirProps } = props\n      let ourProps = {\n        id,\n        ref: internalBackdropRef,\n        'aria-hidden': true,\n      }\n\n      return h(ForcePortalRoot, { force: true }, () =>\n        h(Portal, () =>\n          render({\n            ourProps,\n            theirProps: { ...attrs, ...theirProps },\n            slot: { open: api.dialogState.value === DialogStates.Open },\n            attrs,\n            slots,\n            name: 'DialogBackdrop',\n          })\n        )\n      )\n    }\n  },\n})\n\n// ---\n\nexport let DialogPanel = defineComponent({\n  name: 'DialogPanel',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    id: { type: String, default: () => `headlessui-dialog-panel-${useId()}` },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let api = useDialogContext('DialogPanel')\n\n    expose({ el: api.panelRef, $el: api.panelRef })\n\n    function handleClick(event: MouseEvent) {\n      event.stopPropagation()\n    }\n\n    return () => {\n      let { id, ...theirProps } = props\n      let ourProps = {\n        id,\n        ref: api.panelRef,\n        onClick: handleClick,\n      }\n\n      return render({\n        ourProps,\n        theirProps,\n        slot: { open: api.dialogState.value === DialogStates.Open },\n        attrs,\n        slots,\n        name: 'DialogPanel',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let DialogTitle = defineComponent({\n  name: 'DialogTitle',\n  props: {\n    as: { type: [Object, String], default: 'h2' },\n    id: { type: String, default: () => `headlessui-dialog-title-${useId()}` },\n  },\n  setup(props, { attrs, slots }) {\n    let api = useDialogContext('DialogTitle')\n\n    onMounted(() => {\n      api.setTitleId(props.id)\n      onUnmounted(() => api.setTitleId(null))\n    })\n\n    return () => {\n      let { id, ...theirProps } = props\n      let ourProps = { id }\n\n      return render({\n        ourProps,\n        theirProps,\n        slot: { open: api.dialogState.value === DialogStates.Open },\n        attrs,\n        slots,\n        name: 'DialogTitle',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let DialogDescription = Description\n", "import {\n  computed,\n  defineComponent,\n  h,\n  onMounted,\n  onUnmounted,\n  ref,\n  watch,\n\n  // Types\n  PropType,\n  Fragment,\n  Ref,\n} from 'vue'\nimport { render } from '../../utils/render'\nimport { Hidden, Features as HiddenFeatures } from '../../internal/hidden'\nimport { dom } from '../../utils/dom'\nimport { focusIn, Focus, focusElement, FocusResult } from '../../utils/focus-management'\nimport { match } from '../../utils/match'\nimport { useTabDirection, Direction as TabDirection } from '../../hooks/use-tab-direction'\nimport { getOwnerDocument } from '../../utils/owner'\nimport { useEventListener } from '../../hooks/use-event-listener'\nimport { microTask } from '../../utils/micro-task'\n\nenum Features {\n  /** No features enabled for the focus trap. */\n  None = 1 << 0,\n\n  /** Ensure that we move focus initially into the container. */\n  InitialFocus = 1 << 1,\n\n  /** Ensure that pressing `Tab` and `Shift+Tab` is trapped within the container. */\n  TabLock = 1 << 2,\n\n  /** Ensure that programmatically moving focus outside of the container is disallowed. */\n  FocusLock = 1 << 3,\n\n  /** Ensure that we restore the focus when unmounting the focus trap. */\n  RestoreFocus = 1 << 4,\n\n  /** Enable all features. */\n  All = InitialFocus | TabLock | FocusLock | RestoreFocus,\n}\n\nexport let FocusTrap = Object.assign(\n  defineComponent({\n    name: 'FocusTrap',\n    props: {\n      as: { type: [Object, String], default: 'div' },\n      initialFocus: { type: Object as PropType<HTMLElement | null>, default: null },\n      features: { type: Number as PropType<Features>, default: Features.All },\n      containers: {\n        type: Object as PropType<Ref<Set<Ref<HTMLElement | null>>>>,\n        default: ref(new Set()),\n      },\n    },\n    inheritAttrs: false,\n    setup(props, { attrs, slots, expose }) {\n      let container = ref<HTMLElement | null>(null)\n\n      expose({ el: container, $el: container })\n\n      let ownerDocument = computed(() => getOwnerDocument(container))\n\n      useRestoreFocus(\n        { ownerDocument },\n        computed(() => Boolean(props.features & Features.RestoreFocus))\n      )\n      let previousActiveElement = useInitialFocus(\n        { ownerDocument, container, initialFocus: computed(() => props.initialFocus) },\n        computed(() => Boolean(props.features & Features.InitialFocus))\n      )\n      useFocusLock(\n        {\n          ownerDocument,\n          container,\n          containers: props.containers,\n          previousActiveElement,\n        },\n        computed(() => Boolean(props.features & Features.FocusLock))\n      )\n\n      let direction = useTabDirection()\n      function handleFocus(e: FocusEvent) {\n        let el = dom(container) as HTMLElement\n        if (!el) return\n\n        // TODO: Cleanup once we are using real browser tests\n        let wrapper = process.env.NODE_ENV === 'test' ? microTask : (cb: Function) => cb()\n        wrapper(() => {\n          match(direction.value, {\n            [TabDirection.Forwards]: () => {\n              focusIn(el, Focus.First, { skipElements: [e.relatedTarget as HTMLElement] })\n            },\n            [TabDirection.Backwards]: () => {\n              focusIn(el, Focus.Last, { skipElements: [e.relatedTarget as HTMLElement] })\n            },\n          })\n        })\n      }\n\n      let recentlyUsedTabKey = ref(false)\n      function handleKeyDown(e: KeyboardEvent) {\n        if (e.key === 'Tab') {\n          recentlyUsedTabKey.value = true\n          requestAnimationFrame(() => {\n            recentlyUsedTabKey.value = false\n          })\n        }\n      }\n\n      function handleBlur(e: FocusEvent) {\n        let allContainers = new Set(props.containers?.value)\n        allContainers.add(container)\n\n        let relatedTarget = e.relatedTarget\n        if (!(relatedTarget instanceof HTMLElement)) return\n\n        // Known guards, leave them alone!\n        if (relatedTarget.dataset.headlessuiFocusGuard === 'true') {\n          return\n        }\n\n        // Blur is triggered due to focus on relatedTarget, and the relatedTarget is not inside any\n        // of the dialog containers. In other words, let's move focus back in!\n        if (!contains(allContainers, relatedTarget)) {\n          // Was the blur invoke via the keyboard? Redirect to the next in line.\n          if (recentlyUsedTabKey.value) {\n            focusIn(\n              dom(container) as HTMLElement,\n              match(direction.value, {\n                [TabDirection.Forwards]: () => Focus.Next,\n                [TabDirection.Backwards]: () => Focus.Previous,\n              }) | Focus.WrapAround,\n              { relativeTo: e.target as HTMLElement }\n            )\n          }\n\n          // It was invoke via something else (e.g.: click, programmatically, ...). Redirect to the\n          // previous active item in the FocusTrap\n          else if (e.target instanceof HTMLElement) {\n            focusElement(e.target)\n          }\n        }\n      }\n\n      return () => {\n        let slot = {}\n        let ourProps = { ref: container, onKeydown: handleKeyDown, onFocusout: handleBlur }\n        let { features, initialFocus, containers: _containers, ...theirProps } = props\n\n        return h(Fragment, [\n          Boolean(features & Features.TabLock) &&\n            h(Hidden, {\n              as: 'button',\n              type: 'button',\n              'data-headlessui-focus-guard': true,\n              onFocus: handleFocus,\n              features: HiddenFeatures.Focusable,\n            }),\n          render({\n            ourProps,\n            theirProps: { ...attrs, ...theirProps },\n            slot,\n            attrs,\n            slots,\n            name: 'FocusTrap',\n          }),\n          Boolean(features & Features.TabLock) &&\n            h(Hidden, {\n              as: 'button',\n              type: 'button',\n              'data-headlessui-focus-guard': true,\n              onFocus: handleFocus,\n              features: HiddenFeatures.Focusable,\n            }),\n        ])\n      }\n    },\n  }),\n  { features: Features }\n)\n\nfunction useRestoreFocus(\n  { ownerDocument }: { ownerDocument: Ref<Document | null> },\n  enabled: Ref<boolean>\n) {\n  let restoreElement = ref<HTMLElement | null>(null)\n\n  function captureFocus() {\n    if (restoreElement.value) return\n    restoreElement.value = ownerDocument.value?.activeElement as HTMLElement\n  }\n\n  // Restore the focus to the previous element\n  function restoreFocusIfNeeded() {\n    if (!restoreElement.value) return\n    focusElement(restoreElement.value)\n    restoreElement.value = null\n  }\n\n  onMounted(() => {\n    watch(\n      enabled,\n      (newValue, prevValue) => {\n        if (newValue === prevValue) return\n\n        if (newValue) {\n          // The FocusTrap has become enabled which means we're going to move the focus into the trap\n          // We need to capture the current focus before we do that so we can restore it when done\n          captureFocus()\n        } else {\n          restoreFocusIfNeeded()\n        }\n      },\n      { immediate: true }\n    )\n  })\n\n  // Restore the focus when we unmount the component\n  onUnmounted(restoreFocusIfNeeded)\n}\n\nfunction useInitialFocus(\n  {\n    ownerDocument,\n    container,\n    initialFocus,\n  }: {\n    ownerDocument: Ref<Document | null>\n    container: Ref<HTMLElement | null>\n    initialFocus?: Ref<HTMLElement | null>\n  },\n  enabled: Ref<boolean>\n) {\n  let previousActiveElement = ref<HTMLElement | null>(null)\n\n  let mounted = ref(false)\n  onMounted(() => (mounted.value = true))\n  onUnmounted(() => (mounted.value = false))\n\n  onMounted(() => {\n    watch(\n      // Handle initial focus\n      [container, initialFocus, enabled],\n      (newValues, prevValues) => {\n        if (newValues.every((value, idx) => prevValues?.[idx] === value)) return\n        if (!enabled.value) return\n\n        let containerElement = dom(container)\n        if (!containerElement) return\n\n        // Delaying the focus to the next microtask ensures that a few conditions are true:\n        // - The container is rendered\n        // - Transitions could be started\n        // If we don't do this, then focusing an element will immediately cancel any transitions. This\n        // is not ideal because transitions will look broken.\n        // There is an additional issue with doing this immediately. The FocusTrap is used inside a\n        // Dialog, the Dialog is rendered inside of a Portal and the Portal is rendered at the end of\n        // the `document.body`. This means that the moment we call focus, the browser immediately\n        // tries to focus the element, which will still be at the bodem resulting in the page to\n        // scroll down. Delaying this will prevent the page to scroll down entirely.\n        microTask(() => {\n          if (!mounted.value) {\n            return\n          }\n\n          let initialFocusElement = dom(initialFocus)\n\n          let activeElement = ownerDocument.value?.activeElement as HTMLElement\n\n          if (initialFocusElement) {\n            if (initialFocusElement === activeElement) {\n              previousActiveElement.value = activeElement\n              return // Initial focus ref is already the active element\n            }\n          } else if (containerElement!.contains(activeElement)) {\n            previousActiveElement.value = activeElement\n            return // Already focused within Dialog\n          }\n\n          // Try to focus the initialFocus ref\n          if (initialFocusElement) {\n            focusElement(initialFocusElement)\n          } else {\n            if (focusIn(containerElement!, Focus.First | Focus.NoScroll) === FocusResult.Error) {\n              console.warn('There are no focusable elements inside the <FocusTrap />')\n            }\n          }\n\n          previousActiveElement.value = ownerDocument.value?.activeElement as HTMLElement\n        })\n      },\n      { immediate: true, flush: 'post' }\n    )\n  })\n\n  return previousActiveElement\n}\n\nfunction useFocusLock(\n  {\n    ownerDocument,\n    container,\n    containers,\n    previousActiveElement,\n  }: {\n    ownerDocument: Ref<Document | null>\n    container: Ref<HTMLElement | null>\n    containers: Ref<Set<Ref<HTMLElement | null>>>\n    previousActiveElement: Ref<HTMLElement | null>\n  },\n  enabled: Ref<boolean>\n) {\n  // Prevent programmatically escaping\n  useEventListener(\n    ownerDocument.value?.defaultView,\n    'focus',\n    (event) => {\n      if (!enabled.value) return\n\n      let allContainers = new Set(containers?.value)\n      allContainers.add(container)\n\n      let previous = previousActiveElement.value\n      if (!previous) return\n\n      let toElement = event.target as HTMLElement | null\n\n      if (toElement && toElement instanceof HTMLElement) {\n        if (!contains(allContainers, toElement)) {\n          event.preventDefault()\n          event.stopPropagation()\n          focusElement(previous)\n        } else {\n          previousActiveElement.value = toElement\n          focusElement(toElement)\n        }\n      } else {\n        focusElement(previousActiveElement.value)\n      }\n    },\n    true\n  )\n}\n\nfunction contains(containers: Set<Ref<HTMLElement | null>>, element: HTMLElement) {\n  for (let container of containers) {\n    if (container.value?.contains(element)) return true\n  }\n\n  return false\n}\n", "import { ref } from 'vue'\nimport { useWindowEvent } from './use-window-event'\n\nexport enum Direction {\n  Forwards,\n  Backwards,\n}\n\nexport function useTabDirection() {\n  let direction = ref(Direction.Forwards)\n\n  useWindowEvent('keydown', (event) => {\n    if (event.key === 'Tab') {\n      direction.value = event.shiftKey ? Direction.Backwards : Direction.Forwards\n    }\n  })\n\n  return direction\n}\n", "import { watchEffect } from 'vue'\nimport { env } from '../utils/env'\n\nexport function useWindowEvent<TType extends keyof WindowEventMap>(\n  type: TType,\n  listener: (this: Window, ev: WindowEventMap[TType]) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  if (env.isServer) return\n\n  watchEffect((onInvalidate) => {\n    window.addEventListener(type, listener, options)\n    onInvalidate(() => window.removeEventListener(type, listener, options))\n  })\n}\n", "import { watchEffect } from 'vue'\nimport { env } from '../utils/env'\n\nexport function useEventListener<TType extends keyof WindowEventMap>(\n  element: HTMLElement | Document | Window | EventTarget | null | undefined,\n  type: TType,\n  listener: (event: WindowEventMap[TType]) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  if (env.isServer) return\n\n  watchEffect((onInvalidate) => {\n    element = element ?? window\n\n    element.addEventListener(type, listener as any, options)\n    onInvalidate(() => element!.removeEventListener(type, listener as any, options))\n  })\n}\n", "// Polyfill\nexport function microTask(cb: () => void) {\n  if (typeof queueMicrotask === 'function') {\n    queueMicrotask(cb)\n  } else {\n    Promise.resolve()\n      .then(cb)\n      .catch((e) =>\n        setTimeout(() => {\n          throw e\n        })\n      )\n  }\n}\n", "import {\n  ref,\n  watchEffect,\n\n  // Types\n  Ref,\n} from 'vue'\nimport { getOwnerDocument } from '../utils/owner'\n\n// TODO: Figure out a nice way to attachTo document.body in the tests without automagically inserting a div with data-v-app\nlet CHILDREN_SELECTOR = process.env.NODE_ENV === 'test' ? '[data-v-app=\"\"] > *' : 'body > *'\n\nlet interactables = new Set<HTMLElement>()\nlet originals = new Map<HTMLElement, { 'aria-hidden': string | null; inert: boolean }>()\n\nfunction inert(element: HTMLElement) {\n  element.setAttribute('aria-hidden', 'true')\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = true\n}\n\nfunction restore(element: HTMLElement) {\n  let original = originals.get(element)\n  if (!original) return\n\n  if (original['aria-hidden'] === null) element.removeAttribute('aria-hidden')\n  else element.setAttribute('aria-hidden', original['aria-hidden'])\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = original.inert\n}\n\nexport function useInertOthers<TElement extends HTMLElement>(\n  container: Ref<TElement | null>,\n  enabled: Ref<boolean> = ref(true)\n) {\n  watchEffect((onInvalidate) => {\n    if (!enabled.value) return\n    if (!container.value) return\n\n    let element = container.value\n    let ownerDocument = getOwnerDocument(element)\n    if (!ownerDocument) return\n\n    // Mark myself as an interactable element\n    interactables.add(element)\n\n    // Restore elements that now contain an interactable child\n    for (let original of originals.keys()) {\n      if (original.contains(element)) {\n        restore(original)\n        originals.delete(original)\n      }\n    }\n\n    // Collect direct children of the body\n    ownerDocument.querySelectorAll(CHILDREN_SELECTOR).forEach((child) => {\n      if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n      // Skip the interactables, and the parents of the interactables\n      for (let interactable of interactables) {\n        if (child.contains(interactable)) return\n      }\n\n      // Keep track of the elements\n      if (interactables.size === 1) {\n        originals.set(child, {\n          'aria-hidden': child.getAttribute('aria-hidden'),\n          // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n          inert: child.inert,\n        })\n\n        // Mutate the element\n        inert(child)\n      }\n    })\n\n    onInvalidate(() => {\n      // Inert is disabled on the current element\n      interactables.delete(element)\n\n      // We still have interactable elements, therefore this one and its parent\n      // will become inert as well.\n      if (interactables.size > 0) {\n        // Collect direct children of the body\n        ownerDocument!.querySelectorAll(CHILDREN_SELECTOR).forEach((child) => {\n          if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n          // Skip already inert parents\n          if (originals.has(child)) return\n\n          // Skip the interactables, and the parents of the interactables\n          for (let interactable of interactables) {\n            if (child.contains(interactable)) return\n          }\n\n          originals.set(child, {\n            'aria-hidden': child.getAttribute('aria-hidden'),\n            // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n            inert: child.inert,\n          })\n\n          // Mutate the element\n          inert(child)\n        })\n      } else {\n        for (let element of originals.keys()) {\n          // Restore\n          restore(element)\n\n          // Cleanup\n          originals.delete(element)\n        }\n      }\n    })\n  })\n}\n", "import {\n  Teleport,\n  defineComponent,\n  h,\n  inject,\n  onUnmounted,\n  provide,\n  reactive,\n  ref,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  PropType,\n  computed,\n} from 'vue'\nimport { render } from '../../utils/render'\nimport { usePortalRoot } from '../../internal/portal-force-root'\nimport { getOwnerDocument } from '../../utils/owner'\n\n// ---\n\nfunction getPortalRoot(contextElement?: Element | null) {\n  let ownerDocument = getOwnerDocument(contextElement)\n  if (!ownerDocument) {\n    if (contextElement === null) {\n      return null\n    }\n\n    throw new Error(\n      `[Headless UI]: Cannot find ownerDocument for contextElement: ${contextElement}`\n    )\n  }\n  let existingRoot = ownerDocument.getElementById('headlessui-portal-root')\n  if (existingRoot) return existingRoot\n\n  let root = ownerDocument.createElement('div')\n  root.setAttribute('id', 'headlessui-portal-root')\n  return ownerDocument.body.appendChild(root)\n}\n\nexport let Portal = defineComponent({\n  name: 'Portal',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { slots, attrs }) {\n    let element = ref<HTMLElement | null>(null)\n    let ownerDocument = computed(() => getOwnerDocument(element))\n\n    let forcePortalRoot = usePortalRoot()\n    let groupContext = inject(PortalGroupContext, null)\n    let myTarget = ref(\n      forcePortalRoot === true\n        ? getPortalRoot(element.value)\n        : groupContext == null\n        ? getPortalRoot(element.value)\n        : groupContext.resolveTarget()\n    )\n\n    watchEffect(() => {\n      if (forcePortalRoot) return\n      if (groupContext == null) return\n      myTarget.value = groupContext.resolveTarget()\n    })\n\n    onUnmounted(() => {\n      let root = ownerDocument.value?.getElementById('headlessui-portal-root')\n      if (!root) return\n      if (myTarget.value !== root) return\n\n      if (myTarget.value.children.length <= 0) {\n        myTarget.value.parentElement?.removeChild(myTarget.value)\n      }\n    })\n\n    return () => {\n      if (myTarget.value === null) return null\n\n      let ourProps = {\n        ref: element,\n        'data-headlessui-portal': '',\n      }\n\n      return h(\n        // @ts-expect-error Children can be an object, but TypeScript is not happy\n        // with it. Once this is fixed upstream we can remove this assertion.\n        Teleport,\n        { to: myTarget.value },\n        render({\n          ourProps,\n          theirProps: props,\n          slot: {},\n          attrs,\n          slots,\n          name: 'Portal',\n        })\n      )\n    }\n  },\n})\n\n// ---\n\nlet PortalGroupContext = Symbol('PortalGroupContext') as InjectionKey<{\n  resolveTarget(): HTMLElement | null\n}>\n\nexport let PortalGroup = defineComponent({\n  name: 'PortalGroup',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    target: { type: Object as PropType<HTMLElement | null>, default: null },\n  },\n  setup(props, { attrs, slots }) {\n    let api = reactive({\n      resolveTarget() {\n        return props.target\n      },\n    })\n\n    provide(PortalGroupContext, api)\n\n    return () => {\n      let { target: _, ...theirProps } = props\n\n      return render({\n        theirProps,\n        ourProps: {},\n        slot: {},\n        attrs,\n        slots,\n        name: 'PortalGroup',\n      })\n    }\n  },\n})\n", "import {\n  defineComponent,\n  inject,\n  provide,\n\n  // Types\n  InjectionKey,\n} from 'vue'\nimport { render } from '../utils/render'\n\nlet ForcePortalRootContext = Symbol('ForcePortalRootContext') as InjectionKey<Boolean>\n\nexport function usePortalRoot() {\n  return inject(ForcePortalRootContext, false)\n}\n\nexport let ForcePortalRoot = defineComponent({\n  name: 'ForcePortalRoot',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    force: { type: Boolean, default: false },\n  },\n  setup(props, { slots, attrs }) {\n    provide(ForcePortalRootContext, props.force)\n\n    return () => {\n      let { force, ...theirProps } = props\n      return render({\n        theirProps,\n        ourProps: {},\n        slot: {},\n        slots,\n        attrs,\n        name: 'ForcePortalRoot',\n      })\n    }\n  },\n})\n", "import {\n  inject,\n  provide,\n  onMounted,\n  onUnmounted,\n\n  // Types\n  InjectionKey,\n  Ref,\n  watch,\n} from 'vue'\n\ntype OnUpdate = (message: StackMessage, type: string, element: Ref<HTMLElement | null>) => void\n\nlet StackContext = Symbol('StackContext') as InjectionKey<OnUpdate>\n\nexport enum StackMessage {\n  Add,\n  Remove,\n}\n\nexport function useStackContext() {\n  return inject(StackContext, () => {})\n}\n\nexport function useStackProvider({\n  type,\n  enabled,\n  element,\n  onUpdate,\n}: {\n  type: string\n  enabled: Ref<boolean | undefined>\n  element: Ref<HTMLElement | null>\n  onUpdate?: OnUpdate\n}) {\n  let parentUpdate = useStackContext()\n\n  function notify(...args: Parameters<OnUpdate>) {\n    // Notify our layer\n    onUpdate?.(...args)\n\n    // Notify the parent\n    parentUpdate(...args)\n  }\n\n  onMounted(() => {\n    watch(\n      enabled,\n      (isEnabled, oldIsEnabled) => {\n        if (isEnabled) {\n          notify(StackMessage.Add, type, element)\n        } else if (oldIsEnabled === true) {\n          notify(StackMessage.Remove, type, element)\n        }\n      },\n      { immediate: true, flush: 'sync' }\n    )\n  })\n\n  onUnmounted(() => {\n    if (enabled.value) {\n      notify(StackMessage.Remove, type, element)\n    }\n  })\n\n  provide(StackContext, notify)\n}\n", "import {\n  computed,\n  defineComponent,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  unref,\n\n  // Types\n  ComputedRef,\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\n\n// ---\n\nlet DescriptionContext = Symbol('DescriptionContext') as InjectionKey<{\n  register(value: string): () => void\n  slot: Ref<Record<string, any>>\n  name: string\n  props: Record<string, any>\n}>\n\nfunction useDescriptionContext() {\n  let context = inject(DescriptionContext, null)\n  if (context === null) {\n    throw new Error('Missing parent')\n  }\n  return context\n}\n\nexport function useDescriptions({\n  slot = ref({}),\n  name = 'Description',\n  props = {},\n}: {\n  slot?: Ref<Record<string, unknown>>\n  name?: string\n  props?: Record<string, unknown>\n} = {}): ComputedRef<string | undefined> {\n  let descriptionIds = ref<string[]>([])\n\n  function register(value: string) {\n    descriptionIds.value.push(value)\n\n    return () => {\n      let idx = descriptionIds.value.indexOf(value)\n      if (idx === -1) return\n      descriptionIds.value.splice(idx, 1)\n    }\n  }\n\n  provide(DescriptionContext, { register, slot, name, props })\n\n  // The actual id's as string or undefined.\n  return computed(() =>\n    descriptionIds.value.length > 0 ? descriptionIds.value.join(' ') : undefined\n  )\n}\n\n// ---\n\nexport let Description = defineComponent({\n  name: 'Description',\n  props: {\n    as: { type: [Object, String], default: 'p' },\n    id: { type: String, default: () => `headlessui-description-${useId()}` },\n  },\n  setup(myProps, { attrs, slots }) {\n    let context = useDescriptionContext()\n\n    onMounted(() => onUnmounted(context.register(myProps.id)))\n\n    return () => {\n      let { name = 'Description', slot = ref({}), props = {} } = context\n      let { id, ...theirProps } = myProps\n      let ourProps = {\n        ...Object.entries(props).reduce(\n          (acc, [key, value]) => Object.assign(acc, { [key]: unref(value) }),\n          {}\n        ),\n        id,\n      }\n\n      return render({\n        ourProps,\n        theirProps,\n        slot: slot.value,\n        attrs,\n        slots,\n        name,\n      })\n    }\n  },\n})\n", "import { onUnmounted, shallowRef } from 'vue'\nimport { Store } from '../utils/store'\n\nexport function useStore<T>(store: Store<T, any>) {\n  let state = shallowRef(store.getSnapshot())\n\n  onUnmounted(\n    store.subscribe(() => {\n      state.value = store.getSnapshot()\n    })\n  )\n\n  return state\n}\n", "export type Disposables = ReturnType<typeof disposables>\n\nexport function disposables() {\n  let disposables: Function[] = []\n  let queue: Function[] = []\n\n  let api = {\n    enqueue(fn: Function) {\n      queue.push(fn)\n    },\n\n    addEventListener<TEventName extends keyof WindowEventMap>(\n      element: HTMLElement | Window | Document,\n      name: TEventName,\n      listener: (event: WindowEventMap[TEventName]) => any,\n      options?: boolean | AddEventListenerOptions\n    ) {\n      element.addEventListener(name, listener as any, options)\n      return api.add(() => element.removeEventListener(name, listener as any, options))\n    },\n\n    requestAnimationFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      let raf = requestAnimationFrame(...args)\n      api.add(() => cancelAnimationFrame(raf))\n    },\n\n    nextFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      api.requestAnimationFrame(() => {\n        api.requestAnimationFrame(...args)\n      })\n    },\n\n    setTimeout(...args: Parameters<typeof setTimeout>) {\n      let timer = setTimeout(...args)\n      api.add(() => clearTimeout(timer))\n    },\n\n    add(cb: () => void) {\n      disposables.push(cb)\n    },\n\n    style(node: HTMLElement, property: string, value: string) {\n      let previous = node.style.getPropertyValue(property)\n      Object.assign(node.style, { [property]: value })\n      return this.add(() => {\n        Object.assign(node.style, { [property]: previous })\n      })\n    },\n\n    dispose() {\n      for (let dispose of disposables.splice(0)) {\n        dispose()\n      }\n    },\n\n    async workQueue() {\n      for (let handle of queue.splice(0)) {\n        await handle()\n      }\n    },\n  }\n\n  return api\n}\n", "type ChangeFn = () => void\ntype UnsubscribeFn = () => void\ntype ActionFn<T> = (this: T, ...args: any[]) => T | void\ntype StoreActions<Key extends string, T> = Record<Key, ActionFn<T>>\n\nexport interface Store<T, ActionKey extends string> {\n  getSnapshot(): T\n  subscribe(onChange: ChangeFn): UnsubscribeFn\n  dispatch(action: ActionKey, ...args: any[]): void\n}\n\nexport function createStore<T, ActionKey extends string>(\n  initial: () => T,\n  actions: StoreActions<ActionKey, T>\n): Store<T, ActionKey> {\n  let state: T = initial()\n\n  let listeners = new Set<ChangeFn>()\n\n  return {\n    getSnapshot() {\n      return state\n    },\n\n    subscribe(onChange) {\n      listeners.add(onChange)\n\n      return () => listeners.delete(onChange)\n    },\n\n    dispatch(key: ActionKey, ...args: any[]) {\n      let newState = actions[key].call(state, ...args)\n      if (newState) {\n        state = newState\n        listeners.forEach((listener) => listener())\n      }\n    },\n  }\n}\n", "import { ScrollLockStep } from './overflow-store'\n\nexport function adjustScrollbarPadding(): ScrollLockStep {\n  let scrollbarWidthBefore: number\n\n  return {\n    before({ doc }) {\n      let documentElement = doc.documentElement\n      let ownerWindow = doc.defaultView ?? window\n\n      scrollbarWidthBefore = ownerWindow.innerWidth - documentElement.clientWidth\n    },\n\n    after({ doc, d }) {\n      let documentElement = doc.documentElement\n\n      // Account for the change in scrollbar width\n      // NOTE: This is a bit of a hack, but it's the only way to do this\n      let scrollbarWidthAfter = documentElement.clientWidth - documentElement.offsetWidth\n      let scrollbarWidth = scrollbarWidthBefore - scrollbarWidthAfter\n\n      d.style(documentElement, 'paddingRight', `${scrollbarWidth}px`)\n    },\n  }\n}\n", "import { isIOS } from '../../utils/platform'\nimport { ScrollLockStep } from './overflow-store'\n\ninterface ContainerMetadata {\n  containers: (() => HTMLElement[])[]\n}\n\nexport function handleIOSLocking(): ScrollLockStep<ContainerMetadata> {\n  if (!isIOS()) {\n    return {}\n  }\n\n  let scrollPosition: number\n\n  return {\n    before() {\n      scrollPosition = window.pageYOffset\n    },\n\n    after({ doc, d, meta }) {\n      function inAllowedContainer(el: HTMLElement) {\n        return meta.containers\n          .flatMap((resolve) => resolve())\n          .some((container) => container.contains(el))\n      }\n\n      d.style(doc.body, 'marginTop', `-${scrollPosition}px`)\n      window.scrollTo(0, 0)\n\n      // Relatively hacky, but if you click a link like `<a href=\"#foo\">` in the Dialog, and there\n      // exists an element on the page (outside of the Dialog) with that id, then the browser will\n      // scroll to that position. However, this is not the case if the element we want to scroll to\n      // is higher and the browser needs to scroll up, but it doesn't do that.\n      //\n      // Let's try and capture that element and store it, so that we can later scroll to it once the\n      // Dialog closes.\n      let scrollToElement: HTMLElement | null = null\n      d.addEventListener(\n        doc,\n        'click',\n        (e) => {\n          if (!(e.target instanceof HTMLElement)) {\n            return\n          }\n\n          try {\n            let anchor = e.target.closest('a')\n            if (!anchor) return\n            let { hash } = new URL(anchor.href)\n            let el = doc.querySelector(hash)\n            if (el && !inAllowedContainer(el as HTMLElement)) {\n              scrollToElement = el as HTMLElement\n            }\n          } catch (err) {}\n        },\n        true\n      )\n\n      d.addEventListener(\n        doc,\n        'touchmove',\n        (e) => {\n          // Check if we are scrolling inside any of the allowed containers, if not let's cancel the event!\n          if (e.target instanceof HTMLElement && !inAllowedContainer(e.target as HTMLElement)) {\n            e.preventDefault()\n          }\n        },\n        { passive: false }\n      )\n\n      // Restore scroll position\n      d.add(() => {\n        // Before opening the Dialog, we capture the current pageYOffset, and offset the page with\n        // this value so that we can also scroll to `(0, 0)`.\n        //\n        // If we want to restore a few things can happen:\n        //\n        // 1. The window.pageYOffset is still at 0, this means nothing happened, and we can safely\n        // restore to the captured value earlier.\n        // 2. The window.pageYOffset is **not** at 0. This means that something happened (e.g.: a\n        // link was scrolled into view in the background). Ideally we want to restore to this _new_\n        // position. To do this, we can take the new value into account with the captured value from\n        // before.\n        //\n        // (Since the value of window.pageYOffset is 0 in the first case, we should be able to\n        // always sum these values)\n        window.scrollTo(0, window.pageYOffset + scrollPosition)\n\n        // If we captured an element that should be scrolled to, then we can try to do that if the\n        // element is still connected (aka, still in the DOM).\n        if (scrollToElement && scrollToElement.isConnected) {\n          scrollToElement.scrollIntoView({ block: 'nearest' })\n          scrollToElement = null\n        }\n      })\n    },\n  }\n}\n", "import { ScrollLockStep } from './overflow-store'\n\nexport function preventScroll(): ScrollLockStep {\n  return {\n    before({ doc, d }) {\n      d.style(doc.documentElement, 'overflow', 'hidden')\n    },\n  }\n}\n", "import { disposables, Disposables } from '../../utils/disposables'\nimport { createStore } from '../../utils/store'\nimport { adjustScrollbarPadding } from './adjust-scrollbar-padding'\nimport { handleIOSLocking } from './handle-ios-locking'\nimport { preventScroll } from './prevent-scroll'\n\ninterface DocEntry {\n  doc: Document\n  count: number\n  d: Disposables\n  meta: Set<MetaFn>\n}\n\nfunction buildMeta(fns: Iterable<MetaFn>) {\n  let tmp = {}\n  for (let fn of fns) {\n    Object.assign(tmp, fn(tmp))\n  }\n  return tmp\n}\n\nexport type MetaFn = (meta: Record<string, any>) => Record<string, any>\n\nexport interface Context<MetaType extends Record<string, any> = any> {\n  doc: Document\n  d: Disposables\n  meta: MetaType\n}\n\nexport interface ScrollLockStep<MetaType extends Record<string, any> = any> {\n  before?(ctx: Context<MetaType>): void\n  after?(ctx: Context<MetaType>): void\n}\n\nexport let overflows = createStore(() => new Map<Document, DocEntry>(), {\n  PUSH(doc: Document, meta: MetaFn) {\n    let entry = this.get(doc) ?? {\n      doc,\n      count: 0,\n      d: disposables(),\n      meta: new Set(),\n    }\n\n    entry.count++\n    entry.meta.add(meta)\n    this.set(doc, entry)\n\n    return this\n  },\n\n  POP(doc: Document, meta: MetaFn) {\n    let entry = this.get(doc)\n    if (entry) {\n      entry.count--\n      entry.meta.delete(meta)\n    }\n\n    return this\n  },\n\n  SCROLL_PREVENT({ doc, d, meta }: DocEntry) {\n    let ctx = {\n      doc,\n      d,\n      meta: buildMeta(meta),\n    }\n\n    let steps: ScrollLockStep<any>[] = [\n      handleIOSLocking(),\n      adjustScrollbarPadding(),\n      preventScroll(),\n    ]\n\n    // Run all `before` actions together\n    steps.forEach(({ before }) => before?.(ctx))\n\n    // Run all `after` actions together\n    steps.forEach(({ after }) => after?.(ctx))\n  },\n\n  SCROLL_ALLOW({ d }: DocEntry) {\n    d.dispose()\n  },\n\n  TEARDOWN({ doc }: DocEntry) {\n    this.delete(doc)\n  },\n})\n\n// Update the document overflow state when the store changes\n// This MUST happen outside of react for this to work properly.\noverflows.subscribe(() => {\n  let docs = overflows.getSnapshot()\n\n  let styles = new Map<Document, string | undefined>()\n\n  // Read data from all the documents\n  for (let [doc] of docs) {\n    styles.set(doc, doc.documentElement.style.overflow)\n  }\n\n  // Write data to all the documents\n  for (let entry of docs.values()) {\n    let isHidden = styles.get(entry.doc) === 'hidden'\n    let isLocked = entry.count !== 0\n    let willChange = (isLocked && !isHidden) || (!isLocked && isHidden)\n\n    if (willChange) {\n      overflows.dispatch(entry.count > 0 ? 'SCROLL_PREVENT' : 'SCROLL_ALLOW', entry)\n    }\n\n    // We have to clean up after ourselves so we don't leak memory\n    // Using a WeakMap would be ideal, but it's not iterable\n    if (entry.count === 0) {\n      overflows.dispatch('TEARDOWN', entry)\n    }\n  }\n})\n", "import { useStore } from '../../hooks/use-store'\nimport { overflows, MetaFn } from './overflow-store'\nimport { computed, Ref, watch } from 'vue'\n\nexport function useDocumentOverflowLockedEffect(\n  doc: Ref<Document | null>,\n  shouldBeLocked: Ref<boolean>,\n  meta: MetaFn\n) {\n  let store = useStore(overflows)\n  let locked = computed(() => {\n    let entry = doc.value ? store.value.get(doc.value) : undefined\n    return entry ? entry.count > 0 : false\n  })\n\n  watch(\n    [doc, shouldBeLocked],\n    ([doc, shouldBeLocked], [oldDoc], onInvalidate) => {\n      if (!doc || !shouldBeLocked) {\n        return\n      }\n\n      // Prevent the document from scrolling\n      overflows.dispatch('PUSH', doc, meta)\n\n      // Allow document to scroll\n      let didRunCleanup = false\n      onInvalidate(() => {\n        if (didRunCleanup) return\n        overflows.dispatch('POP', oldDoc ?? doc, meta)\n\n        // This shouldn't be necessary, but it is.\n        // Seems like a Vue bug.\n        didRunCleanup = true\n      })\n    },\n    {\n      immediate: true,\n    }\n  )\n\n  return locked\n}\n", "// WAI-ARIA: https://www.w3.org/WAI/ARIA/apg/patterns/disclosure/\nimport {\n  defineComponent,\n  ref,\n  provide,\n  inject,\n  InjectionKey,\n  Ref,\n  computed,\n  watchEffect,\n  onMounted,\n  onUnmounted,\n} from 'vue'\n\nimport { Keys } from '../../keyboard'\nimport { match } from '../../utils/match'\nimport { render, Features } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { dom } from '../../utils/dom'\nimport { useOpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\nenum DisclosureStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  // State\n  disclosureState: Ref<DisclosureStates>\n  panel: Ref<HTMLElement | null>\n  panelId: Ref<string | null>\n  button: Ref<HTMLButtonElement | null>\n  buttonId: Ref<string | null>\n\n  // State mutators\n  toggleDisclosure(): void\n  closeDisclosure(): void\n\n  // Exposed functions\n  close(focusableElement: HTMLElement | Ref<HTMLElement | null>): void\n}\n\nlet DisclosureContext = Symbol('DisclosureContext') as InjectionKey<StateDefinition>\n\nfunction useDisclosureContext(component: string) {\n  let context = inject(DisclosureContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Disclosure /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDisclosureContext)\n    throw err\n  }\n\n  return context\n}\n\nlet DisclosurePanelContext = Symbol('DisclosurePanelContext') as InjectionKey<Ref<string | null>>\nfunction useDisclosurePanelContext() {\n  return inject(DisclosurePanelContext, null)\n}\n\n// ---\n\nexport let Disclosure = defineComponent({\n  name: 'Disclosure',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    defaultOpen: { type: [Boolean], default: false },\n  },\n  setup(props, { slots, attrs }) {\n    let disclosureState = ref<StateDefinition['disclosureState']['value']>(\n      props.defaultOpen ? DisclosureStates.Open : DisclosureStates.Closed\n    )\n    let panelRef = ref<StateDefinition['panel']['value']>(null)\n    let buttonRef = ref<StateDefinition['button']['value']>(null)\n\n    let api = {\n      buttonId: ref(null),\n      panelId: ref(null),\n      disclosureState,\n      panel: panelRef,\n      button: buttonRef,\n      toggleDisclosure() {\n        disclosureState.value = match(disclosureState.value, {\n          [DisclosureStates.Open]: DisclosureStates.Closed,\n          [DisclosureStates.Closed]: DisclosureStates.Open,\n        })\n      },\n      closeDisclosure() {\n        if (disclosureState.value === DisclosureStates.Closed) return\n        disclosureState.value = DisclosureStates.Closed\n      },\n      close(focusableElement: HTMLElement | Ref<HTMLElement | null>) {\n        api.closeDisclosure()\n\n        let restoreElement = (() => {\n          if (!focusableElement) return dom(api.button)\n          if (focusableElement instanceof HTMLElement) return focusableElement\n          if (focusableElement.value instanceof HTMLElement) return dom(focusableElement)\n\n          return dom(api.button)\n        })()\n\n        restoreElement?.focus()\n      },\n    } as StateDefinition\n\n    provide(DisclosureContext, api)\n    useOpenClosedProvider(\n      computed(() => {\n        return match(disclosureState.value, {\n          [DisclosureStates.Open]: State.Open,\n          [DisclosureStates.Closed]: State.Closed,\n        })\n      })\n    )\n\n    return () => {\n      let { defaultOpen: _, ...theirProps } = props\n      let slot = { open: disclosureState.value === DisclosureStates.Open, close: api.close }\n      return render({\n        theirProps,\n        ourProps: {},\n        slot,\n        slots,\n        attrs,\n        name: 'Disclosure',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let DisclosureButton = defineComponent({\n  name: 'DisclosureButton',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    disabled: { type: [Boolean], default: false },\n    id: { type: String, default: () => `headlessui-disclosure-button-${useId()}` },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let api = useDisclosureContext('DisclosureButton')\n\n    onMounted(() => {\n      api.buttonId.value = props.id\n    })\n    onUnmounted(() => {\n      api.buttonId.value = null\n    })\n\n    let panelContext = useDisclosurePanelContext()\n    let isWithinPanel = computed(() =>\n      panelContext === null ? false : panelContext.value === api.panelId.value\n    )\n\n    let internalButtonRef = ref<HTMLButtonElement | null>(null)\n\n    expose({ el: internalButtonRef, $el: internalButtonRef })\n\n    if (!isWithinPanel.value) {\n      watchEffect(() => {\n        api.button.value = internalButtonRef.value\n      })\n    }\n\n    let type = useResolveButtonType(\n      computed(() => ({ as: props.as, type: attrs.type })),\n      internalButtonRef\n    )\n\n    function handleClick() {\n      if (props.disabled) return\n\n      if (isWithinPanel.value) {\n        api.toggleDisclosure()\n        dom(api.button)?.focus()\n      } else {\n        api.toggleDisclosure()\n      }\n    }\n    function handleKeyDown(event: KeyboardEvent) {\n      if (props.disabled) return\n\n      if (isWithinPanel.value) {\n        switch (event.key) {\n          case Keys.Space:\n          case Keys.Enter:\n            event.preventDefault()\n            event.stopPropagation()\n            api.toggleDisclosure()\n            dom(api.button)?.focus()\n            break\n        }\n      } else {\n        switch (event.key) {\n          case Keys.Space:\n          case Keys.Enter:\n            event.preventDefault()\n            event.stopPropagation()\n            api.toggleDisclosure()\n            break\n        }\n      }\n    }\n    function handleKeyUp(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Space:\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n          break\n      }\n    }\n\n    return () => {\n      let slot = { open: api.disclosureState.value === DisclosureStates.Open }\n      let { id, ...theirProps } = props\n      let ourProps = isWithinPanel.value\n        ? {\n            ref: internalButtonRef,\n            type: type.value,\n            onClick: handleClick,\n            onKeydown: handleKeyDown,\n          }\n        : {\n            id,\n            ref: internalButtonRef,\n            type: type.value,\n            'aria-expanded': props.disabled\n              ? undefined\n              : api.disclosureState.value === DisclosureStates.Open,\n            'aria-controls': dom(api.panel) ? api.panelId.value : undefined,\n            disabled: props.disabled ? true : undefined,\n            onClick: handleClick,\n            onKeydown: handleKeyDown,\n            onKeyup: handleKeyUp,\n          }\n\n      return render({\n        ourProps,\n        theirProps,\n        slot,\n        attrs,\n        slots,\n        name: 'DisclosureButton',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let DisclosurePanel = defineComponent({\n  name: 'DisclosurePanel',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n    id: { type: String, default: () => `headlessui-disclosure-panel-${useId()}` },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let api = useDisclosureContext('DisclosurePanel')\n\n    onMounted(() => {\n      api.panelId.value = props.id\n    })\n    onUnmounted(() => {\n      api.panelId.value = null\n    })\n\n    expose({ el: api.panel, $el: api.panel })\n\n    provide(DisclosurePanelContext, api.panelId)\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.disclosureState.value === DisclosureStates.Open\n    })\n\n    return () => {\n      let slot = { open: api.disclosureState.value === DisclosureStates.Open, close: api.close }\n      let { id, ...theirProps } = props\n      let ourProps = { id, ref: api.panel }\n\n      return render({\n        ourProps,\n        theirProps,\n        slot,\n        attrs,\n        slots,\n        features: Features.RenderStrategy | Features.Static,\n        visible: visible.value,\n        name: 'DisclosurePanel',\n      })\n    }\n  },\n})\n", "import {\n  Fragment,\n  computed,\n  defineComponent,\n  h,\n  inject,\n  nextTick,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  toRaw,\n  watch,\n  watchEffect,\n\n  // Types\n  ComputedRef,\n  InjectionKey,\n  Ref,\n  UnwrapNestedRefs,\n  PropType,\n} from 'vue'\n\nimport { Features, render, omit, compact } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { calculateActiveIndex, Focus } from '../../utils/calculate-active-index'\nimport { dom } from '../../utils/dom'\nimport { useOpenClosed, State, useOpenClosedProvider } from '../../internal/open-closed'\nimport { match } from '../../utils/match'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\nimport { FocusableMode, isFocusableElement, sortByDomNode } from '../../utils/focus-management'\nimport { useOutsideClick } from '../../hooks/use-outside-click'\nimport { Hidden, Features as HiddenFeatures } from '../../internal/hidden'\nimport { objectToFormEntries } from '../../utils/form'\nimport { useControllable } from '../../hooks/use-controllable'\nimport { useTrackedPointer } from '../../hooks/use-tracked-pointer'\n\nfunction defaultComparator<T>(a: T, z: T): boolean {\n  return a === z\n}\n\nenum ListboxStates {\n  Open,\n  Closed,\n}\n\nenum ValueMode {\n  Single,\n  Multi,\n}\n\nenum ActivationTrigger {\n  Pointer,\n  Other,\n}\n\nfunction nextFrame(cb: () => void) {\n  requestAnimationFrame(() => requestAnimationFrame(cb))\n}\n\ntype ListboxOptionData = {\n  textValue: string\n  disabled: boolean\n  value: unknown\n  domRef: Ref<HTMLElement | null>\n}\n\ntype StateDefinition = {\n  // State\n  listboxState: Ref<ListboxStates>\n  value: ComputedRef<unknown>\n  orientation: Ref<'vertical' | 'horizontal'>\n\n  mode: ComputedRef<ValueMode>\n\n  compare: (a: unknown, z: unknown) => boolean\n\n  labelRef: Ref<HTMLLabelElement | null>\n  buttonRef: Ref<HTMLButtonElement | null>\n  optionsRef: Ref<HTMLDivElement | null>\n\n  disabled: Ref<boolean>\n  options: Ref<{ id: string; dataRef: ComputedRef<ListboxOptionData> }[]>\n  searchQuery: Ref<string>\n  activeOptionIndex: Ref<number | null>\n  activationTrigger: Ref<ActivationTrigger>\n\n  // State mutators\n  closeListbox(): void\n  openListbox(): void\n  goToOption(focus: Focus, id?: string, trigger?: ActivationTrigger): void\n  search(value: string): void\n  clearSearch(): void\n  registerOption(id: string, dataRef: ComputedRef<ListboxOptionData>): void\n  unregisterOption(id: string): void\n  select(value: unknown): void\n}\n\nlet ListboxContext = Symbol('ListboxContext') as InjectionKey<StateDefinition>\n\nfunction useListboxContext(component: string) {\n  let context = inject(ListboxContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Listbox /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useListboxContext)\n    throw err\n  }\n\n  return context\n}\n\n// ---\n\nexport let Listbox = defineComponent({\n  name: 'Listbox',\n  emits: { 'update:modelValue': (_value: any) => true },\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    disabled: { type: [Boolean], default: false },\n    by: { type: [String, Function], default: () => defaultComparator },\n    horizontal: { type: [Boolean], default: false },\n    modelValue: {\n      type: [Object, String, Number, Boolean] as PropType<\n        object | string | number | boolean | null\n      >,\n      default: undefined,\n    },\n    defaultValue: {\n      type: [Object, String, Number, Boolean] as PropType<\n        object | string | number | boolean | null\n      >,\n      default: undefined,\n    },\n    name: { type: String, optional: true },\n    multiple: { type: [Boolean], default: false },\n  },\n  inheritAttrs: false,\n  setup(props, { slots, attrs, emit }) {\n    let listboxState = ref<StateDefinition['listboxState']['value']>(ListboxStates.Closed)\n    let labelRef = ref<StateDefinition['labelRef']['value']>(null)\n    let buttonRef = ref<StateDefinition['buttonRef']['value']>(null)\n    let optionsRef = ref<StateDefinition['optionsRef']['value']>(null)\n    let options = ref<StateDefinition['options']['value']>([])\n    let searchQuery = ref<StateDefinition['searchQuery']['value']>('')\n    let activeOptionIndex = ref<StateDefinition['activeOptionIndex']['value']>(null)\n    let activationTrigger = ref<StateDefinition['activationTrigger']['value']>(\n      ActivationTrigger.Other\n    )\n\n    function adjustOrderedState(\n      adjustment: (\n        options: UnwrapNestedRefs<StateDefinition['options']['value']>\n      ) => UnwrapNestedRefs<StateDefinition['options']['value']> = (i) => i\n    ) {\n      let currentActiveOption =\n        activeOptionIndex.value !== null ? options.value[activeOptionIndex.value] : null\n\n      let sortedOptions = sortByDomNode(adjustment(options.value.slice()), (option) =>\n        dom(option.dataRef.domRef)\n      )\n\n      // If we inserted an option before the current active option then the active option index\n      // would be wrong. To fix this, we will re-lookup the correct index.\n      let adjustedActiveOptionIndex = currentActiveOption\n        ? sortedOptions.indexOf(currentActiveOption)\n        : null\n\n      // Reset to `null` in case the currentActiveOption was removed.\n      if (adjustedActiveOptionIndex === -1) {\n        adjustedActiveOptionIndex = null\n      }\n\n      return {\n        options: sortedOptions,\n        activeOptionIndex: adjustedActiveOptionIndex,\n      }\n    }\n\n    let mode = computed(() => (props.multiple ? ValueMode.Multi : ValueMode.Single))\n    let [value, theirOnChange] = useControllable(\n      computed(() =>\n        props.modelValue === undefined\n          ? match(mode.value, {\n              [ValueMode.Multi]: [],\n              [ValueMode.Single]: undefined,\n            })\n          : props.modelValue\n      ),\n      (value: unknown) => emit('update:modelValue', value),\n      computed(() => props.defaultValue)\n    )\n\n    let api = {\n      listboxState,\n      value,\n      mode,\n      compare(a: any, z: any) {\n        if (typeof props.by === 'string') {\n          let property = props.by as unknown as any\n          return a?.[property] === z?.[property]\n        }\n        return props.by(a, z)\n      },\n      orientation: computed(() => (props.horizontal ? 'horizontal' : 'vertical')),\n      labelRef,\n      buttonRef,\n      optionsRef,\n      disabled: computed(() => props.disabled),\n      options,\n      searchQuery,\n      activeOptionIndex,\n      activationTrigger,\n      closeListbox() {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n        listboxState.value = ListboxStates.Closed\n        activeOptionIndex.value = null\n      },\n      openListbox() {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Open) return\n        listboxState.value = ListboxStates.Open\n      },\n      goToOption(focus: Focus, id?: string, trigger?: ActivationTrigger) {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n\n        let adjustedState = adjustOrderedState()\n        let nextActiveOptionIndex = calculateActiveIndex(\n          focus === Focus.Specific\n            ? { focus: Focus.Specific, id: id! }\n            : { focus: focus as Exclude<Focus, Focus.Specific> },\n          {\n            resolveItems: () => adjustedState.options,\n            resolveActiveIndex: () => adjustedState.activeOptionIndex,\n            resolveId: (option) => option.id,\n            resolveDisabled: (option) => option.dataRef.disabled,\n          }\n        )\n\n        searchQuery.value = ''\n        activeOptionIndex.value = nextActiveOptionIndex\n        activationTrigger.value = trigger ?? ActivationTrigger.Other\n        options.value = adjustedState.options\n      },\n      search(value: string) {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n\n        let wasAlreadySearching = searchQuery.value !== ''\n        let offset = wasAlreadySearching ? 0 : 1\n\n        searchQuery.value += value.toLowerCase()\n\n        let reOrderedOptions =\n          activeOptionIndex.value !== null\n            ? options.value\n                .slice(activeOptionIndex.value + offset)\n                .concat(options.value.slice(0, activeOptionIndex.value + offset))\n            : options.value\n\n        let matchingOption = reOrderedOptions.find(\n          (option) =>\n            option.dataRef.textValue.startsWith(searchQuery.value) && !option.dataRef.disabled\n        )\n\n        let matchIdx = matchingOption ? options.value.indexOf(matchingOption) : -1\n        if (matchIdx === -1 || matchIdx === activeOptionIndex.value) return\n\n        activeOptionIndex.value = matchIdx\n        activationTrigger.value = ActivationTrigger.Other\n      },\n      clearSearch() {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n        if (searchQuery.value === '') return\n\n        searchQuery.value = ''\n      },\n      registerOption(id: string, dataRef: ListboxOptionData) {\n        let adjustedState = adjustOrderedState((options) => {\n          return [...options, { id, dataRef }]\n        })\n\n        options.value = adjustedState.options\n        activeOptionIndex.value = adjustedState.activeOptionIndex\n      },\n      unregisterOption(id: string) {\n        let adjustedState = adjustOrderedState((options) => {\n          let idx = options.findIndex((a) => a.id === id)\n          if (idx !== -1) options.splice(idx, 1)\n          return options\n        })\n\n        options.value = adjustedState.options\n        activeOptionIndex.value = adjustedState.activeOptionIndex\n        activationTrigger.value = ActivationTrigger.Other\n      },\n      select(value: unknown) {\n        if (props.disabled) return\n        theirOnChange(\n          match(mode.value, {\n            [ValueMode.Single]: () => value,\n            [ValueMode.Multi]: () => {\n              let copy = toRaw(api.value.value as unknown[]).slice()\n              let raw = toRaw(value)\n\n              let idx = copy.findIndex((value) => api.compare(raw, toRaw(value)))\n              if (idx === -1) {\n                copy.push(raw)\n              } else {\n                copy.splice(idx, 1)\n              }\n\n              return copy\n            },\n          })\n        )\n      },\n    }\n\n    // Handle outside click\n    useOutsideClick(\n      [buttonRef, optionsRef],\n      (event, target) => {\n        api.closeListbox()\n\n        if (!isFocusableElement(target, FocusableMode.Loose)) {\n          event.preventDefault()\n          dom(buttonRef)?.focus()\n        }\n      },\n      computed(() => listboxState.value === ListboxStates.Open)\n    )\n\n    // @ts-expect-error Types of property 'dataRef' are incompatible.\n    provide(ListboxContext, api)\n    useOpenClosedProvider(\n      computed(() =>\n        match(listboxState.value, {\n          [ListboxStates.Open]: State.Open,\n          [ListboxStates.Closed]: State.Closed,\n        })\n      )\n    )\n\n    let form = computed(() => dom(buttonRef)?.closest('form'))\n    onMounted(() => {\n      watch(\n        [form],\n        () => {\n          if (!form.value) return\n          if (props.defaultValue === undefined) return\n\n          function handle() {\n            api.select(props.defaultValue)\n          }\n\n          form.value.addEventListener('reset', handle)\n\n          return () => {\n            form.value?.removeEventListener('reset', handle)\n          }\n        },\n        { immediate: true }\n      )\n    })\n\n    return () => {\n      let { name, modelValue, disabled, ...theirProps } = props\n\n      let slot = { open: listboxState.value === ListboxStates.Open, disabled, value: value.value }\n\n      return h(Fragment, [\n        ...(name != null && value.value != null\n          ? objectToFormEntries({ [name]: value.value }).map(([name, value]) =>\n              h(\n                Hidden,\n                compact({\n                  features: HiddenFeatures.Hidden,\n                  key: name,\n                  as: 'input',\n                  type: 'hidden',\n                  hidden: true,\n                  readOnly: true,\n                  name,\n                  value,\n                })\n              )\n            )\n          : []),\n        render({\n          ourProps: {},\n          theirProps: {\n            ...attrs,\n            ...omit(theirProps, [\n              'defaultValue',\n              'onUpdate:modelValue',\n              'horizontal',\n              'multiple',\n              'by',\n            ]),\n          },\n          slot,\n          slots,\n          attrs,\n          name: 'Listbox',\n        }),\n      ])\n    }\n  },\n})\n\n// ---\n\nexport let ListboxLabel = defineComponent({\n  name: 'ListboxLabel',\n  props: {\n    as: { type: [Object, String], default: 'label' },\n    id: { type: String, default: () => `headlessui-listbox-label-${useId()}` },\n  },\n  setup(props, { attrs, slots }) {\n    let api = useListboxContext('ListboxLabel')\n\n    function handleClick() {\n      dom(api.buttonRef)?.focus({ preventScroll: true })\n    }\n\n    return () => {\n      let slot = {\n        open: api.listboxState.value === ListboxStates.Open,\n        disabled: api.disabled.value,\n      }\n      let { id, ...theirProps } = props\n      let ourProps = { id, ref: api.labelRef, onClick: handleClick }\n\n      return render({\n        ourProps,\n        theirProps,\n        slot,\n        attrs,\n        slots,\n        name: 'ListboxLabel',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let ListboxButton = defineComponent({\n  name: 'ListboxButton',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    id: { type: String, default: () => `headlessui-listbox-button-${useId()}` },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let api = useListboxContext('ListboxButton')\n\n    expose({ el: api.buttonRef, $el: api.buttonRef })\n\n    function handleKeyDown(event: KeyboardEvent) {\n      switch (event.key) {\n        // Ref: https://www.w3.org/WAI/ARIA/apg/patterns/menubutton/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          api.openListbox()\n          nextTick(() => {\n            dom(api.optionsRef)?.focus({ preventScroll: true })\n            if (!api.value.value) api.goToOption(Focus.First)\n          })\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          api.openListbox()\n          nextTick(() => {\n            dom(api.optionsRef)?.focus({ preventScroll: true })\n            if (!api.value.value) api.goToOption(Focus.Last)\n          })\n          break\n      }\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Space:\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n          break\n      }\n    }\n\n    function handleClick(event: MouseEvent) {\n      if (api.disabled.value) return\n      if (api.listboxState.value === ListboxStates.Open) {\n        api.closeListbox()\n        nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        api.openListbox()\n        nextFrame(() => dom(api.optionsRef)?.focus({ preventScroll: true }))\n      }\n    }\n\n    let type = useResolveButtonType(\n      computed(() => ({ as: props.as, type: attrs.type })),\n      api.buttonRef\n    )\n\n    return () => {\n      let slot = {\n        open: api.listboxState.value === ListboxStates.Open,\n        disabled: api.disabled.value,\n        value: api.value.value,\n      }\n\n      let { id, ...theirProps } = props\n      let ourProps = {\n        ref: api.buttonRef,\n        id,\n        type: type.value,\n        'aria-haspopup': 'listbox',\n        'aria-controls': dom(api.optionsRef)?.id,\n        'aria-expanded': api.disabled.value\n          ? undefined\n          : api.listboxState.value === ListboxStates.Open,\n        'aria-labelledby': api.labelRef.value ? [dom(api.labelRef)?.id, id].join(' ') : undefined,\n        disabled: api.disabled.value === true ? true : undefined,\n        onKeydown: handleKeyDown,\n        onKeyup: handleKeyUp,\n        onClick: handleClick,\n      }\n\n      return render({\n        ourProps,\n        theirProps,\n        slot,\n        attrs,\n        slots,\n        name: 'ListboxButton',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let ListboxOptions = defineComponent({\n  name: 'ListboxOptions',\n  props: {\n    as: { type: [Object, String], default: 'ul' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n    id: { type: String, default: () => `headlessui-listbox-options-${useId()}` },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let api = useListboxContext('ListboxOptions')\n    let searchDebounce = ref<ReturnType<typeof setTimeout> | null>(null)\n\n    expose({ el: api.optionsRef, $el: api.optionsRef })\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (searchDebounce.value) clearTimeout(searchDebounce.value)\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/WAI/ARIA/apg/patterns/menu/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (api.searchQuery.value !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return api.search(event.key)\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          if (api.activeOptionIndex.value !== null) {\n            let activeOption = api.options.value[api.activeOptionIndex.value]\n            api.select(activeOption.dataRef.value)\n          }\n          if (api.mode.value === ValueMode.Single) {\n            api.closeListbox()\n            nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          }\n          break\n\n        case match(api.orientation.value, {\n          vertical: Keys.ArrowDown,\n          horizontal: Keys.ArrowRight,\n        }):\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.Next)\n\n        case match(api.orientation.value, { vertical: Keys.ArrowUp, horizontal: Keys.ArrowLeft }):\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.Previous)\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.First)\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.Last)\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          api.closeListbox()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          break\n\n        default:\n          if (event.key.length === 1) {\n            api.search(event.key)\n            searchDebounce.value = setTimeout(() => api.clearSearch(), 350)\n          }\n          break\n      }\n    }\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.listboxState.value === ListboxStates.Open\n    })\n\n    return () => {\n      let slot = { open: api.listboxState.value === ListboxStates.Open }\n      let { id, ...theirProps } = props\n      let ourProps = {\n        'aria-activedescendant':\n          api.activeOptionIndex.value === null\n            ? undefined\n            : api.options.value[api.activeOptionIndex.value]?.id,\n        'aria-multiselectable': api.mode.value === ValueMode.Multi ? true : undefined,\n        'aria-labelledby': dom(api.labelRef)?.id ?? dom(api.buttonRef)?.id,\n        'aria-orientation': api.orientation.value,\n        id,\n        onKeydown: handleKeyDown,\n        role: 'listbox',\n        tabIndex: 0,\n        ref: api.optionsRef,\n      }\n\n      return render({\n        ourProps,\n        theirProps,\n        slot,\n        attrs,\n        slots,\n        features: Features.RenderStrategy | Features.Static,\n        visible: visible.value,\n        name: 'ListboxOptions',\n      })\n    }\n  },\n})\n\nexport let ListboxOption = defineComponent({\n  name: 'ListboxOption',\n  props: {\n    as: { type: [Object, String], default: 'li' },\n    value: {\n      type: [Object, String, Number, Boolean] as PropType<\n        object | string | number | boolean | null\n      >,\n    },\n    disabled: { type: Boolean, default: false },\n    id: { type: String, default: () => `headlessui-listbox.option-${useId()}` },\n  },\n  setup(props, { slots, attrs, expose }) {\n    let api = useListboxContext('ListboxOption')\n    let internalOptionRef = ref<HTMLElement | null>(null)\n\n    expose({ el: internalOptionRef, $el: internalOptionRef })\n\n    let active = computed(() => {\n      return api.activeOptionIndex.value !== null\n        ? api.options.value[api.activeOptionIndex.value].id === props.id\n        : false\n    })\n\n    let selected = computed(() =>\n      match(api.mode.value, {\n        [ValueMode.Single]: () => api.compare(toRaw(api.value.value), toRaw(props.value)),\n        [ValueMode.Multi]: () =>\n          (toRaw(api.value.value) as unknown[]).some((value) =>\n            api.compare(toRaw(value), toRaw(props.value))\n          ),\n      })\n    )\n    let isFirstSelected = computed(() => {\n      return match(api.mode.value, {\n        [ValueMode.Multi]: () => {\n          let currentValues = toRaw(api.value.value) as unknown[]\n\n          return (\n            api.options.value.find((option) =>\n              currentValues.some((value) => api.compare(toRaw(value), toRaw(option.dataRef.value)))\n            )?.id === props.id\n          )\n        },\n        [ValueMode.Single]: () => selected.value,\n      })\n    })\n\n    let dataRef = computed<ListboxOptionData>(() => ({\n      disabled: props.disabled,\n      value: props.value,\n      textValue: '',\n      domRef: internalOptionRef,\n    }))\n    onMounted(() => {\n      let textValue = dom(internalOptionRef)?.textContent?.toLowerCase().trim()\n      if (textValue !== undefined) dataRef.value.textValue = textValue\n    })\n\n    onMounted(() => api.registerOption(props.id, dataRef))\n    onUnmounted(() => api.unregisterOption(props.id))\n\n    onMounted(() => {\n      watch(\n        [api.listboxState, selected],\n        () => {\n          if (api.listboxState.value !== ListboxStates.Open) return\n          if (!selected.value) return\n\n          match(api.mode.value, {\n            [ValueMode.Multi]: () => {\n              if (isFirstSelected.value) api.goToOption(Focus.Specific, props.id)\n            },\n            [ValueMode.Single]: () => {\n              api.goToOption(Focus.Specific, props.id)\n            },\n          })\n        },\n        { immediate: true }\n      )\n    })\n\n    watchEffect(() => {\n      if (api.listboxState.value !== ListboxStates.Open) return\n      if (!active.value) return\n      if (api.activationTrigger.value === ActivationTrigger.Pointer) return\n      nextTick(() => dom(internalOptionRef)?.scrollIntoView?.({ block: 'nearest' }))\n    })\n\n    function handleClick(event: MouseEvent) {\n      if (props.disabled) return event.preventDefault()\n      api.select(props.value)\n      if (api.mode.value === ValueMode.Single) {\n        api.closeListbox()\n        nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n      }\n    }\n\n    function handleFocus() {\n      if (props.disabled) return api.goToOption(Focus.Nothing)\n      api.goToOption(Focus.Specific, props.id)\n    }\n\n    let pointer = useTrackedPointer()\n\n    function handleEnter(evt: PointerEvent) {\n      pointer.update(evt)\n    }\n\n    function handleMove(evt: PointerEvent) {\n      if (!pointer.wasMoved(evt)) return\n      if (props.disabled) return\n      if (active.value) return\n      api.goToOption(Focus.Specific, props.id, ActivationTrigger.Pointer)\n    }\n\n    function handleLeave(evt: PointerEvent) {\n      if (!pointer.wasMoved(evt)) return\n      if (props.disabled) return\n      if (!active.value) return\n      api.goToOption(Focus.Nothing)\n    }\n\n    return () => {\n      let { disabled } = props\n      let slot = { active: active.value, selected: selected.value, disabled }\n      let { id, value: _value, disabled: _disabled, ...theirProps } = props\n      let ourProps = {\n        id,\n        ref: internalOptionRef,\n        role: 'option',\n        tabIndex: disabled === true ? undefined : -1,\n        'aria-disabled': disabled === true ? true : undefined,\n        // According to the WAI-ARIA best practices, we should use aria-checked for\n        // multi-select,but Voice-Over disagrees. So we use aria-checked instead for\n        // both single and multi-select.\n        'aria-selected': selected.value,\n        disabled: undefined, // Never forward the `disabled` prop\n        onClick: handleClick,\n        onFocus: handleFocus,\n        onPointerenter: handleEnter,\n        onMouseenter: handleEnter,\n        onPointermove: handleMove,\n        onMousemove: handleMove,\n        onPointerleave: handleLeave,\n        onMouseleave: handleLeave,\n      }\n\n      return render({\n        ourProps,\n        theirProps,\n        slot,\n        attrs,\n        slots,\n        name: 'ListboxOption',\n      })\n    }\n  },\n})\n", "import {\n  defineComponent,\n  ref,\n  provide,\n  inject,\n  onMounted,\n  onUnmounted,\n  computed,\n  nextTick,\n  InjectionKey,\n  Ref,\n  watchEffect,\n  ComputedRef,\n  UnwrapNestedRefs,\n} from 'vue'\nimport { Features, render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { Focus, calculateActiveIndex } from '../../utils/calculate-active-index'\nimport { dom } from '../../utils/dom'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\nimport { useOpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\nimport { match } from '../../utils/match'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\nimport {\n  FocusableMode,\n  isFocusableElement,\n  sortByDomNode,\n  Focus as FocusManagementFocus,\n  focusFrom,\n  restoreFocusIfNecessary,\n} from '../../utils/focus-management'\nimport { useOutsideClick } from '../../hooks/use-outside-click'\nimport { useTrackedPointer } from '../../hooks/use-tracked-pointer'\n\nenum MenuStates {\n  Open,\n  Closed,\n}\n\nenum ActivationTrigger {\n  Pointer,\n  Other,\n}\n\nfunction nextFrame(cb: () => void) {\n  requestAnimationFrame(() => requestAnimationFrame(cb))\n}\n\ntype MenuItemData = {\n  textValue: string\n  disabled: boolean\n  domRef: Ref<HTMLElement | null>\n}\ntype StateDefinition = {\n  // State\n  menuState: Ref<MenuStates>\n  buttonRef: Ref<HTMLButtonElement | null>\n  itemsRef: Ref<HTMLDivElement | null>\n  items: Ref<{ id: string; dataRef: ComputedRef<MenuItemData> }[]>\n  searchQuery: Ref<string>\n  activeItemIndex: Ref<number | null>\n  activationTrigger: Ref<ActivationTrigger>\n\n  // State mutators\n  closeMenu(): void\n  openMenu(): void\n  goToItem(focus: Focus, id?: string, trigger?: ActivationTrigger): void\n  search(value: string): void\n  clearSearch(): void\n  registerItem(id: string, dataRef: ComputedRef<MenuItemData>): void\n  unregisterItem(id: string): void\n}\n\nlet MenuContext = Symbol('MenuContext') as InjectionKey<StateDefinition>\n\nfunction useMenuContext(component: string) {\n  let context = inject(MenuContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Menu /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useMenuContext)\n    throw err\n  }\n\n  return context\n}\n\nexport let Menu = defineComponent({\n  name: 'Menu',\n  props: { as: { type: [Object, String], default: 'template' } },\n  setup(props, { slots, attrs }) {\n    let menuState = ref<StateDefinition['menuState']['value']>(MenuStates.Closed)\n    let buttonRef = ref<StateDefinition['buttonRef']['value']>(null)\n    let itemsRef = ref<StateDefinition['itemsRef']['value']>(null)\n    let items = ref<StateDefinition['items']['value']>([])\n    let searchQuery = ref<StateDefinition['searchQuery']['value']>('')\n    let activeItemIndex = ref<StateDefinition['activeItemIndex']['value']>(null)\n    let activationTrigger = ref<StateDefinition['activationTrigger']['value']>(\n      ActivationTrigger.Other\n    )\n\n    function adjustOrderedState(\n      adjustment: (\n        items: UnwrapNestedRefs<StateDefinition['items']['value']>\n      ) => UnwrapNestedRefs<StateDefinition['items']['value']> = (i) => i\n    ) {\n      let currentActiveItem =\n        activeItemIndex.value !== null ? items.value[activeItemIndex.value] : null\n\n      let sortedItems = sortByDomNode(adjustment(items.value.slice()), (item) =>\n        dom(item.dataRef.domRef)\n      )\n\n      // If we inserted an item before the current active item then the active item index\n      // would be wrong. To fix this, we will re-lookup the correct index.\n      let adjustedActiveItemIndex = currentActiveItem\n        ? sortedItems.indexOf(currentActiveItem)\n        : null\n\n      // Reset to `null` in case the currentActiveItem was removed.\n      if (adjustedActiveItemIndex === -1) {\n        adjustedActiveItemIndex = null\n      }\n\n      return {\n        items: sortedItems,\n        activeItemIndex: adjustedActiveItemIndex,\n      }\n    }\n\n    let api = {\n      menuState,\n      buttonRef,\n      itemsRef,\n      items,\n      searchQuery,\n      activeItemIndex,\n      activationTrigger,\n      closeMenu: () => {\n        menuState.value = MenuStates.Closed\n        activeItemIndex.value = null\n      },\n      openMenu: () => (menuState.value = MenuStates.Open),\n      goToItem(focus: Focus, id?: string, trigger?: ActivationTrigger) {\n        let adjustedState = adjustOrderedState()\n        let nextActiveItemIndex = calculateActiveIndex(\n          focus === Focus.Specific\n            ? { focus: Focus.Specific, id: id! }\n            : { focus: focus as Exclude<Focus, Focus.Specific> },\n          {\n            resolveItems: () => adjustedState.items,\n            resolveActiveIndex: () => adjustedState.activeItemIndex,\n            resolveId: (item) => item.id,\n            resolveDisabled: (item) => item.dataRef.disabled,\n          }\n        )\n\n        searchQuery.value = ''\n        activeItemIndex.value = nextActiveItemIndex\n        activationTrigger.value = trigger ?? ActivationTrigger.Other\n        items.value = adjustedState.items\n      },\n      search(value: string) {\n        let wasAlreadySearching = searchQuery.value !== ''\n        let offset = wasAlreadySearching ? 0 : 1\n        searchQuery.value += value.toLowerCase()\n\n        let reOrderedItems =\n          activeItemIndex.value !== null\n            ? items.value\n                .slice(activeItemIndex.value + offset)\n                .concat(items.value.slice(0, activeItemIndex.value + offset))\n            : items.value\n\n        let matchingItem = reOrderedItems.find(\n          (item) => item.dataRef.textValue.startsWith(searchQuery.value) && !item.dataRef.disabled\n        )\n\n        let matchIdx = matchingItem ? items.value.indexOf(matchingItem) : -1\n        if (matchIdx === -1 || matchIdx === activeItemIndex.value) return\n\n        activeItemIndex.value = matchIdx\n        activationTrigger.value = ActivationTrigger.Other\n      },\n      clearSearch() {\n        searchQuery.value = ''\n      },\n      registerItem(id: string, dataRef: MenuItemData) {\n        let adjustedState = adjustOrderedState((items) => {\n          return [...items, { id, dataRef }]\n        })\n\n        items.value = adjustedState.items\n        activeItemIndex.value = adjustedState.activeItemIndex\n        activationTrigger.value = ActivationTrigger.Other\n      },\n      unregisterItem(id: string) {\n        let adjustedState = adjustOrderedState((items) => {\n          let idx = items.findIndex((a) => a.id === id)\n          if (idx !== -1) items.splice(idx, 1)\n          return items\n        })\n\n        items.value = adjustedState.items\n        activeItemIndex.value = adjustedState.activeItemIndex\n        activationTrigger.value = ActivationTrigger.Other\n      },\n    }\n\n    // Handle outside click\n    useOutsideClick(\n      [buttonRef, itemsRef],\n      (event, target) => {\n        api.closeMenu()\n\n        if (!isFocusableElement(target, FocusableMode.Loose)) {\n          event.preventDefault()\n          dom(buttonRef)?.focus()\n        }\n      },\n      computed(() => menuState.value === MenuStates.Open)\n    )\n\n    // @ts-expect-error Types of property 'dataRef' are incompatible.\n    provide(MenuContext, api)\n\n    useOpenClosedProvider(\n      computed(() =>\n        match(menuState.value, {\n          [MenuStates.Open]: State.Open,\n          [MenuStates.Closed]: State.Closed,\n        })\n      )\n    )\n\n    return () => {\n      let slot = { open: menuState.value === MenuStates.Open, close: api.closeMenu }\n      return render({ ourProps: {}, theirProps: props, slot, slots, attrs, name: 'Menu' })\n    }\n  },\n})\n\nexport let MenuButton = defineComponent({\n  name: 'MenuButton',\n  props: {\n    disabled: { type: Boolean, default: false },\n    as: { type: [Object, String], default: 'button' },\n    id: { type: String, default: () => `headlessui-menu-button-${useId()}` },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let api = useMenuContext('MenuButton')\n\n    expose({ el: api.buttonRef, $el: api.buttonRef })\n\n    function handleKeyDown(event: KeyboardEvent) {\n      switch (event.key) {\n        // Ref: https://www.w3.org/WAI/ARIA/apg/patterns/menubutton/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          api.openMenu()\n          nextTick(() => {\n            dom(api.itemsRef)?.focus({ preventScroll: true })\n            api.goToItem(Focus.First)\n          })\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          api.openMenu()\n          nextTick(() => {\n            dom(api.itemsRef)?.focus({ preventScroll: true })\n            api.goToItem(Focus.Last)\n          })\n          break\n      }\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Space:\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n          break\n      }\n    }\n\n    function handleClick(event: MouseEvent) {\n      if (props.disabled) return\n      if (api.menuState.value === MenuStates.Open) {\n        api.closeMenu()\n        nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        api.openMenu()\n        nextFrame(() => dom(api.itemsRef)?.focus({ preventScroll: true }))\n      }\n    }\n\n    let type = useResolveButtonType(\n      computed(() => ({ as: props.as, type: attrs.type })),\n      api.buttonRef\n    )\n\n    return () => {\n      let slot = { open: api.menuState.value === MenuStates.Open }\n\n      let { id, ...theirProps } = props\n      let ourProps = {\n        ref: api.buttonRef,\n        id,\n        type: type.value,\n        'aria-haspopup': 'menu',\n        'aria-controls': dom(api.itemsRef)?.id,\n        'aria-expanded': props.disabled ? undefined : api.menuState.value === MenuStates.Open,\n        onKeydown: handleKeyDown,\n        onKeyup: handleKeyUp,\n        onClick: handleClick,\n      }\n\n      return render({\n        ourProps,\n        theirProps,\n        slot,\n        attrs,\n        slots,\n        name: 'MenuButton',\n      })\n    }\n  },\n})\n\nexport let MenuItems = defineComponent({\n  name: 'MenuItems',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n    id: { type: String, default: () => `headlessui-menu-items-${useId()}` },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let api = useMenuContext('MenuItems')\n    let searchDebounce = ref<ReturnType<typeof setTimeout> | null>(null)\n\n    expose({ el: api.itemsRef, $el: api.itemsRef })\n\n    useTreeWalker({\n      container: computed(() => dom(api.itemsRef)),\n      enabled: computed(() => api.menuState.value === MenuStates.Open),\n      accept(node) {\n        if (node.getAttribute('role') === 'menuitem') return NodeFilter.FILTER_REJECT\n        if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n        return NodeFilter.FILTER_ACCEPT\n      },\n      walk(node) {\n        node.setAttribute('role', 'none')\n      },\n    })\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (searchDebounce.value) clearTimeout(searchDebounce.value)\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/WAI/ARIA/apg/patterns/menu/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (api.searchQuery.value !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return api.search(event.key)\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          if (api.activeItemIndex.value !== null) {\n            let activeItem = api.items.value[api.activeItemIndex.value]\n            let _activeItem = activeItem as unknown as UnwrapNestedRefs<typeof activeItem>\n            dom(_activeItem.dataRef.domRef)?.click()\n          }\n          api.closeMenu()\n          restoreFocusIfNecessary(dom(api.buttonRef))\n          break\n\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.Next)\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.Previous)\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.First)\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.Last)\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          api.closeMenu()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          api.closeMenu()\n          nextTick(() =>\n            focusFrom(\n              dom(api.buttonRef),\n              event.shiftKey ? FocusManagementFocus.Previous : FocusManagementFocus.Next\n            )\n          )\n          break\n\n        default:\n          if (event.key.length === 1) {\n            api.search(event.key)\n            searchDebounce.value = setTimeout(() => api.clearSearch(), 350)\n          }\n          break\n      }\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Space:\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n          break\n      }\n    }\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.menuState.value === MenuStates.Open\n    })\n\n    return () => {\n      let slot = { open: api.menuState.value === MenuStates.Open }\n      let { id, ...theirProps } = props\n      let ourProps = {\n        'aria-activedescendant':\n          api.activeItemIndex.value === null\n            ? undefined\n            : api.items.value[api.activeItemIndex.value]?.id,\n        'aria-labelledby': dom(api.buttonRef)?.id,\n        id,\n        onKeydown: handleKeyDown,\n        onKeyup: handleKeyUp,\n        role: 'menu',\n        tabIndex: 0,\n        ref: api.itemsRef,\n      }\n\n      return render({\n        ourProps,\n        theirProps,\n        slot,\n        attrs,\n        slots,\n        features: Features.RenderStrategy | Features.Static,\n        visible: visible.value,\n        name: 'MenuItems',\n      })\n    }\n  },\n})\n\nexport let MenuItem = defineComponent({\n  name: 'MenuItem',\n  inheritAttrs: false,\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    disabled: { type: Boolean, default: false },\n    id: { type: String, default: () => `headlessui-menu-item-${useId()}` },\n  },\n  setup(props, { slots, attrs, expose }) {\n    let api = useMenuContext('MenuItem')\n    let internalItemRef = ref<HTMLElement | null>(null)\n\n    expose({ el: internalItemRef, $el: internalItemRef })\n\n    let active = computed(() => {\n      return api.activeItemIndex.value !== null\n        ? api.items.value[api.activeItemIndex.value].id === props.id\n        : false\n    })\n\n    let dataRef = computed<MenuItemData>(() => ({\n      disabled: props.disabled,\n      textValue: '',\n      domRef: internalItemRef,\n    }))\n    onMounted(() => {\n      let textValue = dom(internalItemRef)?.textContent?.toLowerCase().trim()\n      if (textValue !== undefined) dataRef.value.textValue = textValue\n    })\n\n    onMounted(() => api.registerItem(props.id, dataRef))\n    onUnmounted(() => api.unregisterItem(props.id))\n\n    watchEffect(() => {\n      if (api.menuState.value !== MenuStates.Open) return\n      if (!active.value) return\n      if (api.activationTrigger.value === ActivationTrigger.Pointer) return\n      nextTick(() => dom(internalItemRef)?.scrollIntoView?.({ block: 'nearest' }))\n    })\n\n    function handleClick(event: MouseEvent) {\n      if (props.disabled) return event.preventDefault()\n      api.closeMenu()\n      restoreFocusIfNecessary(dom(api.buttonRef))\n    }\n\n    function handleFocus() {\n      if (props.disabled) return api.goToItem(Focus.Nothing)\n      api.goToItem(Focus.Specific, props.id)\n    }\n\n    let pointer = useTrackedPointer()\n\n    function handleEnter(evt: PointerEvent) {\n      pointer.update(evt)\n    }\n\n    function handleMove(evt: PointerEvent) {\n      if (!pointer.wasMoved(evt)) return\n      if (props.disabled) return\n      if (active.value) return\n      api.goToItem(Focus.Specific, props.id, ActivationTrigger.Pointer)\n    }\n\n    function handleLeave(evt: PointerEvent) {\n      if (!pointer.wasMoved(evt)) return\n      if (props.disabled) return\n      if (!active.value) return\n      api.goToItem(Focus.Nothing)\n    }\n\n    return () => {\n      let { disabled } = props\n      let slot = { active: active.value, disabled, close: api.closeMenu }\n      let { id, ...theirProps } = props\n      let ourProps = {\n        id,\n        ref: internalItemRef,\n        role: 'menuitem',\n        tabIndex: disabled === true ? undefined : -1,\n        'aria-disabled': disabled === true ? true : undefined,\n        disabled: undefined, // Never forward the `disabled` prop\n        onClick: handleClick,\n        onFocus: handleFocus,\n        onPointerenter: handleEnter,\n        onMouseenter: handleEnter,\n        onPointermove: handleMove,\n        onMousemove: handleMove,\n        onPointerleave: handleLeave,\n        onMouseleave: handleLeave,\n      }\n\n      return render({\n        ourProps,\n        theirProps: { ...attrs, ...theirProps },\n        slot,\n        attrs,\n        slots,\n        name: 'MenuItem',\n      })\n    }\n  },\n})\n", "import {\n  Fragment,\n  computed,\n  defineComponent,\n  h,\n  inject,\n  provide,\n  ref,\n  shallowRef,\n  watchEffect,\n  onMounted,\n  onUnmounted,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nimport { match } from '../../utils/match'\nimport { render, Features } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport {\n  getFocusableElements,\n  Focus,\n  focusIn,\n  isFocusableElement,\n  FocusableMode,\n  FocusResult,\n} from '../../utils/focus-management'\nimport { dom } from '../../utils/dom'\nimport { useOpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\nimport { useOutsideClick } from '../../hooks/use-outside-click'\nimport { getOwnerDocument } from '../../utils/owner'\nimport { useEventListener } from '../../hooks/use-event-listener'\nimport { Hidden, Features as HiddenFeatures } from '../../internal/hidden'\nimport { useTabDirection, Direction as TabDirection } from '../../hooks/use-tab-direction'\nimport { microTask } from '../../utils/micro-task'\n\nenum PopoverStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  // State\n  popoverState: Ref<PopoverStates>\n  button: Ref<HTMLElement | null>\n  buttonId: Ref<string | null>\n  panel: Ref<HTMLElement | null>\n  panelId: Ref<string | null>\n\n  isPortalled: Ref<boolean>\n\n  beforePanelSentinel: Ref<HTMLElement | null>\n  afterPanelSentinel: Ref<HTMLElement | null>\n\n  // State mutators\n  togglePopover(): void\n  closePopover(): void\n\n  // Exposed functions\n  close(focusableElement: HTMLElement | Ref<HTMLElement | null>): void\n}\n\nlet PopoverContext = Symbol('PopoverContext') as InjectionKey<StateDefinition>\nfunction usePopoverContext(component: string) {\n  let context = inject(PopoverContext, null)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Popover.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, usePopoverContext)\n    throw err\n  }\n  return context\n}\n\nlet PopoverGroupContext = Symbol('PopoverGroupContext') as InjectionKey<{\n  registerPopover(registerbag: PopoverRegisterBag): void\n  unregisterPopover(registerbag: PopoverRegisterBag): void\n  isFocusWithinPopoverGroup(): boolean\n  closeOthers(buttonId: string): void\n} | null>\n\nfunction usePopoverGroupContext() {\n  return inject(PopoverGroupContext, null)\n}\n\nlet PopoverPanelContext = Symbol('PopoverPanelContext') as InjectionKey<Ref<string | null>>\nfunction usePopoverPanelContext() {\n  return inject(PopoverPanelContext, null)\n}\n\ninterface PopoverRegisterBag {\n  buttonId: Ref<string | null>\n  panelId: Ref<string | null>\n  close(): void\n}\n\n// ---\n\nexport let Popover = defineComponent({\n  name: 'Popover',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { slots, attrs, expose }) {\n    let internalPopoverRef = ref<HTMLElement | null>(null)\n\n    expose({ el: internalPopoverRef, $el: internalPopoverRef })\n\n    let popoverState = ref<StateDefinition['popoverState']['value']>(PopoverStates.Closed)\n    let button = ref<StateDefinition['button']['value']>(null)\n    let beforePanelSentinel = ref<StateDefinition['beforePanelSentinel']['value']>(null)\n    let afterPanelSentinel = ref<StateDefinition['afterPanelSentinel']['value']>(null)\n    let panel = ref<StateDefinition['panel']['value']>(null)\n    let ownerDocument = computed(() => getOwnerDocument(internalPopoverRef))\n    let isPortalled = computed(() => {\n      if (!dom(button)) return false\n      if (!dom(panel)) return false\n\n      // We are part of a different \"root\" tree, so therefore we can consider it portalled. This is a\n      // heuristic because 3rd party tools could use some form of portal, typically rendered at the\n      // end of the body but we don't have an actual reference to that.\n      for (let root of document.querySelectorAll('body > *')) {\n        if (Number(root?.contains(dom(button))) ^ Number(root?.contains(dom(panel)))) {\n          return true\n        }\n      }\n\n      // Use another heuristic to try and calculate wether or not the focusable elements are near\n      // eachother (aka, following the default focus/tab order from the browser). If they are then it\n      // doesn't really matter if they are portalled or not because we can follow the default tab\n      // order. But if they are not, then we can consider it being portalled so that we can ensure\n      // that tab and shift+tab (hopefully) go to the correct spot.\n      let elements = getFocusableElements()\n      let buttonIdx = elements.indexOf(dom(button)!)\n\n      let beforeIdx = (buttonIdx + elements.length - 1) % elements.length\n      let afterIdx = (buttonIdx + 1) % elements.length\n\n      let beforeElement = elements[beforeIdx]\n      let afterElement = elements[afterIdx]\n\n      if (!dom(panel)?.contains(beforeElement) && !dom(panel)?.contains(afterElement)) {\n        return true\n      }\n\n      return false\n    })\n\n    let api = {\n      popoverState,\n      buttonId: ref(null),\n      panelId: ref(null),\n      panel,\n      button,\n      isPortalled,\n      beforePanelSentinel,\n      afterPanelSentinel,\n      togglePopover() {\n        popoverState.value = match(popoverState.value, {\n          [PopoverStates.Open]: PopoverStates.Closed,\n          [PopoverStates.Closed]: PopoverStates.Open,\n        })\n      },\n      closePopover() {\n        if (popoverState.value === PopoverStates.Closed) return\n        popoverState.value = PopoverStates.Closed\n      },\n      close(focusableElement: HTMLElement | Ref<HTMLElement | null>) {\n        api.closePopover()\n\n        let restoreElement = (() => {\n          if (!focusableElement) return dom(api.button)\n          if (focusableElement instanceof HTMLElement) return focusableElement\n          if (focusableElement.value instanceof HTMLElement) return dom(focusableElement)\n\n          return dom(api.button)\n        })()\n\n        restoreElement?.focus()\n      },\n    } as StateDefinition\n\n    provide(PopoverContext, api)\n    useOpenClosedProvider(\n      computed(() =>\n        match(popoverState.value, {\n          [PopoverStates.Open]: State.Open,\n          [PopoverStates.Closed]: State.Closed,\n        })\n      )\n    )\n\n    let registerBag = {\n      buttonId: api.buttonId,\n      panelId: api.panelId,\n      close() {\n        api.closePopover()\n      },\n    }\n\n    let groupContext = usePopoverGroupContext()\n    let registerPopover = groupContext?.registerPopover\n\n    function isFocusWithinPopoverGroup() {\n      return (\n        groupContext?.isFocusWithinPopoverGroup() ??\n        (ownerDocument.value?.activeElement &&\n          (dom(button)?.contains(ownerDocument.value.activeElement) ||\n            dom(panel)?.contains(ownerDocument.value.activeElement)))\n      )\n    }\n\n    watchEffect(() => registerPopover?.(registerBag))\n\n    // Handle focus out\n    useEventListener(\n      ownerDocument.value?.defaultView,\n      'focus',\n      (event) => {\n        if (popoverState.value !== PopoverStates.Open) return\n        if (isFocusWithinPopoverGroup()) return\n        if (!button) return\n        if (!panel) return\n        if (event.target === window) return\n        if (dom(api.beforePanelSentinel)?.contains(event.target as HTMLElement)) return\n        if (dom(api.afterPanelSentinel)?.contains(event.target as HTMLElement)) return\n\n        api.closePopover()\n      },\n      true\n    )\n\n    // Handle outside click\n    useOutsideClick(\n      [button, panel],\n      (event, target) => {\n        api.closePopover()\n\n        if (!isFocusableElement(target, FocusableMode.Loose)) {\n          event.preventDefault()\n          dom(button)?.focus()\n        }\n      },\n      computed(() => popoverState.value === PopoverStates.Open)\n    )\n\n    return () => {\n      let slot = { open: popoverState.value === PopoverStates.Open, close: api.close }\n      return render({\n        theirProps: props,\n        ourProps: { ref: internalPopoverRef },\n        slot,\n        slots,\n        attrs,\n        name: 'Popover',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let PopoverButton = defineComponent({\n  name: 'PopoverButton',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    disabled: { type: [Boolean], default: false },\n    id: { type: String, default: () => `headlessui-popover-button-${useId()}` },\n  },\n  inheritAttrs: false,\n  setup(props, { attrs, slots, expose }) {\n    let api = usePopoverContext('PopoverButton')\n    let ownerDocument = computed(() => getOwnerDocument(api.button))\n\n    expose({ el: api.button, $el: api.button })\n\n    onMounted(() => {\n      api.buttonId.value = props.id\n    })\n    onUnmounted(() => {\n      api.buttonId.value = null\n    })\n\n    let groupContext = usePopoverGroupContext()\n    let closeOthers = groupContext?.closeOthers\n\n    let panelContext = usePopoverPanelContext()\n    let isWithinPanel = computed(() =>\n      panelContext === null ? false : panelContext.value === api.panelId.value\n    )\n\n    let elementRef = ref(null)\n    let sentinelId = `headlessui-focus-sentinel-${useId()}`\n\n    if (!isWithinPanel.value) {\n      watchEffect(() => {\n        api.button.value = elementRef.value\n      })\n    }\n\n    let type = useResolveButtonType(\n      computed(() => ({ as: props.as, type: attrs.type })),\n      elementRef\n    )\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (isWithinPanel.value) {\n        if (api.popoverState.value === PopoverStates.Closed) return\n        switch (event.key) {\n          case Keys.Space:\n          case Keys.Enter:\n            event.preventDefault() // Prevent triggering a *click* event\n            // @ts-expect-error\n            event.target.click?.()\n            api.closePopover()\n            dom(api.button)?.focus() // Re-focus the original opening Button\n            break\n        }\n      } else {\n        switch (event.key) {\n          case Keys.Space:\n          case Keys.Enter:\n            event.preventDefault() // Prevent triggering a *click* event\n            event.stopPropagation()\n            if (api.popoverState.value === PopoverStates.Closed) closeOthers?.(api.buttonId.value!)\n            api.togglePopover()\n            break\n\n          case Keys.Escape:\n            if (api.popoverState.value !== PopoverStates.Open)\n              return closeOthers?.(api.buttonId.value!)\n            if (!dom(api.button)) return\n            if (\n              ownerDocument.value?.activeElement &&\n              !dom(api.button)?.contains(ownerDocument.value.activeElement)\n            )\n              return\n            event.preventDefault()\n            event.stopPropagation()\n            api.closePopover()\n            break\n        }\n      }\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      if (isWithinPanel.value) return\n      if (event.key === Keys.Space) {\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n      }\n    }\n\n    function handleClick(event: MouseEvent) {\n      if (props.disabled) return\n      if (isWithinPanel.value) {\n        api.closePopover()\n        dom(api.button)?.focus() // Re-focus the original opening Button\n      } else {\n        event.preventDefault()\n        event.stopPropagation()\n        if (api.popoverState.value === PopoverStates.Closed) closeOthers?.(api.buttonId.value!)\n        api.togglePopover()\n        dom(api.button)?.focus()\n      }\n    }\n\n    function handleMouseDown(event: MouseEvent) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n\n    return () => {\n      let visible = api.popoverState.value === PopoverStates.Open\n      let slot = { open: visible }\n      let { id, ...theirProps } = props\n      let ourProps = isWithinPanel.value\n        ? {\n            ref: elementRef,\n            type: type.value,\n            onKeydown: handleKeyDown,\n            onClick: handleClick,\n          }\n        : {\n            ref: elementRef,\n            id,\n            type: type.value,\n            'aria-expanded': props.disabled\n              ? undefined\n              : api.popoverState.value === PopoverStates.Open,\n            'aria-controls': dom(api.panel) ? api.panelId.value : undefined,\n            disabled: props.disabled ? true : undefined,\n            onKeydown: handleKeyDown,\n            onKeyup: handleKeyUp,\n            onClick: handleClick,\n            onMousedown: handleMouseDown,\n          }\n\n      let direction = useTabDirection()\n      function handleFocus() {\n        let el = dom(api.panel) as HTMLElement\n        if (!el) return\n\n        function run() {\n          let result = match(direction.value, {\n            [TabDirection.Forwards]: () => focusIn(el, Focus.First),\n            [TabDirection.Backwards]: () => focusIn(el, Focus.Last),\n          })\n\n          if (result === FocusResult.Error) {\n            focusIn(\n              getFocusableElements().filter((el) => el.dataset.headlessuiFocusGuard !== 'true'),\n              match(direction.value, {\n                [TabDirection.Forwards]: Focus.Next,\n                [TabDirection.Backwards]: Focus.Previous,\n              }),\n              { relativeTo: dom(api.button) }\n            )\n          }\n        }\n\n        // TODO: Cleanup once we are using real browser tests\n        if (process.env.NODE_ENV === 'test') {\n          microTask(run)\n        } else {\n          run()\n        }\n      }\n\n      return h(Fragment, [\n        render({\n          ourProps,\n          theirProps: { ...attrs, ...theirProps },\n          slot,\n          attrs: attrs,\n          slots: slots,\n          name: 'PopoverButton',\n        }),\n        visible &&\n          !isWithinPanel.value &&\n          api.isPortalled.value &&\n          h(Hidden, {\n            id: sentinelId,\n            features: HiddenFeatures.Focusable,\n            'data-headlessui-focus-guard': true,\n            as: 'button',\n            type: 'button',\n            onFocus: handleFocus,\n          }),\n      ])\n    }\n  },\n})\n\n// ---\n\nexport let PopoverOverlay = defineComponent({\n  name: 'PopoverOverlay',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  setup(props, { attrs, slots }) {\n    let api = usePopoverContext('PopoverOverlay')\n    let id = `headlessui-popover-overlay-${useId()}`\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.popoverState.value === PopoverStates.Open\n    })\n\n    function handleClick() {\n      api.closePopover()\n    }\n\n    return () => {\n      let slot = { open: api.popoverState.value === PopoverStates.Open }\n      let ourProps = {\n        id,\n        'aria-hidden': true,\n        onClick: handleClick,\n      }\n\n      return render({\n        ourProps,\n        theirProps: props,\n        slot,\n        attrs,\n        slots,\n        features: Features.RenderStrategy | Features.Static,\n        visible: visible.value,\n        name: 'PopoverOverlay',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let PopoverPanel = defineComponent({\n  name: 'PopoverPanel',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n    focus: { type: Boolean, default: false },\n    id: { type: String, default: () => `headlessui-popover-panel-${useId()}` },\n  },\n  inheritAttrs: false,\n  setup(props, { attrs, slots, expose }) {\n    let { focus } = props\n    let api = usePopoverContext('PopoverPanel')\n    let ownerDocument = computed(() => getOwnerDocument(api.panel))\n\n    let beforePanelSentinelId = `headlessui-focus-sentinel-before-${useId()}`\n    let afterPanelSentinelId = `headlessui-focus-sentinel-after-${useId()}`\n\n    expose({ el: api.panel, $el: api.panel })\n\n    onMounted(() => {\n      api.panelId.value = props.id\n    })\n    onUnmounted(() => {\n      api.panelId.value = null\n    })\n\n    provide(PopoverPanelContext, api.panelId)\n\n    // Move focus within panel\n    watchEffect(() => {\n      if (!focus) return\n      if (api.popoverState.value !== PopoverStates.Open) return\n      if (!api.panel) return\n\n      let activeElement = ownerDocument.value?.activeElement as HTMLElement\n      if (dom(api.panel)?.contains(activeElement)) return // Already focused within Dialog\n\n      focusIn(dom(api.panel)!, Focus.First)\n    })\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.popoverState.value === PopoverStates.Open\n    })\n\n    function handleKeyDown(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Escape:\n          if (api.popoverState.value !== PopoverStates.Open) return\n          if (!dom(api.panel)) return\n          if (ownerDocument.value && !dom(api.panel)?.contains(ownerDocument.value.activeElement)) {\n            return\n          }\n          event.preventDefault()\n          event.stopPropagation()\n          api.closePopover()\n          dom(api.button)?.focus()\n          break\n      }\n    }\n\n    function handleBlur(event: MouseEvent) {\n      let el = event.relatedTarget as HTMLElement\n      if (!el) return\n      if (!dom(api.panel)) return\n      if (dom(api.panel)?.contains(el)) return\n\n      api.closePopover()\n\n      if (\n        dom(api.beforePanelSentinel)?.contains?.(el) ||\n        dom(api.afterPanelSentinel)?.contains?.(el)\n      ) {\n        el.focus({ preventScroll: true })\n      }\n    }\n\n    let direction = useTabDirection()\n    function handleBeforeFocus() {\n      let el = dom(api.panel) as HTMLElement\n      if (!el) return\n\n      function run() {\n        match(direction.value, {\n          [TabDirection.Forwards]: () => {\n            // Try to focus the first thing in the panel. But if that fails (e.g.: there are no\n            // focusable elements, then we can move outside of the panel)\n            let result = focusIn(el, Focus.First)\n            if (result === FocusResult.Error) {\n              dom(api.afterPanelSentinel)?.focus()\n            }\n          },\n          [TabDirection.Backwards]: () => {\n            // Coming from the Popover.Panel (which is portalled to somewhere else). Let's redirect\n            // the focus to the Popover.Button again.\n            dom(api.button)?.focus({ preventScroll: true })\n          },\n        })\n      }\n\n      // TODO: Cleanup once we are using real browser tests\n      if (process.env.NODE_ENV === 'test') {\n        microTask(run)\n      } else {\n        run()\n      }\n    }\n\n    function handleAfterFocus() {\n      let el = dom(api.panel) as HTMLElement\n      if (!el) return\n\n      function run() {\n        match(direction.value, {\n          [TabDirection.Forwards]: () => {\n            let button = dom(api.button)\n            let panel = dom(api.panel)\n            if (!button) return\n\n            let elements = getFocusableElements()\n\n            let idx = elements.indexOf(button)\n            let before = elements.slice(0, idx + 1)\n            let after = elements.slice(idx + 1)\n\n            let combined = [...after, ...before]\n\n            // Ignore sentinel buttons and items inside the panel\n            for (let element of combined.slice()) {\n              if (element.dataset.headlessuiFocusGuard === 'true' || panel?.contains(element)) {\n                let idx = combined.indexOf(element)\n                if (idx !== -1) combined.splice(idx, 1)\n              }\n            }\n\n            focusIn(combined, Focus.First, { sorted: false })\n          },\n          [TabDirection.Backwards]: () => {\n            // Try to focus the first thing in the panel. But if that fails (e.g.: there are no\n            // focusable elements, then we can move outside of the panel)\n            let result = focusIn(el, Focus.Previous)\n            if (result === FocusResult.Error) {\n              dom(api.button)?.focus()\n            }\n          },\n        })\n      }\n\n      // TODO: Cleanup once we are using real browser tests\n      if (process.env.NODE_ENV === 'test') {\n        microTask(run)\n      } else {\n        run()\n      }\n    }\n\n    return () => {\n      let slot = {\n        open: api.popoverState.value === PopoverStates.Open,\n        close: api.close,\n      }\n\n      let { id, focus: _focus, ...theirProps } = props\n      let ourProps = {\n        ref: api.panel,\n        id,\n        onKeydown: handleKeyDown,\n        onFocusout: focus && api.popoverState.value === PopoverStates.Open ? handleBlur : undefined,\n        tabIndex: -1,\n      }\n\n      return render({\n        ourProps,\n        theirProps: { ...attrs, ...theirProps },\n        attrs,\n        slot,\n        slots: {\n          ...slots,\n          default: (...args) => [\n            h(Fragment, [\n              visible.value &&\n                api.isPortalled.value &&\n                h(Hidden, {\n                  id: beforePanelSentinelId,\n                  ref: api.beforePanelSentinel,\n                  features: HiddenFeatures.Focusable,\n                  'data-headlessui-focus-guard': true,\n                  as: 'button',\n                  type: 'button',\n                  onFocus: handleBeforeFocus,\n                }),\n              slots.default?.(...args),\n              visible.value &&\n                api.isPortalled.value &&\n                h(Hidden, {\n                  id: afterPanelSentinelId,\n                  ref: api.afterPanelSentinel,\n                  features: HiddenFeatures.Focusable,\n                  'data-headlessui-focus-guard': true,\n                  as: 'button',\n                  type: 'button',\n                  onFocus: handleAfterFocus,\n                }),\n            ]),\n          ],\n        },\n        features: Features.RenderStrategy | Features.Static,\n        visible: visible.value,\n        name: 'PopoverPanel',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let PopoverGroup = defineComponent({\n  name: 'PopoverGroup',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let groupRef = ref<HTMLElement | null>(null)\n    let popovers = shallowRef<PopoverRegisterBag[]>([])\n    let ownerDocument = computed(() => getOwnerDocument(groupRef))\n\n    expose({ el: groupRef, $el: groupRef })\n\n    function unregisterPopover(registerBag: PopoverRegisterBag) {\n      let idx = popovers.value.indexOf(registerBag)\n      if (idx !== -1) popovers.value.splice(idx, 1)\n    }\n\n    function registerPopover(registerBag: PopoverRegisterBag) {\n      popovers.value.push(registerBag)\n      return () => {\n        unregisterPopover(registerBag)\n      }\n    }\n\n    function isFocusWithinPopoverGroup() {\n      let owner = ownerDocument.value\n      if (!owner) return false\n      let element = owner.activeElement as HTMLElement\n\n      if (dom(groupRef)?.contains(element)) return true\n\n      // Check if the focus is in one of the button or panel elements. This is important in case you are rendering inside a Portal.\n      return popovers.value.some((bag) => {\n        return (\n          owner!.getElementById(bag.buttonId.value!)?.contains(element) ||\n          owner!.getElementById(bag.panelId.value!)?.contains(element)\n        )\n      })\n    }\n\n    function closeOthers(buttonId: string) {\n      for (let popover of popovers.value) {\n        if (popover.buttonId.value !== buttonId) popover.close()\n      }\n    }\n\n    provide(PopoverGroupContext, {\n      registerPopover,\n      unregisterPopover,\n      isFocusWithinPopoverGroup,\n      closeOthers,\n    })\n\n    return () => {\n      let ourProps = { ref: groupRef }\n\n      return render({\n        ourProps,\n        theirProps: props,\n        slot: {},\n        attrs,\n        slots,\n        name: 'PopoverGroup',\n      })\n    }\n  },\n})\n", "import {\n  Fragment,\n  computed,\n  defineComponent,\n  h,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  toRaw,\n  watch,\n\n  // Types\n  InjectionKey,\n  Ref,\n  UnwrapRef,\n} from 'vue'\nimport { dom } from '../../utils/dom'\nimport { Keys } from '../../keyboard'\nimport { focusIn, Focus, FocusResult, sortByDomNode } from '../../utils/focus-management'\nimport { useId } from '../../hooks/use-id'\nimport { compact, omit, render } from '../../utils/render'\nimport { Label, useLabels } from '../label/label'\nimport { Description, useDescriptions } from '../description/description'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\nimport { Hidden, Features as HiddenFeatures } from '../../internal/hidden'\nimport { attemptSubmit, objectToFormEntries } from '../../utils/form'\nimport { getOwnerDocument } from '../../utils/owner'\nimport { useControllable } from '../../hooks/use-controllable'\n\nfunction defaultComparator<T>(a: T, z: T): boolean {\n  return a === z\n}\n\ninterface Option {\n  id: string\n  element: Ref<HTMLElement | null>\n  propsRef: Ref<{ value: unknown; disabled: boolean }>\n}\n\ninterface StateDefinition {\n  // State\n  options: Ref<Option[]>\n  value: Ref<unknown>\n  disabled: Ref<boolean>\n  firstOption: Ref<Option | undefined>\n  containsCheckedOption: Ref<boolean>\n\n  compare(a: unknown, z: unknown): boolean\n\n  // State mutators\n  change(nextValue: unknown): boolean\n  registerOption(action: Option): void\n  unregisterOption(id: Option['id']): void\n}\n\nlet RadioGroupContext = Symbol('RadioGroupContext') as InjectionKey<StateDefinition>\n\nfunction useRadioGroupContext(component: string) {\n  let context = inject(RadioGroupContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <RadioGroup /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useRadioGroupContext)\n    throw err\n  }\n\n  return context\n}\n\n// ---\n\nexport let RadioGroup = defineComponent({\n  name: 'RadioGroup',\n  emits: { 'update:modelValue': (_value: any) => true },\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    disabled: { type: [Boolean], default: false },\n    by: { type: [String, Function], default: () => defaultComparator },\n    modelValue: { type: [Object, String, Number, Boolean], default: undefined },\n    defaultValue: { type: [Object, String, Number, Boolean], default: undefined },\n    name: { type: String, optional: true },\n    id: { type: String, default: () => `headlessui-radiogroup-${useId()}` },\n  },\n  inheritAttrs: false,\n  setup(props, { emit, attrs, slots, expose }) {\n    let radioGroupRef = ref<HTMLElement | null>(null)\n    let options = ref<StateDefinition['options']['value']>([])\n    let labelledby = useLabels({ name: 'RadioGroupLabel' })\n    let describedby = useDescriptions({ name: 'RadioGroupDescription' })\n\n    expose({ el: radioGroupRef, $el: radioGroupRef })\n\n    let [value, theirOnChange] = useControllable(\n      computed(() => props.modelValue),\n      (value: unknown) => emit('update:modelValue', value),\n      computed(() => props.defaultValue)\n    )\n\n    // TODO: Fix type\n    let api: any = {\n      options,\n      value,\n      disabled: computed(() => props.disabled),\n      firstOption: computed(() =>\n        options.value.find((option) => {\n          if (option.propsRef.disabled) return false\n          return true\n        })\n      ),\n      containsCheckedOption: computed(() =>\n        options.value.some((option) =>\n          api.compare(toRaw(option.propsRef.value), toRaw(props.modelValue))\n        )\n      ),\n      compare(a: any, z: any) {\n        if (typeof props.by === 'string') {\n          let property = props.by as unknown as any\n          return a?.[property] === z?.[property]\n        }\n        return props.by(a, z)\n      },\n      change(nextValue: unknown) {\n        if (props.disabled) return false\n        if (api.compare(toRaw(value.value), toRaw(nextValue))) return false\n        let nextOption = options.value.find((option) =>\n          api.compare(toRaw(option.propsRef.value), toRaw(nextValue))\n        )?.propsRef\n        if (nextOption?.disabled) return false\n        theirOnChange(nextValue)\n        return true\n      },\n      registerOption(action: UnwrapRef<Option>) {\n        options.value.push(action)\n        options.value = sortByDomNode(options.value, (option) => option.element)\n      },\n      unregisterOption(id: Option['id']) {\n        let idx = options.value.findIndex((radio) => radio.id === id)\n        if (idx === -1) return\n        options.value.splice(idx, 1)\n      },\n    }\n\n    provide(RadioGroupContext, api)\n\n    useTreeWalker({\n      container: computed(() => dom(radioGroupRef)),\n      accept(node) {\n        if (node.getAttribute('role') === 'radio') return NodeFilter.FILTER_REJECT\n        if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n        return NodeFilter.FILTER_ACCEPT\n      },\n      walk(node) {\n        node.setAttribute('role', 'none')\n      },\n    })\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (!radioGroupRef.value) return\n      if (!radioGroupRef.value.contains(event.target as HTMLElement)) return\n\n      let all = options.value\n        .filter((option) => option.propsRef.disabled === false)\n        .map((radio) => radio.element) as HTMLElement[]\n\n      switch (event.key) {\n        case Keys.Enter:\n          attemptSubmit(event.currentTarget as unknown as EventTarget & HTMLButtonElement)\n          break\n        case Keys.ArrowLeft:\n        case Keys.ArrowUp:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Previous | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.value.find(\n                (option) => option.element === getOwnerDocument(radioGroupRef)?.activeElement\n              )\n              if (activeOption) api.change(activeOption.propsRef.value)\n            }\n          }\n          break\n\n        case Keys.ArrowRight:\n        case Keys.ArrowDown:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Next | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.value.find(\n                (option) => option.element === getOwnerDocument(option.element)?.activeElement\n              )\n              if (activeOption) api.change(activeOption.propsRef.value)\n            }\n          }\n          break\n\n        case Keys.Space:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let activeOption = options.value.find(\n              (option) => option.element === getOwnerDocument(option.element)?.activeElement\n            )\n            if (activeOption) api.change(activeOption.propsRef.value)\n          }\n          break\n      }\n    }\n\n    let form = computed(() => dom(radioGroupRef)?.closest('form'))\n    onMounted(() => {\n      watch(\n        [form],\n        () => {\n          if (!form.value) return\n          if (props.defaultValue === undefined) return\n\n          function handle() {\n            api.change(props.defaultValue)\n          }\n\n          form.value.addEventListener('reset', handle)\n\n          return () => {\n            form.value?.removeEventListener('reset', handle)\n          }\n        },\n        { immediate: true }\n      )\n    })\n\n    return () => {\n      let { disabled, name, id, ...theirProps } = props\n\n      let ourProps = {\n        ref: radioGroupRef,\n        id,\n        role: 'radiogroup',\n        'aria-labelledby': labelledby.value,\n        'aria-describedby': describedby.value,\n        onKeydown: handleKeyDown,\n      }\n\n      return h(Fragment, [\n        ...(name != null && value.value != null\n          ? objectToFormEntries({ [name]: value.value }).map(([name, value]) =>\n              h(\n                Hidden,\n                compact({\n                  features: HiddenFeatures.Hidden,\n                  key: name,\n                  as: 'input',\n                  type: 'hidden',\n                  hidden: true,\n                  readOnly: true,\n                  name,\n                  value,\n                })\n              )\n            )\n          : []),\n        render({\n          ourProps,\n          theirProps: { ...attrs, ...omit(theirProps, ['modelValue', 'defaultValue']) },\n          slot: {},\n          attrs,\n          slots,\n          name: 'RadioGroup',\n        }),\n      ])\n    }\n  },\n})\n\n// ---\n\nenum OptionState {\n  Empty = 1 << 0,\n  Active = 1 << 1,\n}\n\nexport let RadioGroupOption = defineComponent({\n  name: 'RadioGroupOption',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    value: { type: [Object, String, Number, Boolean] },\n    disabled: { type: Boolean, default: false },\n    id: { type: String, default: () => `headlessui-radiogroup-option-${useId()}` },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let api = useRadioGroupContext('RadioGroupOption')\n    let labelledby = useLabels({ name: 'RadioGroupLabel' })\n    let describedby = useDescriptions({ name: 'RadioGroupDescription' })\n\n    let optionRef = ref<HTMLElement | null>(null)\n    let propsRef = computed(() => ({ value: props.value, disabled: props.disabled }))\n    let state = ref(OptionState.Empty)\n\n    expose({ el: optionRef, $el: optionRef })\n\n    onMounted(() => api.registerOption({ id: props.id, element: optionRef, propsRef }))\n    onUnmounted(() => api.unregisterOption(props.id))\n\n    let isFirstOption = computed(() => api.firstOption.value?.id === props.id)\n    let disabled = computed(() => api.disabled.value || props.disabled)\n    let checked = computed(() => api.compare(toRaw(api.value.value), toRaw(props.value)))\n    let tabIndex = computed(() => {\n      if (disabled.value) return -1\n      if (checked.value) return 0\n      if (!api.containsCheckedOption.value && isFirstOption.value) return 0\n      return -1\n    })\n\n    function handleClick() {\n      if (!api.change(props.value)) return\n\n      state.value |= OptionState.Active\n      optionRef.value?.focus()\n    }\n\n    function handleFocus() {\n      state.value |= OptionState.Active\n    }\n\n    function handleBlur() {\n      state.value &= ~OptionState.Active\n    }\n\n    return () => {\n      let { id, value: _value, disabled: _disabled, ...theirProps } = props\n\n      let slot = {\n        checked: checked.value,\n        disabled: disabled.value,\n        active: Boolean(state.value & OptionState.Active),\n      }\n\n      let ourProps = {\n        id,\n        ref: optionRef,\n        role: 'radio',\n        'aria-checked': checked.value ? 'true' : 'false',\n        'aria-labelledby': labelledby.value,\n        'aria-describedby': describedby.value,\n        'aria-disabled': disabled.value ? true : undefined,\n        tabIndex: tabIndex.value,\n        onClick: disabled.value ? undefined : handleClick,\n        onFocus: disabled.value ? undefined : handleFocus,\n        onBlur: disabled.value ? undefined : handleBlur,\n      }\n\n      return render({\n        ourProps,\n        theirProps,\n        slot,\n        attrs,\n        slots,\n        name: 'RadioGroupOption',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let RadioGroupLabel = Label\nexport let RadioGroupDescription = Description\n", "import {\n  computed,\n  defineComponent,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  unref,\n\n  // Types\n  ComputedRef,\n  InjectionKey,\n} from 'vue'\n\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\n\n// ---\n\nlet LabelContext = Symbol('LabelContext') as InjectionKey<{\n  register(value: string): () => void\n  slot: Record<string, unknown>\n  name: string\n  props: Record<string, unknown>\n}>\n\nfunction useLabelContext() {\n  let context = inject(LabelContext, null)\n  if (context === null) {\n    let err = new Error('You used a <Label /> component, but it is not inside a parent.')\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useLabelContext)\n    throw err\n  }\n  return context\n}\n\nexport function useLabels({\n  slot = {},\n  name = 'Label',\n  props = {},\n}: {\n  slot?: Record<string, unknown>\n  name?: string\n  props?: Record<string, unknown>\n} = {}): ComputedRef<string | undefined> {\n  let labelIds = ref<string[]>([])\n  function register(value: string) {\n    labelIds.value.push(value)\n\n    return () => {\n      let idx = labelIds.value.indexOf(value)\n      if (idx === -1) return\n      labelIds.value.splice(idx, 1)\n    }\n  }\n\n  provide(LabelContext, { register, slot, name, props })\n\n  // The actual id's as string or undefined.\n  return computed(() => (labelIds.value.length > 0 ? labelIds.value.join(' ') : undefined))\n}\n\n// ---\n\nexport let Label = defineComponent({\n  name: 'Label',\n  props: {\n    as: { type: [Object, String], default: 'label' },\n    passive: { type: [Boolean], default: false },\n    id: { type: String, default: () => `headlessui-label-${useId()}` },\n  },\n  setup(myProps, { slots, attrs }) {\n    let context = useLabelContext()\n\n    onMounted(() => onUnmounted(context.register(myProps.id)))\n\n    return () => {\n      let { name = 'Label', slot = {}, props = {} } = context\n      let { id, passive, ...theirProps } = myProps\n      let ourProps = {\n        ...Object.entries(props).reduce(\n          (acc, [key, value]) => Object.assign(acc, { [key]: unref(value) }),\n          {}\n        ),\n        id,\n      }\n\n      if (passive) {\n        // @ts-expect-error props are dynamic via context, some components will provide an onClick\n        // then we can delete it.\n        delete ourProps['onClick']\n        // @ts-expect-error props are dynamic via context, some components will provide an onClick\n        // then we can delete it.\n        delete theirProps['onClick']\n      }\n\n      return render({\n        ourProps,\n        theirProps,\n        slot,\n        attrs,\n        slots,\n        name,\n      })\n    }\n  },\n})\n", "import {\n  Fragment,\n  computed,\n  defineComponent,\n  h,\n  inject,\n  provide,\n  ref,\n  watch,\n\n  // Types\n  InjectionKey,\n  Ref,\n  onMounted,\n} from 'vue'\n\nimport { render, compact, omit } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { Label, useLabels } from '../label/label'\nimport { Description, useDescriptions } from '../description/description'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\nimport { Hidden, Features as HiddenFeatures } from '../../internal/hidden'\nimport { attemptSubmit } from '../../utils/form'\nimport { useControllable } from '../../hooks/use-controllable'\nimport { dom } from '../../utils/dom'\n\ntype StateDefinition = {\n  // State\n  switchRef: Ref<HTMLButtonElement | null>\n  labelledby: Ref<string | undefined>\n  describedby: Ref<string | undefined>\n}\n\nlet GroupContext = Symbol('GroupContext') as InjectionKey<StateDefinition>\n\n// ---\n\nexport let SwitchGroup = defineComponent({\n  name: 'SwitchGroup',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n  },\n  setup(props, { slots, attrs }) {\n    let switchRef = ref<StateDefinition['switchRef']['value']>(null)\n    let labelledby = useLabels({\n      name: 'SwitchLabel',\n      props: {\n        onClick() {\n          if (!switchRef.value) return\n          switchRef.value.click()\n          switchRef.value.focus({ preventScroll: true })\n        },\n      },\n    })\n    let describedby = useDescriptions({ name: 'SwitchDescription' })\n\n    let api = { switchRef, labelledby, describedby }\n\n    provide(GroupContext, api)\n\n    return () =>\n      render({ theirProps: props, ourProps: {}, slot: {}, slots, attrs, name: 'SwitchGroup' })\n  },\n})\n\n// ---\n\nexport let Switch = defineComponent({\n  name: 'Switch',\n  emits: { 'update:modelValue': (_value: boolean) => true },\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    modelValue: { type: Boolean, default: undefined },\n    defaultChecked: { type: Boolean, optional: true },\n    name: { type: String, optional: true },\n    value: { type: String, optional: true },\n    id: { type: String, default: () => `headlessui-switch-${useId()}` },\n  },\n  inheritAttrs: false,\n  setup(props, { emit, attrs, slots, expose }) {\n    let api = inject(GroupContext, null)\n\n    let [checked, theirOnChange] = useControllable(\n      computed(() => props.modelValue),\n      (value: boolean) => emit('update:modelValue', value),\n      computed(() => props.defaultChecked)\n    )\n\n    function toggle() {\n      theirOnChange(!checked.value)\n    }\n\n    let internalSwitchRef = ref<HTMLButtonElement | null>(null)\n    let switchRef = api === null ? internalSwitchRef : api.switchRef\n    let type = useResolveButtonType(\n      computed(() => ({ as: props.as, type: attrs.type })),\n      switchRef\n    )\n\n    expose({ el: switchRef, $el: switchRef })\n\n    function handleClick(event: MouseEvent) {\n      event.preventDefault()\n      toggle()\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      if (event.key === Keys.Space) {\n        event.preventDefault()\n        toggle()\n      } else if (event.key === Keys.Enter) {\n        attemptSubmit(event.currentTarget as HTMLElement)\n      }\n    }\n\n    // This is needed so that we can \"cancel\" the click event when we use the `Enter` key on a button.\n    function handleKeyPress(event: KeyboardEvent) {\n      event.preventDefault()\n    }\n\n    let form = computed(() => dom(switchRef)?.closest?.('form'))\n    onMounted(() => {\n      watch(\n        [form],\n        () => {\n          if (!form.value) return\n          if (props.defaultChecked === undefined) return\n\n          function handle() {\n            theirOnChange(props.defaultChecked)\n          }\n\n          form.value.addEventListener('reset', handle)\n          return () => {\n            form.value?.removeEventListener('reset', handle)\n          }\n        },\n        { immediate: true }\n      )\n    })\n\n    return () => {\n      let { id, name, value, ...theirProps } = props\n      let slot = { checked: checked.value }\n      let ourProps = {\n        id,\n        ref: switchRef,\n        role: 'switch',\n        type: type.value,\n        tabIndex: 0,\n        'aria-checked': checked.value,\n        'aria-labelledby': api?.labelledby.value,\n        'aria-describedby': api?.describedby.value,\n        onClick: handleClick,\n        onKeyup: handleKeyUp,\n        onKeypress: handleKeyPress,\n      }\n\n      return h(Fragment, [\n        name != null && checked.value != null\n          ? h(\n              Hidden,\n              compact({\n                features: HiddenFeatures.Hidden,\n                as: 'input',\n                type: 'checkbox',\n                hidden: true,\n                readOnly: true,\n                checked: checked.value,\n                name,\n                value,\n              })\n            )\n          : null,\n        render({\n          ourProps,\n          theirProps: { ...attrs, ...omit(theirProps, ['modelValue', 'defaultChecked']) },\n          slot,\n          attrs,\n          slots,\n          name: 'Switch',\n        }),\n      ])\n    }\n  },\n})\n\n// ---\n\nexport let SwitchLabel = Label\nexport let SwitchDescription = Description\n", "import {\n  Fragment,\n  computed,\n  defineComponent,\n  h,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  Ref,\n  watch,\n} from 'vue'\n\nimport { Features, render, omit } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { dom } from '../../utils/dom'\nimport { match } from '../../utils/match'\nimport { focusIn, Focus, FocusResult, sortByDomNode } from '../../utils/focus-management'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\nimport { FocusSentinel } from '../../internal/focus-sentinel'\nimport { microTask } from '../../utils/micro-task'\nimport { Hidden } from '../../internal/hidden'\nimport { getOwnerDocument } from '../../utils/owner'\n\nenum Direction {\n  Forwards,\n  Backwards,\n}\n\nenum Ordering {\n  Less = -1,\n  Equal = 0,\n  Greater = 1,\n}\n\ntype StateDefinition = {\n  // State\n  selectedIndex: Ref<number | null>\n  orientation: Ref<'vertical' | 'horizontal'>\n  activation: Ref<'auto' | 'manual'>\n\n  tabs: Ref<Ref<HTMLElement | null>[]>\n  panels: Ref<Ref<HTMLElement | null>[]>\n\n  // State mutators\n  setSelectedIndex(index: number): void\n  registerTab(tab: Ref<HTMLElement | null>): void\n  unregisterTab(tab: Ref<HTMLElement | null>): void\n  registerPanel(panel: Ref<HTMLElement | null>): void\n  unregisterPanel(panel: Ref<HTMLElement | null>): void\n}\n\nlet TabsContext = Symbol('TabsContext') as InjectionKey<StateDefinition>\n\nfunction useTabsContext(component: string) {\n  let context = inject(TabsContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <TabGroup /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useTabsContext)\n    throw err\n  }\n\n  return context\n}\n\nlet TabsSSRContext = Symbol('TabsSSRContext') as InjectionKey<\n  Ref<{ tabs: string[]; panels: string[] } | null>\n>\n\n// ---\n\nexport let TabGroup = defineComponent({\n  name: 'TabGroup',\n  emits: {\n    change: (_index: number) => true,\n  },\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    selectedIndex: { type: [Number], default: null },\n    defaultIndex: { type: [Number], default: 0 },\n    vertical: { type: [Boolean], default: false },\n    manual: { type: [Boolean], default: false },\n  },\n  inheritAttrs: false,\n  setup(props, { slots, attrs, emit }) {\n    let selectedIndex = ref<StateDefinition['selectedIndex']['value']>(\n      props.selectedIndex ?? props.defaultIndex\n    )\n    let tabs = ref<StateDefinition['tabs']['value']>([])\n    let panels = ref<StateDefinition['panels']['value']>([])\n\n    let isControlled = computed(() => props.selectedIndex !== null)\n    let realSelectedIndex = computed(() =>\n      isControlled.value ? props.selectedIndex : selectedIndex.value\n    )\n\n    function setSelectedIndex(indexToSet: number) {\n      let tabs = sortByDomNode(api.tabs.value, dom)\n      let panels = sortByDomNode(api.panels.value, dom)\n\n      let focusableTabs = tabs.filter((tab) => !dom(tab)?.hasAttribute('disabled'))\n\n      if (\n        // Underflow\n        indexToSet < 0 ||\n        // Overflow\n        indexToSet > tabs.length - 1\n      ) {\n        let direction = match(\n          selectedIndex.value === null // Not set yet\n            ? Ordering.Equal\n            : Math.sign(indexToSet - selectedIndex.value!),\n          {\n            [Ordering.Less]: () => Direction.Backwards,\n            [Ordering.Equal]: () => {\n              return match(Math.sign(indexToSet), {\n                [Ordering.Less]: () => Direction.Forwards,\n                [Ordering.Equal]: () => Direction.Forwards,\n                [Ordering.Greater]: () => Direction.Backwards,\n              })\n            },\n            [Ordering.Greater]: () => Direction.Forwards,\n          }\n        )\n\n        selectedIndex.value = match(direction, {\n          [Direction.Forwards]: () => tabs.indexOf(focusableTabs[0]),\n          [Direction.Backwards]: () => tabs.indexOf(focusableTabs[focusableTabs.length - 1]),\n        })\n        api.tabs.value = tabs\n        api.panels.value = panels\n      }\n\n      // Middle\n      else {\n        let before = tabs.slice(0, indexToSet)\n        let after = tabs.slice(indexToSet)\n\n        let next = [...after, ...before].find((tab) => focusableTabs.includes(tab))\n        if (!next) return\n\n        let localSelectedIndex = tabs.indexOf(next) ?? api.selectedIndex.value\n        if (localSelectedIndex === -1) localSelectedIndex = api.selectedIndex.value\n\n        selectedIndex.value = localSelectedIndex\n        api.tabs.value = tabs\n        api.panels.value = panels\n      }\n    }\n\n    let api = {\n      selectedIndex: computed(() => selectedIndex.value ?? props.defaultIndex ?? null),\n      orientation: computed(() => (props.vertical ? 'vertical' : 'horizontal')),\n      activation: computed(() => (props.manual ? 'manual' : 'auto')),\n      tabs,\n      panels,\n      setSelectedIndex(index: number) {\n        if (realSelectedIndex.value !== index) {\n          emit('change', index)\n        }\n\n        if (!isControlled.value) {\n          setSelectedIndex(index)\n        }\n      },\n      registerTab(tab: typeof tabs['value'][number]) {\n        if (tabs.value.includes(tab)) return\n        let activeTab = tabs.value[selectedIndex.value!]\n\n        tabs.value.push(tab)\n        tabs.value = sortByDomNode(tabs.value, dom)\n\n        let localSelectedIndex = tabs.value.indexOf(activeTab) ?? selectedIndex.value\n        if (localSelectedIndex !== -1) {\n          selectedIndex.value = localSelectedIndex\n        }\n      },\n      unregisterTab(tab: typeof tabs['value'][number]) {\n        let idx = tabs.value.indexOf(tab)\n        if (idx !== -1) tabs.value.splice(idx, 1)\n      },\n      registerPanel(panel: typeof panels['value'][number]) {\n        if (panels.value.includes(panel)) return\n        panels.value.push(panel)\n        panels.value = sortByDomNode(panels.value, dom)\n      },\n      unregisterPanel(panel: typeof panels['value'][number]) {\n        let idx = panels.value.indexOf(panel)\n        if (idx !== -1) panels.value.splice(idx, 1)\n      },\n    }\n\n    provide(TabsContext, api)\n\n    let SSRCounter = ref({ tabs: [], panels: [] })\n    let mounted = ref(false)\n    onMounted(() => {\n      mounted.value = true\n    })\n    provide(\n      TabsSSRContext,\n      computed(() => (mounted.value ? null : SSRCounter.value))\n    )\n\n    let incomingSelectedIndex = computed(() => props.selectedIndex)\n\n    onMounted(() => {\n      watch(\n        [incomingSelectedIndex /* Deliberately skipping defaultIndex */],\n        () => setSelectedIndex(props.selectedIndex ?? props.defaultIndex),\n        { immediate: true }\n      )\n    })\n\n    watchEffect(() => {\n      if (!isControlled.value) return\n      if (realSelectedIndex.value == null) return\n      if (api.tabs.value.length <= 0) return\n\n      let sorted = sortByDomNode(api.tabs.value, dom)\n      let didOrderChange = sorted.some((tab, i) => dom(api.tabs.value[i]) !== dom(tab))\n\n      if (didOrderChange) {\n        api.setSelectedIndex(\n          sorted.findIndex((x) => dom(x) === dom(api.tabs.value[realSelectedIndex.value!]))\n        )\n      }\n    })\n\n    return () => {\n      let slot = { selectedIndex: selectedIndex.value }\n\n      return h(Fragment, [\n        tabs.value.length <= 0 &&\n          h(FocusSentinel, {\n            onFocus: () => {\n              for (let tab of tabs.value) {\n                let el = dom(tab)\n                if (el?.tabIndex === 0) {\n                  el.focus()\n                  return true\n                }\n              }\n\n              return false\n            },\n          }),\n        render({\n          theirProps: {\n            ...attrs,\n            ...omit(props, ['selectedIndex', 'defaultIndex', 'manual', 'vertical', 'onChange']),\n          },\n          ourProps: {},\n          slot,\n          slots,\n          attrs,\n          name: 'TabGroup',\n        }),\n      ])\n    }\n  },\n})\n\n// ---\n\nexport let TabList = defineComponent({\n  name: 'TabList',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { attrs, slots }) {\n    let api = useTabsContext('TabList')\n\n    return () => {\n      let slot = { selectedIndex: api.selectedIndex.value }\n\n      let ourProps = {\n        role: 'tablist',\n        'aria-orientation': api.orientation.value,\n      }\n      let theirProps = props\n\n      return render({\n        ourProps,\n        theirProps,\n        slot,\n        attrs,\n        slots,\n        name: 'TabList',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let Tab = defineComponent({\n  name: 'Tab',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    disabled: { type: [Boolean], default: false },\n    id: { type: String, default: () => `headlessui-tabs-tab-${useId()}` },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let api = useTabsContext('Tab')\n\n    let internalTabRef = ref<HTMLElement | null>(null)\n\n    expose({ el: internalTabRef, $el: internalTabRef })\n\n    onMounted(() => api.registerTab(internalTabRef))\n    onUnmounted(() => api.unregisterTab(internalTabRef))\n\n    let SSRContext = inject(TabsSSRContext)!\n    // Note: there's a divergence here between React and Vue. Vue can work with `indexOf` implementation while React on the server can't.\n    let mySSRIndex = computed(() => {\n      if (SSRContext.value) {\n        let mySSRIndex = SSRContext.value.tabs.indexOf(props.id)\n        if (mySSRIndex === -1) return SSRContext.value.tabs.push(props.id) - 1\n        return mySSRIndex\n      }\n\n      return -1\n    })\n\n    let myIndex = computed(() => {\n      let myIndex = api.tabs.value.indexOf(internalTabRef)\n      if (myIndex === -1) return mySSRIndex.value\n      return myIndex\n    })\n    let selected = computed(() => myIndex.value === api.selectedIndex.value)\n\n    function activateUsing(cb: () => FocusResult) {\n      let result = cb()\n      if (result === FocusResult.Success && api.activation.value === 'auto') {\n        let newTab = getOwnerDocument(internalTabRef)?.activeElement\n        let idx = api.tabs.value.findIndex((tab) => dom(tab) === newTab)\n        if (idx !== -1) api.setSelectedIndex(idx)\n      }\n      return result\n    }\n\n    function handleKeyDown(event: KeyboardEvent) {\n      let list = api.tabs.value.map((tab) => dom(tab)).filter(Boolean) as HTMLElement[]\n\n      if (event.key === Keys.Space || event.key === Keys.Enter) {\n        event.preventDefault()\n        event.stopPropagation()\n\n        api.setSelectedIndex(myIndex.value)\n        return\n      }\n\n      switch (event.key) {\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n\n          return activateUsing(() => focusIn(list, Focus.First))\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n\n          return activateUsing(() => focusIn(list, Focus.Last))\n      }\n\n      let result = activateUsing(() =>\n        match(api.orientation.value, {\n          vertical() {\n            if (event.key === Keys.ArrowUp) return focusIn(list, Focus.Previous | Focus.WrapAround)\n            if (event.key === Keys.ArrowDown) return focusIn(list, Focus.Next | Focus.WrapAround)\n            return FocusResult.Error\n          },\n          horizontal() {\n            if (event.key === Keys.ArrowLeft)\n              return focusIn(list, Focus.Previous | Focus.WrapAround)\n            if (event.key === Keys.ArrowRight) return focusIn(list, Focus.Next | Focus.WrapAround)\n            return FocusResult.Error\n          },\n        })\n      )\n\n      if (result === FocusResult.Success) {\n        return event.preventDefault()\n      }\n    }\n\n    let ready = ref(false)\n    function handleSelection() {\n      if (ready.value) return\n      ready.value = true\n\n      if (props.disabled) return\n\n      dom(internalTabRef)?.focus()\n      api.setSelectedIndex(myIndex.value)\n\n      microTask(() => {\n        ready.value = false\n      })\n    }\n\n    // This is important because we want to only focus the tab when it gets focus\n    // OR it finished the click event (mouseup). However, if you perform a `click`,\n    // then you will first get the `focus` and then get the `click` event.\n    function handleMouseDown(event: MouseEvent) {\n      event.preventDefault()\n    }\n\n    let type = useResolveButtonType(\n      computed(() => ({ as: props.as, type: attrs.type })),\n      internalTabRef\n    )\n\n    return () => {\n      let slot = { selected: selected.value }\n      let { id, ...theirProps } = props\n      let ourProps = {\n        ref: internalTabRef,\n        onKeydown: handleKeyDown,\n        onMousedown: handleMouseDown,\n        onClick: handleSelection,\n        id,\n        role: 'tab',\n        type: type.value,\n        'aria-controls': dom(api.panels.value[myIndex.value])?.id,\n        'aria-selected': selected.value,\n        tabIndex: selected.value ? 0 : -1,\n        disabled: props.disabled ? true : undefined,\n      }\n\n      return render({\n        ourProps,\n        theirProps,\n        slot,\n        attrs,\n        slots,\n        name: 'Tab',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let TabPanels = defineComponent({\n  name: 'TabPanels',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { slots, attrs }) {\n    let api = useTabsContext('TabPanels')\n\n    return () => {\n      let slot = { selectedIndex: api.selectedIndex.value }\n\n      return render({\n        theirProps: props,\n        ourProps: {},\n        slot,\n        attrs,\n        slots,\n        name: 'TabPanels',\n      })\n    }\n  },\n})\n\nexport let TabPanel = defineComponent({\n  name: 'TabPanel',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n    id: { type: String, default: () => `headlessui-tabs-panel-${useId()}` },\n    tabIndex: { type: Number, default: 0 },\n  },\n  setup(props, { attrs, slots, expose }) {\n    let api = useTabsContext('TabPanel')\n\n    let internalPanelRef = ref<HTMLElement | null>(null)\n\n    expose({ el: internalPanelRef, $el: internalPanelRef })\n\n    onMounted(() => api.registerPanel(internalPanelRef))\n    onUnmounted(() => api.unregisterPanel(internalPanelRef))\n\n    let SSRContext = inject(TabsSSRContext)!\n    let mySSRIndex = computed(() => {\n      if (SSRContext.value) {\n        let mySSRIndex = SSRContext.value.panels.indexOf(props.id)\n        if (mySSRIndex === -1) return SSRContext.value.panels.push(props.id) - 1\n        return mySSRIndex\n      }\n\n      return -1\n    })\n\n    let myIndex = computed(() => {\n      let myIndex = api.panels.value.indexOf(internalPanelRef)\n      if (myIndex === -1) return mySSRIndex.value\n      return myIndex\n    })\n    let selected = computed(() => myIndex.value === api.selectedIndex.value)\n\n    return () => {\n      let slot = { selected: selected.value }\n      let { id, tabIndex, ...theirProps } = props\n      let ourProps = {\n        ref: internalPanelRef,\n        id,\n        role: 'tabpanel',\n        'aria-labelledby': dom(api.tabs.value[myIndex.value])?.id,\n        tabIndex: selected.value ? tabIndex : -1,\n      }\n\n      if (!selected.value && props.unmount && !props.static) {\n        return h(Hidden, { as: 'span', ...ourProps })\n      }\n\n      return render({\n        ourProps,\n        theirProps,\n        slot,\n        attrs,\n        slots,\n        features: Features.Static | Features.RenderStrategy,\n        visible: selected.value,\n        name: 'TabPanel',\n      })\n    }\n  },\n})\n", "import { h, ref, defineComponent } from 'vue'\n\nimport { Hidden, Features } from './hidden'\n\nexport let FocusSentinel = defineComponent({\n  props: {\n    onFocus: {\n      type: Function,\n      required: true,\n    },\n  },\n  setup(props) {\n    let enabled = ref(true)\n\n    return () => {\n      if (!enabled.value) return null\n\n      return h(Hidden, {\n        as: 'button',\n        type: 'button',\n        features: Features.Focusable,\n        onFocus(event: FocusEvent) {\n          event.preventDefault()\n          let frame: ReturnType<typeof requestAnimationFrame>\n\n          let tries = 50\n          function forwardFocus() {\n            // Prevent infinite loops\n            if (tries-- <= 0) {\n              if (frame) cancelAnimationFrame(frame)\n              return\n            }\n\n            // Try to move focus to the correct element. This depends on the implementation\n            // of `onFocus` of course since it would be different for each place we use it in.\n            if (props.onFocus?.()) {\n              enabled.value = false\n              cancelAnimationFrame(frame)\n              return\n            }\n\n            // Retry\n            frame = requestAnimationFrame(forwardFocus)\n          }\n\n          frame = requestAnimationFrame(forwardFocus)\n        },\n      })\n    }\n  },\n})\n", "import {\n  computed,\n  defineComponent,\n  h,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  watch,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  Ref,\n  ConcreteComponent,\n  normalizeClass,\n} from 'vue'\n\nimport { useId } from '../../hooks/use-id'\nimport { match } from '../../utils/match'\nimport { env } from '../../utils/env'\n\nimport { Features, omit, render, RenderStrategy } from '../../utils/render'\nimport { Reason, transition } from './utils/transition'\nimport { dom } from '../../utils/dom'\nimport {\n  useOpenClosedProvider,\n  State,\n  useOpenClosed,\n  hasOpenClosed,\n} from '../../internal/open-closed'\n\ntype ID = ReturnType<typeof useId>\n\nfunction splitClasses(classes: string = '') {\n  return classes.split(' ').filter((className) => className.trim().length > 1)\n}\n\ninterface TransitionContextValues {\n  show: Ref<boolean>\n  appear: Ref<boolean>\n}\nlet TransitionContext = Symbol('TransitionContext') as InjectionKey<TransitionContextValues | null>\n\nenum TreeStates {\n  Visible = 'visible',\n  Hidden = 'hidden',\n}\n\nfunction hasTransitionContext() {\n  return inject(TransitionContext, null) !== null\n}\n\nfunction useTransitionContext() {\n  let context = inject(TransitionContext, null)\n\n  if (context === null) {\n    throw new Error('A <TransitionChild /> is used but it is missing a parent <TransitionRoot />.')\n  }\n\n  return context\n}\n\nfunction useParentNesting() {\n  let context = inject(NestingContext, null)\n\n  if (context === null) {\n    throw new Error('A <TransitionChild /> is used but it is missing a parent <TransitionRoot />.')\n  }\n\n  return context\n}\n\ninterface NestingContextValues {\n  children: Ref<{ id: ID; state: TreeStates }[]>\n  register: (id: ID) => () => void\n  unregister: (id: ID, strategy?: RenderStrategy) => void\n}\n\nlet NestingContext = Symbol('NestingContext') as InjectionKey<NestingContextValues | null>\n\nfunction hasChildren(\n  bag: NestingContextValues['children'] | { children: NestingContextValues['children'] }\n): boolean {\n  if ('children' in bag) return hasChildren(bag.children)\n  return bag.value.filter(({ state }) => state === TreeStates.Visible).length > 0\n}\n\nfunction useNesting(done?: () => void) {\n  let transitionableChildren = ref<NestingContextValues['children']['value']>([])\n\n  let mounted = ref(false)\n  onMounted(() => (mounted.value = true))\n  onUnmounted(() => (mounted.value = false))\n\n  function unregister(childId: ID, strategy = RenderStrategy.Hidden) {\n    let idx = transitionableChildren.value.findIndex(({ id }) => id === childId)\n    if (idx === -1) return\n\n    match(strategy, {\n      [RenderStrategy.Unmount]() {\n        transitionableChildren.value.splice(idx, 1)\n      },\n      [RenderStrategy.Hidden]() {\n        transitionableChildren.value[idx].state = TreeStates.Hidden\n      },\n    })\n\n    if (!hasChildren(transitionableChildren) && mounted.value) {\n      done?.()\n    }\n  }\n\n  function register(childId: ID) {\n    let child = transitionableChildren.value.find(({ id }) => id === childId)\n    if (!child) {\n      transitionableChildren.value.push({ id: childId, state: TreeStates.Visible })\n    } else if (child.state !== TreeStates.Visible) {\n      child.state = TreeStates.Visible\n    }\n\n    return () => unregister(childId, RenderStrategy.Unmount)\n  }\n\n  return {\n    children: transitionableChildren,\n    register,\n    unregister,\n  }\n}\n\n// ---\n\nlet TransitionChildRenderFeatures = Features.RenderStrategy\n\nexport let TransitionChild = defineComponent({\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    show: { type: [Boolean], default: null },\n    unmount: { type: [Boolean], default: true },\n    appear: { type: [Boolean], default: false },\n    enter: { type: [String], default: '' },\n    enterFrom: { type: [String], default: '' },\n    enterTo: { type: [String], default: '' },\n    entered: { type: [String], default: '' },\n    leave: { type: [String], default: '' },\n    leaveFrom: { type: [String], default: '' },\n    leaveTo: { type: [String], default: '' },\n  },\n  emits: {\n    beforeEnter: () => true,\n    afterEnter: () => true,\n    beforeLeave: () => true,\n    afterLeave: () => true,\n  },\n  setup(props, { emit, attrs, slots, expose }) {\n    if (!hasTransitionContext() && hasOpenClosed()) {\n      return () =>\n        h(\n          TransitionRoot,\n          {\n            ...props,\n            onBeforeEnter: () => emit('beforeEnter'),\n            onAfterEnter: () => emit('afterEnter'),\n            onBeforeLeave: () => emit('beforeLeave'),\n            onAfterLeave: () => emit('afterLeave'),\n          },\n          slots\n        )\n    }\n\n    let container = ref<HTMLElement | null>(null)\n    let state = ref(TreeStates.Visible)\n    let strategy = computed(() => (props.unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden))\n\n    expose({ el: container, $el: container })\n\n    let { show, appear } = useTransitionContext()\n    let { register, unregister } = useParentNesting()\n\n    let initial = { value: true }\n\n    let id = useId()\n\n    let isTransitioning = { value: false }\n\n    let nesting = useNesting(() => {\n      // When all children have been unmounted we can only hide ourselves if and only if we are not\n      // transitioning ourselves. Otherwise we would unmount before the transitions are finished.\n      if (!isTransitioning.value && state.value !== TreeStates.Hidden) {\n        state.value = TreeStates.Hidden\n        unregister(id)\n        emit('afterLeave')\n      }\n    })\n\n    onMounted(() => {\n      let unregister = register(id)\n      onUnmounted(unregister)\n    })\n\n    watchEffect(() => {\n      // If we are in another mode than the Hidden mode then ignore\n      if (strategy.value !== RenderStrategy.Hidden) return\n      if (!id) return\n\n      // Make sure that we are visible\n      if (show && state.value !== TreeStates.Visible) {\n        state.value = TreeStates.Visible\n        return\n      }\n\n      match(state.value, {\n        [TreeStates.Hidden]: () => unregister(id),\n        [TreeStates.Visible]: () => register(id),\n      })\n    })\n\n    let enterClasses = splitClasses(props.enter)\n    let enterFromClasses = splitClasses(props.enterFrom)\n    let enterToClasses = splitClasses(props.enterTo)\n\n    let enteredClasses = splitClasses(props.entered)\n\n    let leaveClasses = splitClasses(props.leave)\n    let leaveFromClasses = splitClasses(props.leaveFrom)\n    let leaveToClasses = splitClasses(props.leaveTo)\n\n    onMounted(() => {\n      watchEffect(() => {\n        if (state.value === TreeStates.Visible) {\n          let domElement = dom(container)\n          // When you return `null` from a component, the actual DOM reference will\n          // be an empty comment... This means that we can never check for the DOM\n          // node to be `null`. So instead we check for an empty comment.\n          let isEmptyDOMNode = domElement instanceof Comment && domElement.data === ''\n          if (isEmptyDOMNode) {\n            throw new Error('Did you forget to passthrough the `ref` to the actual DOM node?')\n          }\n        }\n      })\n    })\n\n    function executeTransition(onInvalidate: (cb: () => void) => void) {\n      // Skipping initial transition\n      let skip = initial.value && !appear.value\n\n      let node = dom(container)\n      if (!node || !(node instanceof HTMLElement)) return\n      if (skip) return\n\n      isTransitioning.value = true\n\n      if (show.value) emit('beforeEnter')\n      if (!show.value) emit('beforeLeave')\n\n      onInvalidate(\n        show.value\n          ? transition(\n              node,\n              enterClasses,\n              enterFromClasses,\n              enterToClasses,\n              enteredClasses,\n              (reason) => {\n                isTransitioning.value = false\n                if (reason === Reason.Finished) emit('afterEnter')\n              }\n            )\n          : transition(\n              node,\n              leaveClasses,\n              leaveFromClasses,\n              leaveToClasses,\n              enteredClasses,\n              (reason) => {\n                isTransitioning.value = false\n\n                if (reason !== Reason.Finished) return\n\n                // When we don't have children anymore we can safely unregister from the parent and hide\n                // ourselves.\n                if (!hasChildren(nesting)) {\n                  state.value = TreeStates.Hidden\n                  unregister(id)\n                  emit('afterLeave')\n                }\n              }\n            )\n      )\n    }\n\n    onMounted(() => {\n      watch(\n        [show],\n        (_oldValues, _newValues, onInvalidate) => {\n          executeTransition(onInvalidate)\n          initial.value = false\n        },\n        { immediate: true }\n      )\n    })\n\n    provide(NestingContext, nesting)\n    useOpenClosedProvider(\n      computed(() =>\n        match(state.value, {\n          [TreeStates.Visible]: State.Open,\n          [TreeStates.Hidden]: State.Closed,\n        })\n      )\n    )\n\n    return () => {\n      let {\n        appear: _appear,\n        show: _show,\n\n        // Class names\n        enter,\n        enterFrom,\n        enterTo,\n        entered,\n        leave,\n        leaveFrom,\n        leaveTo,\n        ...rest\n      } = props\n\n      let ourProps = { ref: container }\n      let theirProps = {\n        ...rest,\n        ...(appear && show && env.isServer\n          ? {\n              // Already apply the `enter` and `enterFrom` on the server if required\n              class: normalizeClass([rest.class, ...enterClasses, ...enterFromClasses]),\n            }\n          : {}),\n      }\n\n      return render({\n        theirProps,\n        ourProps,\n        slot: {},\n        slots,\n        attrs,\n        features: TransitionChildRenderFeatures,\n        visible: state.value === TreeStates.Visible,\n        name: 'TransitionChild',\n      })\n    }\n  },\n})\n\n// ---\n\n// This exists to work around typescript circular inference problem\nlet _TransitionChild = TransitionChild as ConcreteComponent\n\nexport let TransitionRoot = defineComponent({\n  inheritAttrs: false,\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    show: { type: [Boolean], default: null },\n    unmount: { type: [Boolean], default: true },\n    appear: { type: [Boolean], default: false },\n    enter: { type: [String], default: '' },\n    enterFrom: { type: [String], default: '' },\n    enterTo: { type: [String], default: '' },\n    entered: { type: [String], default: '' },\n    leave: { type: [String], default: '' },\n    leaveFrom: { type: [String], default: '' },\n    leaveTo: { type: [String], default: '' },\n  },\n  emits: {\n    beforeEnter: () => true,\n    afterEnter: () => true,\n    beforeLeave: () => true,\n    afterLeave: () => true,\n  },\n  setup(props, { emit, attrs, slots }) {\n    let usesOpenClosedState = useOpenClosed()\n\n    let show = computed(() => {\n      if (props.show === null && usesOpenClosedState !== null) {\n        return match(usesOpenClosedState.value, {\n          [State.Open]: true,\n          [State.Closed]: false,\n        })\n      }\n\n      return props.show\n    })\n\n    watchEffect(() => {\n      if (![true, false].includes(show.value)) {\n        throw new Error('A <Transition /> is used but it is missing a `:show=\"true | false\"` prop.')\n      }\n    })\n\n    let state = ref(show.value ? TreeStates.Visible : TreeStates.Hidden)\n\n    let nestingBag = useNesting(() => {\n      state.value = TreeStates.Hidden\n    })\n\n    let initial = ref(true)\n    let transitionBag = {\n      show,\n      appear: computed(() => props.appear || !initial.value),\n    }\n\n    onMounted(() => {\n      watchEffect(() => {\n        initial.value = false\n\n        if (show.value) {\n          state.value = TreeStates.Visible\n        } else if (!hasChildren(nestingBag)) {\n          state.value = TreeStates.Hidden\n        }\n      })\n    })\n\n    provide(NestingContext, nestingBag)\n    provide(TransitionContext, transitionBag)\n\n    return () => {\n      let theirProps = omit(props, [\n        'show',\n        'appear',\n        'unmount',\n        'onBeforeEnter',\n        'onBeforeLeave',\n        'onAfterEnter',\n        'onAfterLeave',\n      ])\n      let sharedProps = { unmount: props.unmount }\n\n      return render({\n        ourProps: {\n          ...sharedProps,\n          as: 'template',\n        },\n        theirProps: {},\n        slot: {},\n        slots: {\n          ...slots,\n          default: () => [\n            h(\n              _TransitionChild,\n              {\n                onBeforeEnter: () => emit('beforeEnter'),\n                onAfterEnter: () => emit('afterEnter'),\n                onBeforeLeave: () => emit('beforeLeave'),\n                onAfterLeave: () => emit('afterLeave'),\n                ...attrs,\n                ...sharedProps,\n                ...theirProps,\n              },\n              slots.default\n            ),\n          ],\n        },\n        attrs: {},\n        features: TransitionChildRenderFeatures,\n        visible: state.value === TreeStates.Visible,\n        name: 'Transition',\n      })\n    }\n  },\n})\n", "export function once<T>(cb: (...args: T[]) => void) {\n  let state = { called: false }\n\n  return (...args: T[]) => {\n    if (state.called) return\n    state.called = true\n    return cb(...args)\n  }\n}\n", "import { once } from '../../../utils/once'\nimport { disposables } from '../../../utils/disposables'\n\nfunction addClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.add(...classes)\n}\n\nfunction removeClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.remove(...classes)\n}\n\nexport enum Reason {\n  Finished = 'finished',\n  Cancelled = 'cancelled',\n}\n\nfunction waitForTransition(node: HTMLElement, done: (reason: Reason) => void) {\n  let d = disposables()\n\n  if (!node) return d.dispose\n\n  // Safari returns a comma separated list of values, so let's sort them and take the highest value.\n  let { transitionDuration, transitionDelay } = getComputedStyle(node)\n\n  let [durationMs, delaysMs] = [transitionDuration, transitionDelay].map((value) => {\n    let [resolvedValue = 0] = value\n      .split(',')\n      // Remove falseys we can't work with\n      .filter(Boolean)\n      // Values are returned as `0.3s` or `75ms`\n      .map((v) => (v.includes('ms') ? parseFloat(v) : parseFloat(v) * 1000))\n      .sort((a, z) => z - a)\n\n    return resolvedValue\n  })\n\n  // Waiting for the transition to end. We could use the `transitionend` event, however when no\n  // actual transition/duration is defined then the `transitionend` event is not fired.\n  //\n  // TODO: Downside is, when you slow down transitions via devtools this timeout is still using the\n  // full 100% speed instead of the 25% or 10%.\n  if (durationMs !== 0) {\n    d.setTimeout(() => done(Reason.Finished), durationMs + delaysMs)\n  } else {\n    // No transition is happening, so we should cleanup already. Otherwise we have to wait until we\n    // get disposed.\n    done(Reason.Finished)\n  }\n\n  // If we get disposed before the timeout runs we should cleanup anyway\n  d.add(() => done(Reason.Cancelled))\n\n  return d.dispose\n}\n\nexport function transition(\n  node: HTMLElement,\n  base: string[],\n  from: string[],\n  to: string[],\n  entered: string[],\n  done?: (reason: Reason) => void\n) {\n  let d = disposables()\n  let _done = done !== undefined ? once(done) : () => {}\n\n  removeClasses(node, ...entered)\n  addClasses(node, ...base, ...from)\n\n  d.nextFrame(() => {\n    removeClasses(node, ...from)\n    addClasses(node, ...to)\n\n    d.add(\n      waitForTransition(node, (reason) => {\n        removeClasses(node, ...to, ...base)\n        addClasses(node, ...entered)\n        return _done(reason)\n      })\n    )\n  })\n\n  // Once we get disposed, we should ensure that we cleanup after ourselves. In case of an unmount,\n  // the node itself will be nullified and will be a no-op. In case of a full transition the classes\n  // are already removed which is also a no-op. However if you go from enter -> leave mid-transition\n  // then we have some leftovers that should be cleaned.\n  d.add(() => removeClasses(node, ...base, ...from, ...to, ...entered))\n\n  // When we get disposed early, than we should also call the done method but switch the reason.\n  d.add(() => _done(Reason.Cancelled))\n\n  return d.dispose\n}\n"],
  "mappings": "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",
  "names": []
}
